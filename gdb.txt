warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    $0xcec0092,%edx
0x00008003 in ?? ()
=> 0x00008003:	ec	in     (%dx),%al
0x00008004 in ?? ()
=> 0x00008004:	0c 02	or     $0x2,%al
$1 = 2
A syntax error in expression, near `%al'.
0x00008006 in ?? ()
=> 0x00008006:	ee	out    %al,(%dx)
0x00008007 in ?? ()
=> 0x00008007:	66 ba 00 00	mov    $0x0,%dx
0x0000800d in ?? ()
=> 0x0000800d:	66 b8 9d 80	mov    $0x809d,%ax
0x00008013 in ?? ()
=> 0x00008013:	66 b9 00 10	mov    $0x1000,%cx
0x00008019 in ?? ()
=> 0x00008019:	66 f7 f1	div    %cx
A syntax error in expression, near `$edx $ecx'.
$2 = 32925
$3 = 0x809d
$4 = 0x0
$5 = 0x1000
0x0000801c in ?? ()
=> 0x0000801c:	66 f7 e1	mul    %cx
$6 = 0x8
$7 = 0x9d
0x0000801f in ?? ()
=> 0x0000801f:	66 89 c3	mov    %ax,%bx
$8 = 0x8000
0x00008022 in ?? ()
=> 0x00008022:	66 83 fa 00	cmp    $0x0,%dx
0x00008026 in ?? ()
=> 0x00008026:	7e 07	jle    0x802f
0x0000802f in ?? ()
=> 0x0000802f:	66 89 d8	mov    %bx,%ax
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    $0xcec0092,%edx
0x00008003 in ?? ()
=> 0x00008003:	ec	in     (%dx),%al
0x00008004 in ?? ()
=> 0x00008004:	0c 02	or     $0x2,%al
0x00008006 in ?? ()
=> 0x00008006:	ee	out    %al,(%dx)
0x00008007 in ?? ()
=> 0x00008007:	66 ba 00 00	mov    $0x0,%dx
0x0000800d in ?? ()
=> 0x0000800d:	66 b8 96 80	mov    $0x8096,%ax
0x00008013 in ?? ()
=> 0x00008013:	66 b9 00 10	mov    $0x1000,%cx
0x00008019 in ?? ()
=> 0x00008019:	66 f7 f1	div    %cx
0x0000801c in ?? ()
=> 0x0000801c:	66 f7 e1	mul    %cx
0x0000801f in ?? ()
=> 0x0000801f:	66 83 fa 00	cmp    $0x0,%dx
0x00008023 in ?? ()
=> 0x00008023:	76 06	jbe    0x802b
0x0000802b in ?? ()
=> 0x0000802b:	66 bb 92 80	mov    $0x8092,%bx
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    $0xcec0092,%edx
$1 = 0
$2 = (void *) 0x7bff
0x00008003 in ?? ()
=> 0x00008003:	ec	in     (%dx),%al
0x00008004 in ?? ()
=> 0x00008004:	0c 02	or     $0x2,%al
0x00008006 in ?? ()
=> 0x00008006:	ee	out    %al,(%dx)
0x00008007 in ?? ()
=> 0x00008007:	66 ba 00 00	mov    $0x0,%dx
0x0000800d in ?? ()
=> 0x0000800d:	66 b8 96 80	mov    $0x8096,%ax
0x00008013 in ?? ()
=> 0x00008013:	66 b9 00 10	mov    $0x1000,%cx
0x00008019 in ?? ()
=> 0x00008019:	66 f7 f1	div    %cx
0x0000801c in ?? ()
=> 0x0000801c:	66 f7 e1	mul    %cx
0x0000801f in ?? ()
=> 0x0000801f:	66 83 fa 00	cmp    $0x0,%dx
$3 = 32768
$4 = 0x8000
$5 = 0x0
$6 = 0x0
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    $0xcec0092,%edx
0x00008003 in ?? ()
=> 0x00008003:	ec	in     (%dx),%al
0x00008004 in ?? ()
=> 0x00008004:	0c 02	or     $0x2,%al
0x00008006 in ?? ()
=> 0x00008006:	ee	out    %al,(%dx)
0x00008007 in ?? ()
=> 0x00008007:	66 ba 00 00	mov    $0x0,%dx
0x0000800d in ?? ()
=> 0x0000800d:	66 b8 96 80	mov    $0x8096,%ax
0x00008013 in ?? ()
=> 0x00008013:	66 b9 00 10	mov    $0x1000,%cx
0x00008019 in ?? ()
=> 0x00008019:	66 f7 f1	div    %cx
0x0000801c in ?? ()
=> 0x0000801c:	66 f7 e1	mul    %cx
$1 = 150
$2 = 0x96
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
0x0000e05b in ?? ()
=> 0x0000e05b:	00 00	add    %al,(%eax)
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    $0xcec0092,%edx
0x00008003 in ?? ()
=> 0x00008003:	ec	in     (%dx),%al
0x00008004 in ?? ()
=> 0x00008004:	0c 02	or     $0x2,%al
0x00008006 in ?? ()
=> 0x00008006:	ee	out    %al,(%dx)
0x00008007 in ?? ()
=> 0x00008007:	66 ba 00 00	mov    $0x0,%dx
0x0000800d in ?? ()
=> 0x0000800d:	66 b8 96 80	mov    $0x8096,%ax
0x00008013 in ?? ()
=> 0x00008013:	66 b9 00 10	mov    $0x1000,%cx
0x00008019 in ?? ()
=> 0x00008019:	66 f7 f1	div    %cx
0x0000801c in ?? ()
=> 0x0000801c:	66 83 fa 00	cmp    $0x0,%dx
$1 = 0x96
0x00008020 in ?? ()
=> 0x00008020:	66 f7 e1	mul    %cx
0x00008023 in ?? ()
=> 0x00008023:	74 06	je     0x802b
$2 = 0x8000
$3 = 0x0
0x00008025 in ?? ()
=> 0x00008025:	66 05 00 10	add    $0x1000,%ax
0x0000802b in ?? ()
=> 0x0000802b:	66 bb 92 80	mov    $0x8092,%bx
$4 = 0x9000
0x00008031 in ?? ()
=> 0x00008031:	66 67 89 03	mov    %ax,(%bp,%di)
0x00008035 in ?? ()
=> 0x00008035:	66 89 c7	mov    %ax,%di
0x8090:	0xff	0x00	0x00	0x90	0x00	0x00	0x00	0x00
0x8098:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x80a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x80a8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Dump of assembler code from 0x8035 to 0x8065:
=> 0x00008035:	mov    %ax,%di
   0x00008038:	mov    $0x8069,%ax
   0x0000803c:	add    %al,(%eax)
   0x0000803e:	mov    %ax,%si
   0x00008041:	mov    $0x6766000a,%ecx
   0x00008046:	mov    (%esi),%eax
   0x00008048:	mov    %ax,(%bx)
   0x0000804c:	add    $0x4,%di
   0x00008050:	loop   0x8044
   0x00008052:	mov    $0x8092,%bx
   0x00008056:	add    %al,(%eax)
   0x00008058:	lgdtl  (%bp,%di)
   0x0000805c:	mov    %cr0,%eax
   0x0000805f:	or     $0x1,%ax
   0x00008063:	mov    %eax,%cr0
End of assembler dump.
Breakpoint 2 at 0x8052
Continuing.

Breakpoint 2, 0x00008052 in ?? ()
=> 0x00008052:	66 bb 92 80	mov    $0x8092,%bx
0x9000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8031
Continuing.

Breakpoint 1, 0x00008031 in ?? ()
=> 0x00008031:	66 67 89 03	mov    %ax,(%bp,%di)
Dump of assembler code from 0x8031 to 0x8061:
=> 0x00008031:	mov    %ax,(%bp,%di)
   0x00008035:	mov    %ax,%di
   0x00008038:	mov    $0x8069,%ax
   0x0000803c:	add    %al,(%eax)
   0x0000803e:	mov    %ax,%si
   0x00008041:	mov    $0x6766000a,%ecx
   0x00008046:	mov    (%esi),%eax
   0x00008048:	mov    %ax,(%bx)
   0x0000804c:	add    $0x4,%di
   0x00008050:	loop   0x8044
   0x00008052:	mov    $0x8092,%bx
   0x00008056:	add    %al,(%eax)
   0x00008058:	lgdtl  (%bp,%di)
   0x0000805c:	mov    %cr0,%eax
   0x0000805f:	or     $0x1,%ax
End of assembler dump.
0x00008035 in ?? ()
=> 0x00008035:	66 89 c7	mov    %ax,%di
0x8096:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x809e:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x80a6:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x80ae:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x8069:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x8071:	0x00	0xcf	0x9a	0x00	0x00	0x00	0xff	0xff
0x8079:	0x00	0xcf	0x92	0x00	0x00	0x00	0xff	0xff
0x8081:	0x00	0xcf	0xfa	0x00	0x00	0x00	0xff	0xff
$1 = 0x8092
0x8092:	0x00	0x90	0x00	0x00	0x00	0x00	0x00	0x00
0x809a:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x80a2:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x80aa:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x00008038 in ?? ()
=> 0x00008038:	66 b8 69 80	mov    $0x8069,%ax
0x0000803e in ?? ()
=> 0x0000803e:	66 89 c6	mov    %ax,%si
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8031
Continuing.

Breakpoint 1, 0x00008031 in ?? ()
=> 0x00008031:	66 67 89 43 02	mov    %ax,0x2(%bp,%di)
0x00008036 in ?? ()
=> 0x00008036:	66 b9 28 00	mov    $0x28,%cx
0x0000803c in ?? ()
=> 0x0000803c:	66 67 89 0b	mov    %cx,(%bp,%di)
0x00008040 in ?? ()
=> 0x00008040:	66 89 c7	mov    %ax,%di
$1 = 0x809d
0x809d:	0x28	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x80a5:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x80ad:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x80b5:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8031
Continuing.

Breakpoint 1, 0x00008031 in ?? ()
=> 0x00008031:	66 67 89 0b	mov    %cx,(%bp,%di)
0x00008035 in ?? ()
=> 0x00008035:	66 bb 9d 80	mov    $0x809d,%bx
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x831
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8031
Continuing.

Breakpoint 1, 0x00008031 in ?? ()
=> 0x00008031:	66 b9 28 00	mov    $0x28,%cx
0x00008037 in ?? ()
=> 0x00008037:	66 67 89 0b	mov    %cx,(%bp,%di)
0x0000803b in ?? ()
=> 0x0000803b:	66 67 89 43 02	mov    %ax,0x2(%bp,%di)
0x00008040 in ?? ()
=> 0x00008040:	66 89 c7	mov    %ax,%di
$1 = 0x809d
0x809d:	0x28	0x00	0x00	0x90	0x00	0x00	0x00	0x00
0x80a5:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x80ad:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x80b5:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x00008043 in ?? ()
=> 0x00008043:	66 b8 74 80	mov    $0x8074,%ax
$2 = 0x9000
0x00008049 in ?? ()
=> 0x00008049:	66 89 c6	mov    %ax,%si
0x0000804c in ?? ()
=> 0x0000804c:	b9 0a 00 66 67	mov    $0x6766000a,%ecx
$3 = 0x8074
0x8074:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x807c:	0xff	0xff	0x00	0x00	0x00	0x9a	0xcf	0x00
0x8084:	0xff	0xff	0x00	0x00	0x00	0x92	0xcf	0x00
0x808c:	0xff	0xff	0x00	0x00	0x00	0xfa	0xcf	0x00
0x8074:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x807c:	0xff	0xff	0x00	0x00	0x00	0x9a	0xcf	0x00
0x8084:	0xff	0xff	0x00	0x00	0x00	0x92	0xcf	0x00
0x808c:	0xff	0xff	0x00	0x00	0x00	0xfa	0xcf	0x00
0x8094:	0xff	0xff	0x00	0x00	0x00	0xf2	0xcf	0x00
0x809c:	0x00	0x28	0x00	0x00	0x90	0x00	0x00	0x00
0x0000804f in ?? ()
=> 0x0000804f:	66 67 8b 06 66 67	mov    0x6766,%ax
0x00008053 in ?? ()
=> 0x00008053:	66 67 89 07	mov    %ax,(%bx)
$4 = 0x0
0x00008057 in ?? ()
=> 0x00008057:	66 83 c7 04	add    $0x4,%di
0x0000805b in ?? ()
=> 0x0000805b:	e2 f2	loop   0x804f
0x0000804f in ?? ()
=> 0x0000804f:	66 67 8b 06 66 67	mov    0x6766,%ax
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8031
Continuing.

Breakpoint 1, 0x00008031 in ?? ()
=> 0x00008031:	66 b9 28 00	mov    $0x28,%cx
0x00008037 in ?? ()
=> 0x00008037:	66 67 89 0b	mov    %cx,(%bp,%di)
0x0000803b in ?? ()
=> 0x0000803b:	66 67 89 43 02	mov    %ax,0x2(%bp,%di)
0x00008040 in ?? ()
=> 0x00008040:	66 89 c7	mov    %ax,%di
0x00008043 in ?? ()
=> 0x00008043:	66 b8 78 80	mov    $0x8078,%ax
0x00008049 in ?? ()
=> 0x00008049:	66 89 c6	mov    %ax,%si
0x0000804c in ?? ()
=> 0x0000804c:	b9 0a 00 66 67	mov    $0x6766000a,%ecx
0x0000804f in ?? ()
=> 0x0000804f:	66 67 8b 06 66 67	mov    0x6766,%ax
0x00008053 in ?? ()
=> 0x00008053:	66 67 89 07	mov    %ax,(%bx)
0x00008057 in ?? ()
=> 0x00008057:	66 83 c7 04	add    $0x4,%di
0x0000805b in ?? ()
=> 0x0000805b:	66 83 c6 04	add    $0x4,%si
0x0000805f in ?? ()
=> 0x0000805f:	e2 ee	loop   0x804f
0x0000804f in ?? ()
=> 0x0000804f:	66 67 8b 06 66 67	mov    0x6766,%ax
0x00008053 in ?? ()
=> 0x00008053:	66 67 89 07	mov    %ax,(%bx)
0x00008057 in ?? ()
=> 0x00008057:	66 83 c7 04	add    $0x4,%di
0x0000805b in ?? ()
=> 0x0000805b:	66 83 c6 04	add    $0x4,%si
0x0000805f in ?? ()
=> 0x0000805f:	e2 ee	loop   0x804f
0x0000804f in ?? ()
=> 0x0000804f:	66 67 8b 06 66 67	mov    0x6766,%ax
0x00008053 in ?? ()
=> 0x00008053:	66 67 89 07	mov    %ax,(%bx)
$1 = 0xffff
0x00008057 in ?? ()
=> 0x00008057:	66 83 c7 04	add    $0x4,%di
0x9000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9008:	0xff	0xff	0x00	0x00	0x00	0x00	0x00	0x00
0x9010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x0000805b in ?? ()
=> 0x0000805b:	66 83 c6 04	add    $0x4,%si
0x0000805f in ?? ()
=> 0x0000805f:	e2 ee	loop   0x804f
0x0000804f in ?? ()
=> 0x0000804f:	66 67 8b 06 66 67	mov    0x6766,%ax
0x00008053 in ?? ()
=> 0x00008053:	66 67 89 07	mov    %ax,(%bx)
$2 = 0xcf9a00
0x00008057 in ?? ()
=> 0x00008057:	66 83 c7 04	add    $0x4,%di
0x9000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9008:	0xff	0xff	0x00	0x00	0x00	0x9a	0xcf	0x00
0x9010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Dump of assembler code from 0x8057 to 0x8077:
=> 0x00008057:	add    $0x4,%di
   0x0000805b:	add    $0x4,%si
   0x0000805f:	loop   0x804f
   0x00008061:	mov    $0x80a1,%bx
   0x00008065:	add    %al,(%eax)
   0x00008067:	lgdtl  (%bp,%di)
   0x0000806b:	mov    %cr0,%eax
   0x0000806e:	or     $0x1,%ax
   0x00008072:	mov    %eax,%cr0
   0x00008075:	hlt    
   0x00008076:	jmp    0x8075
End of assembler dump.
Breakpoint 2 at 0x8061
Continuing.

Breakpoint 2, 0x00008061 in ?? ()
=> 0x00008061:	66 bb a1 80	mov    $0x80a1,%bx
0x9000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9008:	0xff	0xff	0x00	0x00	0x00	0x9a	0xcf	0x00
0x9010:	0xff	0xff	0x00	0x00	0x00	0x92	0xcf	0x00
0x9018:	0xff	0xff	0x00	0x00	0x00	0xfa	0xcf	0x00
0x9020:	0xff	0xff	0x00	0x00	0x00	0xf2	0xcf	0x00
0x9028:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x00008067 in ?? ()
=> 0x00008067:	67 0f 01 13	lgdtl  (%bp,%di)
0x0000806b in ?? ()
=> 0x0000806b:	0f 20 c0	mov    %cr0,%eax
0x0000806e in ?? ()
=> 0x0000806e:	66 83 c8 01	or     $0x1,%ax
0x00008072 in ?? ()
=> 0x00008072:	0f 22 c0	mov    %eax,%cr0
0x00008075 in ?? ()
=> 0x00008075:	f4	hlt    
0x00008075 in ?? ()
=> 0x00008075:	f4	hlt    
Continuing.

Breakpoint 1, 0x00008031 in ?? ()
=> 0x00008031:	66 b9 28 00	mov    $0x28,%cx
Breakpoint 3 at 0x8075
Continuing.

Breakpoint 2, 0x00008061 in ?? ()
=> 0x00008061:	66 bb a1 80	mov    $0x80a1,%bx
Continuing.

Breakpoint 3, 0x00008075 in ?? ()
=> 0x00008075:	f4	hlt    

Breakpoint 3, 0x00008075 in ?? ()
=> 0x00008075:	f4	hlt    

Breakpoint 3, 0x00008075 in ?? ()
=> 0x00008075:	f4	hlt    

Breakpoint 3, 0x00008075 in ?? ()
=> 0x00008075:	f4	hlt    

Breakpoint 3, 0x00008075 in ?? ()
=> 0x00008075:	f4	hlt    

Breakpoint 3, 0x00008075 in ?? ()
=> 0x00008075:	f4	hlt    

Breakpoint 3, 0x00008075 in ?? ()
=> 0x00008075:	f4	hlt    

Breakpoint 3, 0x00008075 in ?? ()
=> 0x00008075:	f4	hlt    

Breakpoint 3, 0x00008075 in ?? ()
=> 0x00008075:	f4	hlt    
Continuing.

Breakpoint 3, 0x00008075 in ?? ()
=> 0x00008075:	f4	hlt    
Continuing.

Breakpoint 3, 0x00008075 in ?? ()
=> 0x00008075:	f4	hlt    
Continuing.

Breakpoint 1, 0x00008031 in ?? ()
=> 0x00008031:	66 b9 28 00	mov    $0x28,%cx
Continuing.

Program received signal SIGINT, Interrupt.
0x0000d09f in ?? ()
=> 0x0000d09f:	00 00	add    %al,(%eax)
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    $0xcec0092,%edx
Dump of assembler code from 0x8031 to 0x8061:
   0x00008031:	mov    $0x28,%cx
   0x00008035:	add    %al,(%eax)
   0x00008037:	mov    %cx,(%bp,%di)
   0x0000803b:	mov    %ax,0x2(%bp,%di)
   0x00008040:	mov    %ax,%di
   0x00008043:	mov    $0x808c,%ax
   0x00008047:	add    %al,(%eax)
   0x00008049:	mov    %ax,%si
   0x0000804c:	mov    $0x6766000a,%ecx
   0x00008051:	mov    (%esi),%eax
   0x00008053:	mov    %ax,(%bx)
   0x00008057:	add    $0x4,%di
   0x0000805b:	add    $0x4,%si
   0x0000805f:	loop   0x804f
End of assembler dump.
Dump of assembler code from 0x805f to 0x808f:
   0x0000805f:	loop   0x804f
   0x00008061:	mov    $0x80b5,%bx
   0x00008065:	add    %al,(%eax)
   0x00008067:	lgdtl  (%bp,%di)
   0x0000806b:	mov    %cr0,%eax
   0x0000806e:	or     $0x1,%ax
   0x00008072:	mov    %eax,%cr0
   0x00008075:	mov    $0xc08e0010,%eax
   0x0000807a:	mov    %eax,%ds
   0x0000807c:	mov    %eax,%fs
   0x0000807e:	mov    %eax,%gs
   0x00008080:	mov    %eax,%ss
   0x00008082:	push   $0x8
   0x00008084:	push   $0xfacb8088
   0x00008089:	hlt    
   0x0000808a:	jmp    0x8088
   0x0000808c:	add    %al,(%eax)
   0x0000808e:	add    %al,(%eax)
End of assembler dump.
Breakpoint 2 at 0x8084
Continuing.

Breakpoint 2, 0x00008084 in ?? ()
=> 0x00008084:	68 88 80 cb fa	push   $0xfacb8088
0x00008087 in ?? ()
=> 0x00008087:	cb	lret   
0x00008088 in ?? ()
=> 0x00008088:	fa	cli    
$1 = 0x8
$2 = void
$3 = 0x8088
0x00008089 in ?? ()
=> 0x00008089:	f4	hlt    
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    $0xcec0092,%edx
0x7bf0:	0x00	0x00	0x00	0x08	0x00	0x00	0x00	0x9b
0x7bf8:	0x7d	0x00	0x58	0x7d	0x02	0xdf	0x7c	0x00
0x7c00:	0xeb	0x3c	0x00	0x5a	0x69	0x67	0x68	0x74
0x7c08:	0x63	0x68	0x00	0x00	0x02	0x01	0x01	0x00
$1 = (void *) 0x7bfa
Dump of assembler code from 0x7d58 to 0x7d78:
   0x00007d58:	mov    $0x24ec01f7,%edx
   0x00007d5d:	sarb   $0x75,(%eax,%eax,2)
   0x00007d61:	divb   0x1f2ba01(%eax)
   0x00007d67:	out    %al,(%dx)
   0x00007d68:	mov    %bx,%ax
   0x00007d6b:	mov    $0x66ee01f3,%edx
   0x00007d70:	shr    $0x8,%eax
   0x00007d73:	mov    $0x66ee01f4,%edx
End of assembler dump.
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    $0xcec0092,%edx
0x7bf0:	0x00	0x00	0x00	0x08	0x00	0x00	0x00	0xa1
0x7bf8:	0x7d	0x00	0x00	0x46	0x5e	0x7d	0x00	0x00
0x7c00:	0xeb	0x3c	0x00	0x5a	0x69	0x67	0x68	0x74
0x7c08:	0x63	0x68	0x00	0x00	0x02	0x01	0x01	0x00
eax            0x0                 0
ecx            0x0                 0
edx            0x0                 0
ebx            0x0                 0
esp            0x7bfc              0x7bfc
ebp            0x7bfe              0x7bfe
esi            0x0                 0
edi            0x0                 0
eip            0x8000              0x8000
eflags         0x202               [ IOPL=0 IF ]
cs             0x0                 0
ss             0x0                 0
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
fs_base        0x0                 0
gs_base        0x0                 0
k_gs_base      0x0                 0
cr0            0x10                [ ET ]
cr2            0x0                 0
cr3            0x0                 [ PDBR=0 PCID=0 ]
cr4            0x0                 [ ]
cr8            0x0                 0
efer           0x0                 [ ]
xmm0           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm1           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm2           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm3           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm4           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm5           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm6           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm7           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
mxcsr          0x1f80              [ IM DM ZM OM UM PM ]
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x808e
Continuing.

Program received signal SIGINT, Interrupt.
0x000080a2 in ?? ()
=> 0x000080a2:	eb fc	jmp    0x80a0
0x100000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0xffff0:	0xea	0x5b	0xe0	0x00	0xf0	0x30	0x36	0x2f
0xffff8:	0x32	0x33	0x2f	0x39	0x39	0x00	0xfc	0x47
0x100000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
A syntax error in expression, near `0x67452301'.
0xffff0:	0xea	0x5b	0xe0	0x00	0xf0	0x30	0x36	0x2f
0xffff8:	0x32	0x33	0x2f	0x39	0x39	0x00	0xfc	0x47
0x100000:	0x01	0x23	0x45	0x67	0x00	0x00	0x00	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    $0xcec0092,%edx
0x00008003 in ?? ()
=> 0x00008003:	ec	in     (%dx),%al
0x00008004 in ?? ()
=> 0x00008004:	0c 02	or     $0x2,%al
0x00008006 in ?? ()
=> 0x00008006:	ee	out    %al,(%dx)
0x00008007 in ?? ()
=> 0x00008007:	66 ba 00 00	mov    $0x0,%dx
0x0000800d in ?? ()
=> 0x0000800d:	66 b8 d9 80	mov    $0x80d9,%ax
0x00008013 in ?? ()
=> 0x00008013:	66 b9 00 10	mov    $0x1000,%cx
Dump of assembler code from 0x813 to 0x843:
   0x00000813:	add    %al,(%eax)
   0x00000815:	add    %al,(%eax)
   0x00000817:	add    %al,(%eax)
   0x00000819:	add    %al,(%eax)
   0x0000081b:	add    %al,(%eax)
   0x0000081d:	add    %al,(%eax)
   0x0000081f:	add    %al,(%eax)
   0x00000821:	add    %al,(%eax)
   0x00000823:	add    %al,(%eax)
   0x00000825:	add    %al,(%eax)
   0x00000827:	add    %al,(%eax)
   0x00000829:	add    %al,(%eax)
   0x0000082b:	add    %al,(%eax)
   0x0000082d:	add    %al,(%eax)
   0x0000082f:	add    %al,(%eax)
   0x00000831:	add    %al,(%eax)
   0x00000833:	add    %al,(%eax)
   0x00000835:	add    %al,(%eax)
   0x00000837:	add    %al,(%eax)
   0x00000839:	add    %al,(%eax)
   0x0000083b:	add    %al,(%eax)
   0x0000083d:	add    %al,(%eax)
   0x0000083f:	add    %al,(%eax)
   0x00000841:	add    %al,(%eax)
End of assembler dump.
Dump of assembler code from 0x8013 to 0x8043:
=> 0x00008013:	mov    $0x1000,%cx
   0x00008017:	add    %al,(%eax)
   0x00008019:	div    %cx
   0x0000801c:	cmp    $0x0,%dx
   0x00008020:	mul    %cx
   0x00008023:	je     0x802b
   0x00008025:	add    $0x1000,%ax
   0x00008029:	add    %al,(%eax)
   0x0000802b:	mov    $0x80d3,%bx
   0x0000802f:	add    %al,(%eax)
   0x00008031:	mov    $0x28,%cx
   0x00008035:	add    %al,(%eax)
   0x00008037:	mov    %cx,(%bp,%di)
   0x0000803b:	mov    %ax,0x2(%bp,%di)
   0x00008040:	mov    %ax,%di
End of assembler dump.
Breakpoint 2 at 0x8040
Continuing.

Breakpoint 2, 0x00008040 in ?? ()
=> 0x00008040:	66 89 c7	mov    %ax,%di
Dump of assembler code from 0x8040 to 0x8070:
=> 0x00008040:	mov    %ax,%di
   0x00008043:	mov    $0x80aa,%ax
   0x00008047:	add    %al,(%eax)
   0x00008049:	mov    %ax,%si
   0x0000804c:	mov    $0x6766000a,%ecx
   0x00008051:	mov    (%esi),%eax
   0x00008053:	mov    %ax,(%bx)
   0x00008057:	add    $0x4,%di
   0x0000805b:	add    $0x4,%si
   0x0000805f:	loop   0x804f
   0x00008061:	mov    $0x80d3,%bx
   0x00008065:	add    %al,(%eax)
   0x00008067:	lgdtl  (%bp,%di)
   0x0000806b:	mov    %cr0,%eax
   0x0000806e:	or     $0x1,%ax
End of assembler dump.
Breakpoint 3 at 0x8061
Continuing.

Breakpoint 3, 0x00008061 in ?? ()
=> 0x00008061:	66 bb d3 80	mov    $0x80d3,%bx
Dump of assembler code from 0x8061 to 0x8091:
=> 0x00008061:	mov    $0x80d3,%bx
   0x00008065:	add    %al,(%eax)
   0x00008067:	lgdtl  (%bp,%di)
   0x0000806b:	mov    %cr0,%eax
   0x0000806e:	or     $0x1,%ax
   0x00008072:	mov    %eax,%cr0
   0x00008075:	mov    $0xc08e0010,%eax
   0x0000807a:	mov    %eax,%ds
   0x0000807c:	mov    %eax,%fs
   0x0000807e:	mov    %eax,%gs
   0x00008080:	mov    %eax,%ss
   0x00008082:	ljmp   $0x20b8,$0x88087
   0x00008089:	add    %cl,0xbb66d8(%esi)
   0x0000808f:	add    %dl,(%eax)
End of assembler dump.
Breakpoint 4 at 0x8082
Continuing.

Breakpoint 4, 0x00008082 in ?? ()
=> 0x00008082:	ea 87 80 08 00 b8 20	ljmp   $0x20b8,$0x88087
0x00008087 in ?? ()
=> 0x00008087:	b8 20 00 8e d8	mov    $0xd88e0020,%eax
0x0000808c in ?? ()
=> 0x0000808c:	66 bb 00 00	mov    $0x0,%bx
0x00008090 in ?? ()
=> 0x00008090:	10 00	adc    %al,(%eax)
0x8080:	0x8e	0xd0	0xea	0x87	0x80	0x08	0x00	0xb8
0x8088:	0x20	0x00	0x8e	0xd8	0x66	0xbb	0x00	0x00
0x8090:	0x10	0x00	0x66	0xb8	0x01	0x23	0x45	0x67
0x8098:	0x3e	0x66	0x67	0x89	0x03	0x66	0xb8	0x00
0x00008092 in ?? ()
=> 0x00008092:	66 b8 01 23	mov    $0x2301,%ax
0x00008096 in ?? ()
=> 0x00008096:	45	inc    %ebp
$1 = 0x0
Please answer y or n.
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8061
Continuing.

Breakpoint 1, 0x00008061 in ?? ()
=> 0x00008061:	66 bb d3 80	mov    $0x80d3,%bx
Dump of assembler code from 0x8061 to 0x8091:
=> 0x00008061:	mov    $0x80d3,%bx
   0x00008065:	add    %al,(%eax)
   0x00008067:	lgdtl  (%bp,%di)
   0x0000806b:	mov    %cr0,%eax
   0x0000806e:	or     $0x1,%ax
   0x00008072:	mov    %eax,%cr0
   0x00008075:	mov    $0xc08e0010,%eax
   0x0000807a:	mov    %eax,%ds
   0x0000807c:	mov    %eax,%fs
   0x0000807e:	mov    %eax,%gs
   0x00008080:	mov    %eax,%ss
   0x00008082:	ljmp   $0x20b8,$0x88087
   0x00008089:	add    %cl,0xbb66d8(%esi)
   0x0000808f:	add    %dl,(%eax)
End of assembler dump.
Breakpoint 2 at 0x8082
Continuing.

Breakpoint 2, 0x00008082 in ?? ()
=> 0x00008082:	ea 87 80 08 00 b8 20	ljmp   $0x20b8,$0x88087
0x00008087 in ?? ()
=> 0x00008087:	b8 20 00 8e d8	mov    $0xd88e0020,%eax
0x0000808c in ?? ()
=> 0x0000808c:	66 bb 00 00	mov    $0x0,%bx
0x00008090 in ?? ()
=> 0x00008090:	10 00	adc    %al,(%eax)
$1 = 0xd88e0020
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8061
Continuing.

Breakpoint 1, 0x00008061 in ?? ()
=> 0x00008061:	66 bb d3 80	mov    $0x80d3,%bx
Dump of assembler code from 0x8061 to 0x8091:
=> 0x00008061:	mov    $0x80d3,%bx
   0x00008065:	add    %al,(%eax)
   0x00008067:	lgdtl  (%bp,%di)
   0x0000806b:	mov    %cr0,%eax
   0x0000806e:	or     $0x1,%ax
   0x00008072:	mov    %eax,%cr0
   0x00008075:	mov    $0xc08e0010,%eax
   0x0000807a:	mov    %eax,%ds
   0x0000807c:	mov    %eax,%fs
   0x0000807e:	mov    %eax,%gs
   0x00008080:	mov    %eax,%ss
   0x00008082:	ljmp   $0x20b8,$0x88087
   0x00008089:	add    %cl,0xbb66d8(%esi)
   0x0000808f:	add    %dl,(%eax)
End of assembler dump.
Breakpoint 2 at 0x8082
Continuing.

Breakpoint 2, 0x00008082 in ?? ()
=> 0x00008082:	ea 87 80 08 00 b8 20	ljmp   $0x20b8,$0x88087
0x00008087 in ?? ()
=> 0x00008087:	b8 20 00 8e d8	mov    $0xd88e0020,%eax
0x0000808c in ?? ()
=> 0x0000808c:	66 bb 00 00	mov    $0x0,%bx
warning: Error detected on fd 0
error detected on stdin
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8082
Continuing.

Breakpoint 1, 0x00008082 in ?? ()
=> 0x00008082:	ea 87 80 08 00 66 b8	ljmp   $0xb866,$0x88087
0x00008087 in ?? ()
=> 0x00008087:	66 b8 20 00	mov    $0x20,%ax
0x0000808b in ?? ()
=> 0x0000808b:	00 00	add    %al,(%eax)
0x0000808d in ?? ()
=> 0x0000808d:	8e d8	mov    %eax,%ds
0x0000808f in ?? ()
=> 0x0000808f:	66 bb 00 00	mov    $0x0,%bx
0x00008093 in ?? ()
=> 0x00008093:	10 00	adc    %al,(%eax)
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8082
Continuing.

Breakpoint 1, 0x00008082 in ?? ()
=> 0x00008082:	ea 87 80 08 00 66 b8	ljmp   $0xb866,$0x88087
eax            0x10                16
ecx            0x0                 0
edx            0x0                 0
ebx            0x80d6              32982
esp            0x7bfc              0x7bfc
ebp            0x7bfe              0x7bfe
esi            0x80d5              32981
edi            0x9028              36904
eip            0x8082              0x8082
eflags         0x206               [ IOPL=0 IF PF ]
cs             0x0                 0
ss             0x10                16
ds             0x10                16
es             0x10                16
fs             0x10                16
gs             0x10                16
fs_base        0x0                 0
gs_base        0x0                 0
k_gs_base      0x0                 0
cr0            0x11                [ ET PE ]
cr2            0x0                 0
cr3            0x0                 [ PDBR=0 PCID=0 ]
cr4            0x0                 [ ]
cr8            0x0                 0
efer           0x0                 [ ]
xmm0           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm1           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm2           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm3           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm4           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm5           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm6           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm7           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
mxcsr          0x1f80              [ IM DM ZM OM UM PM ]
$1 = void
$2 = void
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8082
Continuing.

Breakpoint 1, 0x00008082 in ?? ()
=> 0x00008082:	ea 87 80 08 00 66 b8	ljmp   $0xb866,$0x88087
0x9000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9008:	0xff	0xff	0x00	0x00	0x00	0x9a	0xcf	0x00
0x9010:	0xff	0xff	0x00	0x00	0x00	0x93	0xcf	0x00
0x9018:	0xff	0xff	0x00	0x00	0x01	0x9a	0xcf	0x00
0x9000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9008:	0xff	0xff	0x00	0x00	0x00	0x9a	0xcf	0x00
0x9010:	0xff	0xff	0x00	0x00	0x00	0x93	0xcf	0x00
0x9018:	0xff	0xff	0x00	0x00	0x01	0x9a	0xcf	0x00
0x9020:	0xff	0xff	0x00	0x00	0x01	0x92	0xcf	0x00
0x9028:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Dump of assembler code from 0x8082 to 0x80b2:
=> 0x00008082:	ljmp   $0xb866,$0x88087
   0x00008089:	and    %al,(%eax)
   0x0000808b:	add    %al,(%eax)
   0x0000808d:	mov    %eax,%ds
   0x0000808f:	mov    $0x0,%bx
   0x00008093:	adc    %al,(%eax)
   0x00008095:	mov    $0x2301,%ax
   0x00008099:	inc    %ebp
   0x0000809a:	addr16 mov %ax,%ds:(%bp,%di)
   0x000080a0:	mov    $0x7e00,%ax
   0x000080a4:	add    %al,(%eax)
   0x000080a6:	mov    %ax,%di
   0x000080a9:	cli    
   0x000080aa:	hlt    
   0x000080ab:	jmp    0x80a9
   0x000080ad:	add    %al,(%eax)
   0x000080af:	add    %al,(%eax)
   0x000080b1:	add    %al,(%eax)
End of assembler dump.
0x00008087 in ?? ()
=> 0x00008087:	66 b8 20 00	mov    $0x20,%ax
0x0000808b in ?? ()
=> 0x0000808b:	00 00	add    %al,(%eax)
0x0000808d in ?? ()
=> 0x0000808d:	8e d8	mov    %eax,%ds
0x0000808f in ?? ()
=> 0x0000808f:	66 bb 00 00	mov    $0x0,%bx
0x00008093 in ?? ()
=> 0x00008093:	10 00	adc    %al,(%eax)
0x00008095 in ?? ()
=> 0x00008095:	66 b8 01 23	mov    $0x2301,%ax
0x00008099 in ?? ()
=> 0x00008099:	45	inc    %ebp
0x0000809a in ?? ()
=> 0x0000809a:	67 3e 66 67 89 03	addr16 mov %ax,%ds:(%bp,%di)
Detaching from pid process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8082
Continuing.

Breakpoint 1, 0x00008082 in ?? ()
=> 0x00008082:	ea 87 80 08 00 bb 01	jmp    0x1bb:0x88087
0x00008087 in ?? ()
=> 0x00008087:	bb 01 00 c1 e3	mov    ebx,0xe3c10001
0x0000808c in ?? ()
=> 0x0000808c:	14 b8	adc    al,0xb8
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8082
Continuing.

Breakpoint 1, 0x00008082 in ?? ()
=> 0x00008082:	ea 87 80 08 00 bb 00	jmp    0xbb:0x88087
0x00008087 in ?? ()
=> 0x00008087:	bb 00 00 b8 01	mov    ebx,0x1b80000
Detaching from pid process 1
Remote connection closed
.gdbinit:4: Error in sourced command file:
Remote connection closed
Quit
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8082
Continuing.

Breakpoint 1, 0x00008082 in ?? ()
=> 0x00008082:	ea 87 80 08 00 bb 00	jmp    0xbb:0x88087
0x00008087 in ?? ()
=> 0x00008087:	bb 00 00 10 00	mov    ebx,0x100000
0x0000808c in ?? ()
=> 0x0000808c:	b8 01 23 3e 66	mov    eax,0x663e2301
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8082
Continuing.

Breakpoint 1, 0x00008082 in ?? ()
=> 0x00008082:	ea 87 80 08 00 bb 00	jmp    0xbb:0x88087
0x00008087 in ?? ()
=> 0x00008087:	bb 00 00 10 00	mov    ebx,0x100000
0x0000808c in ?? ()
=> 0x0000808c:	b8 45 67 23 01	mov    eax,0x1236745
0x00008091 in ?? ()
=> 0x00008091:	3e 66 67 89 03	mov    WORD PTR ds:[bp+di],ax
0x00008096 in ?? ()
=> 0x00008096:	66 b8 00 7e	mov    ax,0x7e00
0xffff0:	0xea	0x5b	0xe0	0x00	0xf0	0x30	0x36	0x2f
0xffff8:	0x32	0x33	0x2f	0x39	0x39	0x00	0xfc	0x47
0x100000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
$1 = 0x9028
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8082
Continuing.

Breakpoint 1, 0x00008082 in ?? ()
=> 0x00008082:	ea 87 80 08 00 b8 20	jmp    0x20b8:0x88087
0x00008087 in ?? ()
=> 0x00008087:	b8 20 00 00 00	mov    eax,0x20
0x0000808c in ?? ()
=> 0x0000808c:	8e d8	mov    ds,eax
0x0000808e in ?? ()
=> 0x0000808e:	b8 67 45 23 01	mov    eax,0x1234567
0x00008093 in ?? ()
=> 0x00008093:	bb 00 00 00 00	mov    ebx,0x0
0x00008098 in ?? ()
=> 0x00008098:	66 89 07	mov    WORD PTR [edi],ax
$1 = 0x9028
0x0000809b in ?? ()
=> 0x0000809b:	66 b8 00 7e	mov    ax,0x7e00
0x9028:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9030:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9038:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9040:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x109028:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x109030:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x109038:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x109040:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x0:	0x53	0xff	0x00	0xf0	0x53	0xff	0x00	0xf0
0x8:	0xc3	0xe2	0x00	0xf0	0x53	0xff	0x00	0xf0
0x10:	0x53	0xff	0x00	0xf0	0x54	0xff	0x00	0xf0
0x18:	0x53	0xff	0x00	0xf0	0x53	0xff	0x00	0xf0
Detaching from pid process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8082
Continuing.

Breakpoint 1, 0x00008082 in ?? ()
=> 0x00008082:	ea 87 80 08 00 bb 00	jmp    0xbb:0x88087
0x00008087 in ?? ()
=> 0x00008087:	bb 00 00 10 00	mov    ebx,0x100000
0x0000808c in ?? ()
=> 0x0000808c:	b8 67 45 23 01	mov    eax,0x1234567
0x00008091 in ?? ()
=> 0x00008091:	89 03	mov    DWORD PTR [ebx],eax
0x00008093 in ?? ()
=> 0x00008093:	b8 00 7e 00 00	mov    eax,0x7e00
0x100000:	0x67	0x45	0x23	0x01	0x00	0x00	0x00	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Detaching from pid process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8082
Continuing.

Breakpoint 1, 0x00008082 in ?? ()
=> 0x00008082:	ea 87 80 08 00 66 bb	jmp    0xbb66:0x88087
0x00008087 in ?? ()
=> 0x00008087:	66 bb 20 00	mov    bx,0x20
0x0000808b in ?? ()
=> 0x0000808b:	8e db	mov    ds,ebx
0x0000808d in ?? ()
=> 0x0000808d:	31 db	xor    ebx,ebx
0x0000808f in ?? ()
=> 0x0000808f:	b8 01 23 45 67	mov    eax,0x67452301
0x00008094 in ?? ()
=> 0x00008094:	3e 89 03	mov    DWORD PTR ds:[ebx],eax
0x00008097 in ?? ()
=> 0x00008097:	b8 00 7e 00 00	mov    eax,0x7e00
0x100000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8082
Continuing.

Breakpoint 1, 0x00008082 in ?? ()
=> 0x00008082:	ea 87 80 08 00 66 bb	jmp    0xbb66:0x88087
0x00008087 in ?? ()
=> 0x00008087:	66 bb 20 00	mov    bx,0x20
0x0000808b in ?? ()
=> 0x0000808b:	8e db	mov    ds,ebx
0x0000808d in ?? ()
=> 0x0000808d:	31 db	xor    ebx,ebx
0x0000808f in ?? ()
=> 0x0000808f:	b8 01 23 45 67	mov    eax,0x67452301
$1 = 0x0
$2 = 0x10
0x00008094 in ?? ()
=> 0x00008094:	3e 89 03	mov    DWORD PTR ds:[ebx],eax
$3 = 0x67452301
0x00008097 in ?? ()
=> 0x00008097:	b8 00 7e 00 00	mov    eax,0x7e00
0x100000:	0x01	0x23	0x45	0x67	0x00	0x00	0x00	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x7c00
Continuing.

Breakpoint 1, 0x00007c00 in ?? ()
=> 0x00007c00:	eb 3c	jmp    0x7c3e
0x00007c3e in ?? ()
=> 0x00007c3e:	ba d4 03 b0 0e	mov    edx,0xeb003d4
Dump of assembler code from 0x7c3e to 0x7c6e:
=> 0x00007c3e:	mov    edx,0xeb003d4
   0x00007c43:	out    dx,al
   0x00007c44:	mov    edx,0xb003d5
   0x00007c49:	out    dx,al
   0x00007c4a:	mov    edx,0xfb003d4
   0x00007c4f:	out    dx,al
   0x00007c50:	mov    edx,0xb003d5
   0x00007c55:	out    dx,al
   0x00007c56:	mov    edi,0xb80000
   0x00007c5b:	mov    eax,0xb8c08e
   0x00007c60:	pop    es
   0x00007c61:	mov    ecx,0x892607d0
   0x00007c66:	add    eax,0xe202c783
   0x00007c6b:	clc    
   0x00007c6c:	mov    eax,cs
End of assembler dump.
Dump of assembler code from 0x7c3e to 0x7c7e:
=> 0x00007c3e:	mov    edx,0xeb003d4
   0x00007c43:	out    dx,al
   0x00007c44:	mov    edx,0xb003d5
   0x00007c49:	out    dx,al
   0x00007c4a:	mov    edx,0xfb003d4
   0x00007c4f:	out    dx,al
   0x00007c50:	mov    edx,0xb003d5
   0x00007c55:	out    dx,al
   0x00007c56:	mov    edi,0xb80000
   0x00007c5b:	mov    eax,0xb8c08e
   0x00007c60:	pop    es
   0x00007c61:	mov    ecx,0x892607d0
   0x00007c66:	add    eax,0xe202c783
   0x00007c6b:	clc    
   0x00007c6c:	mov    eax,cs
   0x00007c6e:	mov    ds,eax
   0x00007c70:	mov    es,eax
   0x00007c72:	mov    eax,0xd08e0000
   0x00007c77:	mov    ax,0x7bff
   0x00007c7b:	add    BYTE PTR [eax],al
   0x00007c7d:	mov    bp,ax
End of assembler dump.
0x00007c41 in ?? ()
=> 0x00007c41:	b0 0e	mov    al,0xe
0x00007c43 in ?? ()
=> 0x00007c43:	ee	out    dx,al
0x00007c44 in ?? ()
=> 0x00007c44:	ba d5 03 b0 00	mov    edx,0xb003d5
0x00007c47 in ?? ()
=> 0x00007c47:	b0 00	mov    al,0x0
0x00007c49 in ?? ()
=> 0x00007c49:	ee	out    dx,al
0x00007c4a in ?? ()
=> 0x00007c4a:	ba d4 03 b0 0f	mov    edx,0xfb003d4
0x00007c4d in ?? ()
=> 0x00007c4d:	b0 0f	mov    al,0xf
0x00007c4f in ?? ()
=> 0x00007c4f:	ee	out    dx,al
0x00007c50 in ?? ()
=> 0x00007c50:	ba d5 03 b0 00	mov    edx,0xb003d5
0x00007c53 in ?? ()
=> 0x00007c53:	b0 00	mov    al,0x0
0x00007c55 in ?? ()
=> 0x00007c55:	ee	out    dx,al
0x00007c56 in ?? ()
=> 0x00007c56:	bf 00 00 b8 00	mov    edi,0xb80000
0x00007c59 in ?? ()
=> 0x00007c59:	b8 00 b8 8e c0	mov    eax,0xc08eb800
0x00007c5c in ?? ()
=> 0x00007c5c:	8e c0	mov    es,eax
0x00007c5e in ?? ()
=> 0x00007c5e:	b8 00 07 b9 d0	mov    eax,0xd0b90700
0x00007c61 in ?? ()
=> 0x00007c61:	b9 d0 07 26 89	mov    ecx,0x892607d0
0x00007c64 in ?? ()
=> 0x00007c64:	26 89 05 83 c7 02 e2	mov    DWORD PTR es:0xe202c783,eax
0x00007c67 in ?? ()
=> 0x00007c67:	83 c7 02	add    edi,0x2
Dump of assembler code from 0x7c67 to 0x7c97:
=> 0x00007c67:	add    edi,0x2
   0x00007c6a:	loop   0x7c64
   0x00007c6c:	mov    eax,cs
   0x00007c6e:	mov    ds,eax
   0x00007c70:	mov    es,eax
   0x00007c72:	mov    eax,0xd08e0000
   0x00007c77:	mov    ax,0x7bff
   0x00007c7b:	add    BYTE PTR [eax],al
   0x00007c7d:	mov    bp,ax
   0x00007c80:	mov    sp,ax
   0x00007c83:	mov    edi,0xbb667e00
   0x00007c88:	and    DWORD PTR [eax],eax
   0x00007c8a:	add    BYTE PTR [eax],al
   0x00007c8c:	call   0xbbfc7d4e
   0x00007c91:	add    BYTE PTR [eax],al
   0x00007c93:	mov    esi,ebx
   0x00007c95:	shl    esi,0x5
End of assembler dump.
Breakpoint 2 at 0x7c6c
Continuing.

Breakpoint 2, 0x00007c6c in ?? ()
=> 0x00007c6c:	8c c8	mov    eax,cs
Detaching from pid process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x7c6c
Continuing.

Breakpoint 1, 0x00007c6c in ?? ()
=> 0x00007c6c:	ea 71 7c 00 00 66 31	jmp    0x3166:0x7c71
0x00007c71 in ?? ()
=> 0x00007c71:	66 31 c0	xor    ax,ax
0x00007c74 in ?? ()
=> 0x00007c74:	8e d8	mov    ds,eax
0x00007c76 in ?? ()
=> 0x00007c76:	8e c0	mov    es,eax
0x00007c78 in ?? ()
=> 0x00007c78:	8e d0	mov    ss,eax
0x00007c7a in ?? ()
=> 0x00007c7a:	8e e0	mov    fs,eax
0x00007c7c in ?? ()
=> 0x00007c7c:	8e e8	mov    gs,eax
0x00007c7e in ?? ()
=> 0x00007c7e:	66 b8 fc 7b	mov    ax,0x7bfc
0x00007c84 in ?? ()
=> 0x00007c84:	66 89 c5	mov    bp,ax
0x00007c87 in ?? ()
=> 0x00007c87:	66 89 c4	mov    sp,ax
0x00007c8a in ?? ()
=> 0x00007c8a:	bf 00 7e 66 bb	mov    edi,0xbb667e00
$1 = 0x7bfc
0x00007c8d in ?? ()
=> 0x00007c8d:	66 bb 21 00	mov    bx,0x21
0x00007c93 in ?? ()
=> 0x00007c93:	e8 bd 00 fc bb	call   0xbbfc7d55
0x00007d53 in ?? ()
=> 0x00007d53:	0f 20 c6	mov    esi,cr0
$2 = 0x10
0x00007d56 in ?? ()
=> 0x00007d56:	66 89 f7	mov    di,si
0x00007d59 in ?? ()
=> 0x00007d59:	66 83 e6 fe	and    si,0xfffe
0x00007d5d in ?? ()
=> 0x00007d5d:	0f 22 c6	mov    cr0,esi
$3 = 0x10
0x00007d60 in ?? ()
=> 0x00007d60:	66 89 fe	mov    si,di
0x00007d63 in ?? ()
=> 0x00007d63:	ba f7 01 ec 24	mov    edx,0x24ec01f7
Dump of assembler code from 0x7d63 to 0x7de3:
=> 0x00007d63:	mov    edx,0x24ec01f7
   0x00007d68:	sar    BYTE PTR [eax+eax*2],0x75
   0x00007d6c:	div    BYTE PTR [eax+0x1f2ba01]
   0x00007d72:	out    dx,al
   0x00007d73:	mov    ax,bx
   0x00007d76:	mov    edx,0x66ee01f3
   0x00007d7b:	shr    eax,0x8
   0x00007d7e:	mov    edx,0x66ee01f4
   0x00007d83:	shr    eax,0x8
   0x00007d86:	mov    edx,0x66ee01f5
   0x00007d8b:	shr    eax,0x8
   0x00007d8e:	and    al,0xf
   0x00007d90:	or     al,0xe0
   0x00007d92:	mov    edx,0xbaee01f6
   0x00007d97:	test   DWORD PTR [ecx],0xbaee20b0
   0x00007d9d:	test   DWORD PTR [ecx],0x3c8824ec
   0x00007da3:	or     BYTE PTR [ebp-0xa],dh
   0x00007da6:	mov    edx,0xb901f0
   0x00007dab:	add    ebp,ebp
   0x00007dad:	mov    DWORD PTR ds:0xe202c783,eax
   0x00007db3:	clc    
   0x00007db4:	mov    cr0,esi
   0x00007db7:	ret    
   0x00007db8:	dec    esp
   0x00007db9:	dec    edi
   0x00007dba:	inc    ecx
   0x00007dbb:	inc    esp
   0x00007dbc:	inc    ebp
   0x00007dbd:	push   edx
   0x00007dbe:	and    BYTE PTR [eax],ah
   0x00007dc0:	and    BYTE PTR [eax],ah
   0x00007dc2:	and    BYTE PTR [eax],ah
   0x00007dc4:	add    BYTE PTR [eax+ebp*2+0x65],dl
   0x00007dc8:	and    BYTE PTR [edi+ebp*2+0x61],ch
   0x00007dcc:	fs gs jb 0x7df0
   0x00007dd0:	ja     0x7e33
   0x00007dd2:	jae    0x7df4
   0x00007dd4:	outs   dx,BYTE PTR ds:[esi]
   0x00007dd5:	outs   dx,DWORD PTR ds:[esi]
   0x00007dd6:	je     0x7df8
   0x00007dd8:	outs   dx,WORD PTR ds:[esi]
   0x00007dda:	jne    0x7e4a
   0x00007ddc:	fs and BYTE PTR cs:[esi+0x69],al
   0x00007de1:	ins    BYTE PTR es:[edi],dx
   0x00007de2:	and    BYTE PTR gs:[ecx+0x6e],ch
End of assembler dump.
0x00007d66 in ?? ()
=> 0x00007d66:	ec	in     al,dx
0x00007d67 in ?? ()
=> 0x00007d67:	24 c0	and    al,0xc0
0x7db0:	0xc7	0x02	0xe2	0xf8	0x0f	0x22	0xc6	0xc3
0x7db8:	0x4c	0x4f	0x41	0x44	0x45	0x52	0x20	0x20
0x7dc0:	0x20	0x20	0x20	0x20	0x00	0x54	0x68	0x65
0x7dc8:	0x20	0x6c	0x6f	0x61	0x64	0x65	0x72	0x20
0x7db0:	0xc7	0x02	0xe2	0xf8	0x0f	0x22	0xc6	0xc3
0x7db8:	0x4c	0x4f	0x41	0x44	0x45	0x52	0x20	0x20
0x7dc0:	0x20	0x20	0x20	0x20	0x00	0x54	0x68	0x65
0x7dc8:	0x20	0x6c	0x6f	0x61	0x64	0x65	0x72	0x20
Breakpoint 2 at 0x7db7
Continuing.

Breakpoint 2, 0x00007db7 in ?? ()
=> 0x00007db7:	c3	ret    
0x7e00:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x7e08:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x7e10:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x7e18:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    edx,0xcec0092
0x7bf0:	0x08	0x00	0x00	0x00	0xa8	0x7d	0x00	0x00
0x7bf8:	0x46	0x02	0xe7	0x7c	0x55	0x7d	0x00	0x00
0x7c00:	0xeb	0x3c	0x00	0x5a	0x69	0x67	0x68	0x74
0x7c08:	0x63	0x68	0x00	0x00	0x02	0x01	0x01	0x00
Dump of assembler code from 0x7d55 to 0x7d5f:
   0x00007d55:	mov    eax,cr0
   0x00007d58:	mov    si,ax
   0x00007d5b:	and    ax,0xfffe
End of assembler dump.
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    edx,0xcec0092
Continuing.

Program received signal SIGINT, Interrupt.
0x0000808b in ?? ()
=> 0x0000808b:	eb fc	jmp    0x8089
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Continuing.

Program received signal SIGINT, Interrupt.
0x0000808b in ?? ()
=> 0x0000808b:	eb fd	jmp    0x808a
[Inferior 1 (process 1) exited normally]
The program is not being run.
The program is not being run.
The program is not being run.
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8082
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    edx,0xcec0092
Dump of assembler code from 0x8000 to 0x8030:
=> 0x00008000:	mov    edx,0xcec0092
   0x00008005:	add    ch,dh
   0x00008007:	mov    dx,0x0
   0x0000800b:	add    BYTE PTR [eax],al
   0x0000800d:	mov    ax,0x8191
   0x00008011:	add    BYTE PTR [eax],al
   0x00008013:	mov    cx,0x1000
   0x00008017:	add    BYTE PTR [eax],al
   0x00008019:	div    cx
   0x0000801c:	cmp    dx,0x0
   0x00008020:	mul    cx
   0x00008023:	je     0x802b
   0x00008025:	add    ax,0x1000
   0x00008029:	add    BYTE PTR [eax],al
   0x0000802b:	mov    bx,0x818b
   0x0000802f:	add    BYTE PTR [eax],al
End of assembler dump.
Breakpoint 2 at 0x8020
Continuing.

Breakpoint 2, 0x00008020 in ?? ()
=> 0x00008020:	66 f7 e1	mul    cx
Dump of assembler code from 0x8020 to 0x8050:
=> 0x00008020:	mul    cx
   0x00008023:	je     0x802b
   0x00008025:	add    ax,0x1000
   0x00008029:	add    BYTE PTR [eax],al
   0x0000802b:	mov    bx,0x818b
   0x0000802f:	add    BYTE PTR [eax],al
   0x00008031:	mov    cx,0x28
   0x00008035:	add    BYTE PTR [eax],al
   0x00008037:	mov    WORD PTR [bp+di],cx
   0x0000803b:	mov    WORD PTR [bp+di+0x2],ax
   0x00008040:	mov    di,ax
   0x00008043:	mov    ax,0x8162
   0x00008047:	add    BYTE PTR [eax],al
   0x00008049:	mov    si,ax
   0x0000804c:	mov    ecx,0x6766000a
End of assembler dump.
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8082
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    edx,0xcec0092
Dump of assembler code from 0x8000 to 0x8030:
=> 0x00008000:	mov    edx,0xcec0092
   0x00008005:	add    ch,dh
   0x00008007:	mov    dx,0x0
   0x0000800b:	add    BYTE PTR [eax],al
   0x0000800d:	mov    ax,0x818f
   0x00008011:	add    BYTE PTR [eax],al
   0x00008013:	mov    cx,0x1000
   0x00008017:	add    BYTE PTR [eax],al
   0x00008019:	div    cx
   0x0000801c:	cmp    dx,0x0
   0x00008020:	mul    cx
   0x00008023:	je     0x802b
   0x00008025:	add    ax,0x1000
   0x00008029:	add    BYTE PTR [eax],al
   0x0000802b:	mov    bx,0x8189
   0x0000802f:	add    BYTE PTR [eax],al
End of assembler dump.
Dump of assembler code from 0x8020 to 0x8050:
   0x00008020:	mul    cx
   0x00008023:	je     0x802b
   0x00008025:	add    ax,0x1000
   0x00008029:	add    BYTE PTR [eax],al
   0x0000802b:	mov    bx,0x8189
   0x0000802f:	add    BYTE PTR [eax],al
   0x00008031:	mov    cx,0x28
   0x00008035:	add    BYTE PTR [eax],al
   0x00008037:	mov    WORD PTR [bp+di],cx
   0x0000803b:	mov    WORD PTR [bp+di+0x2],ax
   0x00008040:	mov    di,ax
   0x00008043:	mov    ax,0x8160
   0x00008047:	add    BYTE PTR [eax],al
   0x00008049:	mov    si,ax
   0x0000804c:	mov    ecx,0x6766000a
End of assembler dump.
Dump of assembler code from 0x8040 to 0x8070:
   0x00008040:	mov    di,ax
   0x00008043:	mov    ax,0x8160
   0x00008047:	add    BYTE PTR [eax],al
   0x00008049:	mov    si,ax
   0x0000804c:	mov    ecx,0x6766000a
   0x00008051:	mov    eax,DWORD PTR [esi]
   0x00008053:	mov    WORD PTR [bx],ax
   0x00008057:	add    di,0x4
   0x0000805b:	add    si,0x4
   0x0000805f:	loop   0x804f
   0x00008061:	mov    bx,0x8189
   0x00008065:	add    BYTE PTR [eax],al
   0x00008067:	lgdtd  [bp+di]
   0x0000806b:	mov    ax,0x7bfc
   0x0000806f:	add    BYTE PTR [eax],al
End of assembler dump.
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8040
Continuing.

Breakpoint 1, 0x00008040 in ?? ()
=> 0x00008040:	66 89 c7	mov    di,ax
Dump of assembler code from 0x8040 to 0x8070:
=> 0x00008040:	mov    di,ax
   0x00008043:	mov    ax,0x815d
   0x00008047:	add    BYTE PTR [eax],al
   0x00008049:	mov    si,ax
   0x0000804c:	mov    ecx,0x6766000a
   0x00008051:	mov    eax,DWORD PTR [esi]
   0x00008053:	mov    WORD PTR [bx],ax
   0x00008057:	add    di,0x4
   0x0000805b:	add    si,0x4
   0x0000805f:	loop   0x804f
   0x00008061:	mov    bx,0x8186
   0x00008065:	add    BYTE PTR [eax],al
   0x00008067:	lgdtd  [bp+di]
   0x0000806b:	mov    eax,cr0
   0x0000806e:	or     ax,0x1
End of assembler dump.
Dump of assembler code from 0x806e to 0x809e:
   0x0000806e:	or     ax,0x1
   0x00008072:	mov    cr0,eax
   0x00008075:	jmp    0x10b8:0x8807a
   0x0000807c:	add    BYTE PTR [eax],al
   0x0000807e:	add    BYTE PTR [esi-0x71277140],cl
   0x00008084:	loopne 0x8014
   0x00008086:	call   0xfcb95119
   0x0000808b:	jnp    0x808d
   0x0000808d:	add    BYTE PTR [ecx-0x473a763c],cl
   0x00008093:	and    DWORD PTR [eax],eax
   0x00008095:	add    BYTE PTR [eax],al
   0x00008097:	mov    ebx,0x818c
   0x0000809c:	mov    DWORD PTR [ebx],eax
End of assembler dump.
Breakpoint 2 at 0x8075
Continuing.

Breakpoint 2, 0x00008075 in ?? ()
=> 0x00008075:	ea 7a 80 08 00 b8 10	jmp    0x10b8:0x8807a
0x0000807a in ?? ()
=> 0x0000807a:	b8 10 00 00 00	mov    eax,0x10
0x0000807f in ?? ()
=> 0x0000807f:	8e c0	mov    es,eax
0x00008081 in ?? ()
=> 0x00008081:	8e d8	mov    ds,eax
0x00008083 in ?? ()
=> 0x00008083:	8e e0	mov    fs,eax
0x00008085 in ?? ()
=> 0x00008085:	8e e8	mov    gs,eax
0x00008087 in ?? ()
=> 0x00008087:	8e d0	mov    ss,eax
0x00008089 in ?? ()
=> 0x00008089:	b8 fc 7b 00 00	mov    eax,0x7bfc
0x0000808e in ?? ()
=> 0x0000808e:	89 c4	mov    esp,eax
0x00008090 in ?? ()
=> 0x00008090:	89 c5	mov    ebp,eax
0x00008092 in ?? ()
=> 0x00008092:	b8 21 00 00 00	mov    eax,0x21
0x00008097 in ?? ()
=> 0x00008097:	bb 8c 81 00 00	mov    ebx,0x818c
0x0000809c in ?? ()
=> 0x0000809c:	89 03	mov    DWORD PTR [ebx],eax
0x0000809e in ?? ()
=> 0x0000809e:	bb 8c 81 00 00	mov    ebx,0x818c
0x8180:	0x00	0x10	0x92	0xcf	0x00	0x00	0x28	0x00
0x8188:	0x00	0x90	0x00	0x00	0x21	0x00	0x00	0x00
0x8190:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x8198:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x000080a3 in ?? ()
=> 0x000080a3:	8b 1b	mov    ebx,DWORD PTR [ebx]
0x000080a5 in ?? ()
=> 0x000080a5:	83 fb 40	cmp    ebx,0x40
$1 = 0x21
0x000080a8 in ?? ()
=> 0x000080a8:	77 47	ja     0x80f1
0x000080aa in ?? ()
=> 0x000080aa:	bf 00 7e 00 00	mov    edi,0x7e00
source command requires file name of file to source.
0x000080af in ?? ()
=> 0x000080af:	e8 41 00 00 00	call   0x80f5
No function contains program counter for selected frame.
Dump of assembler code from 0x80af to 0x80bf:
=> 0x000080af:	call   0x80f5
   0x000080b4:	cld    
   0x000080b5:	xor    ebx,ebx
   0x000080b7:	mov    esi,ebx
   0x000080b9:	shl    esi,0x5
   0x000080bc:	add    esi,0x7e00
End of assembler dump.
No symbol table is loaded.  Use the "file" command.
Breakpoint 3 at 0x80b4
Continuing.

Breakpoint 1, 0x00008040 in ?? ()
=> 0x00008040:	66 89 c7	mov    di,ax
Continuing.

Breakpoint 2, 0x00008075 in ?? ()
=> 0x00008075:	ea 7a 80 08 00 b8 10	jmp    0x10b8:0x8807a
Continuing.

Breakpoint 1, 0x00008040 in ?? ()
=> 0x00008040:	66 89 c7	mov    di,ax
Breakpoint 4 at 0x80af
Continuing.

Breakpoint 2, 0x00008075 in ?? ()
=> 0x00008075:	ea 7a 80 08 00 b8 10	jmp    0x10b8:0x8807a
Continuing.

Breakpoint 4, 0x000080af in ?? ()
=> 0x000080af:	e8 41 00 00 00	call   0x80f5
0x000080f5 in ?? ()
=> 0x000080f5:	66 ba f7 01	mov    dx,0x1f7
0x7bf0:	0x00	0x00	0x08	0x00	0x00	0x00	0xa9	0x7d
0x7bf8:	0xb4	0x80	0x00	0x00	0xeb	0x7c	0x00	0x00
0x7c00:	0xeb	0x3c	0x00	0x5a	0x69	0x67	0x68	0x74
0x7c08:	0x63	0x68	0x00	0x00	0x02	0x01	0x01	0x00
Num     Type           Disp Enb Address    What
1       breakpoint     keep y   0x00008040 
	breakpoint already hit 3 times
2       breakpoint     keep y   0x00008075 
	breakpoint already hit 3 times
3       breakpoint     keep y   0x000080b4 
4       breakpoint     keep y   0x000080af 
	breakpoint already hit 1 time
0x000080f9 in ?? ()
=> 0x000080f9:	ec	in     al,dx
0x000080fa in ?? ()
=> 0x000080fa:	24 c0	and    al,0xc0
0x000080fc in ?? ()
=> 0x000080fc:	3c 40	cmp    al,0x40
$2 = 0x40
0x000080fe in ?? ()
=> 0x000080fe:	75 f5	jne    0x80f5
0x00008100 in ?? ()
=> 0x00008100:	b0 01	mov    al,0x1
0x00008102 in ?? ()
=> 0x00008102:	66 ba f2 01	mov    dx,0x1f2
0x00008106 in ?? ()
=> 0x00008106:	ee	out    dx,al
$3 = 0x1
0x00008107 in ?? ()
=> 0x00008107:	89 d8	mov    eax,ebx
0x00008109 in ?? ()
=> 0x00008109:	66 ba f3 01	mov    dx,0x1f3
$4 = 0x21
0x0000810d in ?? ()
=> 0x0000810d:	ee	out    dx,al
0x0000810e in ?? ()
=> 0x0000810e:	c1 e8 08	shr    eax,0x8
0x00008111 in ?? ()
=> 0x00008111:	66 ba f4 01	mov    dx,0x1f4
0x00008115 in ?? ()
=> 0x00008115:	ee	out    dx,al
0x00008116 in ?? ()
=> 0x00008116:	c1 e8 08	shr    eax,0x8
0x00008119 in ?? ()
=> 0x00008119:	66 ba f5 01	mov    dx,0x1f5
0x0000811d in ?? ()
=> 0x0000811d:	ee	out    dx,al
0x0000811e in ?? ()
=> 0x0000811e:	c1 e8 08	shr    eax,0x8
0x00008121 in ?? ()
=> 0x00008121:	24 0f	and    al,0xf
0x00008123 in ?? ()
=> 0x00008123:	0c e0	or     al,0xe0
0x00008125 in ?? ()
=> 0x00008125:	66 ba f6 01	mov    dx,0x1f6
0x00008129 in ?? ()
=> 0x00008129:	ee	out    dx,al
0x0000812a in ?? ()
=> 0x0000812a:	66 ba f7 01	mov    dx,0x1f7
0x0000812e in ?? ()
=> 0x0000812e:	b0 20	mov    al,0x20
0x00008130 in ?? ()
=> 0x00008130:	ee	out    dx,al
0x00008131 in ?? ()
=> 0x00008131:	66 ba f7 01	mov    dx,0x1f7
0x00008135 in ?? ()
=> 0x00008135:	ec	in     al,dx
0x00008136 in ?? ()
=> 0x00008136:	24 88	and    al,0x88
0x00008138 in ?? ()
=> 0x00008138:	3c 08	cmp    al,0x8
$5 = 0x8
0x0000813a in ?? ()
=> 0x0000813a:	75 f5	jne    0x8131
0x0000813c in ?? ()
=> 0x0000813c:	66 ba f0 01	mov    dx,0x1f0
0x00008140 in ?? ()
=> 0x00008140:	66 b9 00 01	mov    cx,0x100
No symbol table is loaded.  Use the "file" command.
$6 = 0x7e00
0x00008144 in ?? ()
=> 0x00008144:	66 ed	in     ax,dx
0x00008146 in ?? ()
=> 0x00008146:	66 67 89 05	mov    WORD PTR [di],ax
$7 = 0x4f4c
$8 = 76 'L'
0x0000814a in ?? ()
=> 0x0000814a:	66 83 c7 02	add    di,0x2
0x0000814e in ?? ()
=> 0x0000814e:	e2 f4	loop   0x8144
0x00008144 in ?? ()
=> 0x00008144:	66 ed	in     ax,dx
Dump of assembler code from 0x8144 to 0x814e:
=> 0x00008144:	in     ax,dx
   0x00008146:	mov    WORD PTR [di],ax
   0x0000814a:	add    di,0x2
End of assembler dump.
Dump of assembler code from 0x8144 to 0x8154:
=> 0x00008144:	in     ax,dx
   0x00008146:	mov    WORD PTR [di],ax
   0x0000814a:	add    di,0x2
   0x0000814e:	loop   0x8144
   0x00008150:	ret    
   0x00008151:	dec    ebx
   0x00008152:	inc    ebp
   0x00008153:	push   edx
End of assembler dump.
Breakpoint 5 at 0x8150
Continuing.

Breakpoint 1, 0x00008040 in ?? ()
=> 0x00008040:	66 89 c7	mov    di,ax
Breakpoint 6 at 0x8140
Continuing.

Breakpoint 2, 0x00008075 in ?? ()
=> 0x00008075:	ea 7a 80 08 00 b8 10	jmp    0x10b8:0x8807a
Continuing.

Breakpoint 4, 0x000080af in ?? ()
=> 0x000080af:	e8 41 00 00 00	call   0x80f5
Continuing.

Breakpoint 1, 0x00008040 in ?? ()
=> 0x00008040:	66 89 c7	mov    di,ax
Continuing.

Breakpoint 2, 0x00008075 in ?? ()
=> 0x00008075:	ea 7a 80 08 00 b8 10	jmp    0x10b8:0x8807a
Continuing.

Breakpoint 4, 0x000080af in ?? ()
=> 0x000080af:	e8 41 00 00 00	call   0x80f5
0x000080f5 in ?? ()
=> 0x000080f5:	66 ba f7 01	mov    dx,0x1f7
Dump of assembler code from 0x80f5 to 0x8175:
=> 0x000080f5:	mov    dx,0x1f7
   0x000080f9:	in     al,dx
   0x000080fa:	and    al,0xc0
   0x000080fc:	cmp    al,0x40
   0x000080fe:	jne    0x80f5
   0x00008100:	mov    al,0x1
   0x00008102:	mov    dx,0x1f2
   0x00008106:	out    dx,al
   0x00008107:	mov    eax,ebx
   0x00008109:	mov    dx,0x1f3
   0x0000810d:	out    dx,al
   0x0000810e:	shr    eax,0x8
   0x00008111:	mov    dx,0x1f4
   0x00008115:	out    dx,al
   0x00008116:	shr    eax,0x8
   0x00008119:	mov    dx,0x1f5
   0x0000811d:	out    dx,al
   0x0000811e:	shr    eax,0x8
   0x00008121:	and    al,0xf
   0x00008123:	or     al,0xe0
   0x00008125:	mov    dx,0x1f6
   0x00008129:	out    dx,al
   0x0000812a:	mov    dx,0x1f7
   0x0000812e:	mov    al,0x20
   0x00008130:	out    dx,al
   0x00008131:	mov    dx,0x1f7
   0x00008135:	in     al,dx
   0x00008136:	and    al,0x88
   0x00008138:	cmp    al,0x8
   0x0000813a:	jne    0x8131
   0x0000813c:	mov    dx,0x1f0
   0x00008140:	mov    cx,0x100
   0x00008144:	in     ax,dx
   0x00008146:	mov    WORD PTR [di],ax
   0x0000814a:	add    di,0x2
   0x0000814e:	loop   0x8144
   0x00008150:	ret    
   0x00008151:	dec    ebx
   0x00008152:	inc    ebp
   0x00008153:	push   edx
   0x00008154:	dec    esi
   0x00008155:	inc    ebp
   0x00008156:	dec    esp
   0x00008157:	and    BYTE PTR [eax],ah
   0x00008159:	and    BYTE PTR [eax],ah
   0x0000815b:	and    BYTE PTR [eax],al
   0x0000815d:	add    BYTE PTR [eax],al
   0x0000815f:	add    BYTE PTR [eax],al
   0x00008161:	add    BYTE PTR [eax],al
   0x00008163:	add    BYTE PTR [eax],al
   0x00008165:	(bad)  
   0x00008166:	inc    DWORD PTR [eax]
   0x00008168:	add    BYTE PTR [eax],al
   0x0000816a:	call   0x0:0xffff00cf
   0x00008171:	add    BYTE PTR [edx-0xff31],dl
End of assembler dump.
Num     Type           Disp Enb Address    What
1       breakpoint     keep y   0x00008040 
	breakpoint already hit 5 times
2       breakpoint     keep y   0x00008075 
	breakpoint already hit 5 times
3       breakpoint     keep y   0x000080b4 
4       breakpoint     keep y   0x000080af 
	breakpoint already hit 3 times
5       breakpoint     keep y   0x00008150 
6       breakpoint     keep y   0x00008140 
Breakpoint 7 at 0x80fc
Breakpoint 8 at 0x8100
Breakpoint 9 at 0x8107
Breakpoint 10 at 0x810e
Breakpoint 11 at 0x8119
Breakpoint 12 at 0x811e
Breakpoint 13 at 0x8129
Breakpoint 14 at 0x8130
Breakpoint 15 at 0x8136
Breakpoint 16 at 0x813c
Continuing.

Breakpoint 7, 0x000080fc in ?? ()
=> 0x000080fc:	3c 40	cmp    al,0x40
Continuing.

Breakpoint 8, 0x00008100 in ?? ()
=> 0x00008100:	b0 01	mov    al,0x1
Continuing.

Breakpoint 9, 0x00008107 in ?? ()
=> 0x00008107:	89 d8	mov    eax,ebx
Continuing.

Breakpoint 10, 0x0000810e in ?? ()
=> 0x0000810e:	c1 e8 08	shr    eax,0x8
Continuing.

Breakpoint 11, 0x00008119 in ?? ()
=> 0x00008119:	66 ba f5 01	mov    dx,0x1f5
Continuing.

Breakpoint 12, 0x0000811e in ?? ()
=> 0x0000811e:	c1 e8 08	shr    eax,0x8
Continuing.

Breakpoint 13, 0x00008129 in ?? ()
=> 0x00008129:	ee	out    dx,al
Continuing.

Breakpoint 14, 0x00008130 in ?? ()
=> 0x00008130:	ee	out    dx,al
Continuing.

Breakpoint 1, 0x00008040 in ?? ()
=> 0x00008040:	66 89 c7	mov    di,ax
Num     Type           Disp Enb Address    What
1       breakpoint     keep y   0x00008040 
	breakpoint already hit 6 times
2       breakpoint     keep y   0x00008075 
	breakpoint already hit 5 times
3       breakpoint     keep y   0x000080b4 
4       breakpoint     keep y   0x000080af 
	breakpoint already hit 3 times
5       breakpoint     keep y   0x00008150 
6       breakpoint     keep y   0x00008140 
7       breakpoint     keep y   0x000080fc 
	breakpoint already hit 1 time
8       breakpoint     keep y   0x00008100 
	breakpoint already hit 1 time
9       breakpoint     keep y   0x00008107 
	breakpoint already hit 1 time
10      breakpoint     keep y   0x0000810e 
	breakpoint already hit 1 time
11      breakpoint     keep y   0x00008119 
	breakpoint already hit 1 time
12      breakpoint     keep y   0x0000811e 
	breakpoint already hit 1 time
13      breakpoint     keep y   0x00008129 
	breakpoint already hit 1 time
14      breakpoint     keep y   0x00008130 
	breakpoint already hit 1 time
15      breakpoint     keep y   0x00008136 
16      breakpoint     keep y   0x0000813c 
Num     Type           Disp Enb Address    What
1       breakpoint     keep y   0x00008040 
	breakpoint already hit 6 times
14      breakpoint     keep y   0x00008130 
	breakpoint already hit 1 time
15      breakpoint     keep y   0x00008136 
16      breakpoint     keep y   0x0000813c 
Continuing.

Breakpoint 14, 0x00008130 in ?? ()
=> 0x00008130:	ee	out    dx,al
0x00008131 in ?? ()
=> 0x00008131:	66 ba f7 01	mov    dx,0x1f7
0x00008135 in ?? ()
=> 0x00008135:	ec	in     al,dx

Breakpoint 15, 0x00008136 in ?? ()
=> 0x00008136:	24 88	and    al,0x88
0x00008138 in ?? ()
=> 0x00008138:	3c 08	cmp    al,0x8
Continuing.

Breakpoint 1, 0x00008040 in ?? ()
=> 0x00008040:	66 89 c7	mov    di,ax
Breakpoint 17 at 0x8131
Num     Type           Disp Enb Address    What
1       breakpoint     keep y   0x00008040 
	breakpoint already hit 7 times
15      breakpoint     keep y   0x00008136 
	breakpoint already hit 1 time
16      breakpoint     keep y   0x0000813c 
17      breakpoint     keep y   0x00008131 
Continuing.

Breakpoint 17, 0x00008131 in ?? ()
=> 0x00008131:	66 ba f7 01	mov    dx,0x1f7
Continuing.

Breakpoint 1, 0x00008040 in ?? ()
=> 0x00008040:	66 89 c7	mov    di,ax
Num     Type           Disp Enb Address    What
1       breakpoint     keep y   0x00008040 
	breakpoint already hit 8 times
15      breakpoint     keep y   0x00008136 
	breakpoint already hit 1 time
16      breakpoint     keep y   0x0000813c 
17      breakpoint     keep y   0x00008131 
	breakpoint already hit 1 time
Breakpoint 18 at 0x8131
Breakpoint 19 at 0x8135
Breakpoint 20 at 0x8136
Breakpoint 21 at 0x813c
Breakpoint 22 at 0x8138
Breakpoint 23 at 0x813a
Continuing.

Breakpoint 18, 0x00008131 in ?? ()
=> 0x00008131:	66 ba f7 01	mov    dx,0x1f7
Continuing.

Breakpoint 19, 0x00008135 in ?? ()
=> 0x00008135:	ec	in     al,dx
Continuing.

Breakpoint 20, 0x00008136 in ?? ()
=> 0x00008136:	24 88	and    al,0x88
Continuing.

Breakpoint 22, 0x00008138 in ?? ()
=> 0x00008138:	3c 08	cmp    al,0x8
Continuing.

Breakpoint 23, 0x0000813a in ?? ()
=> 0x0000813a:	75 f5	jne    0x8131
Continuing.

Breakpoint 21, 0x0000813c in ?? ()
=> 0x0000813c:	66 ba f0 01	mov    dx,0x1f0
Continuing.

Breakpoint 18, 0x00008131 in ?? ()
=> 0x00008131:	66 ba f7 01	mov    dx,0x1f7
$9 = 0x8
$10 = 0x8131
Num     Type           Disp Enb Address    What
18      breakpoint     keep y   0x00008131 
	breakpoint already hit 2 times
19      breakpoint     keep y   0x00008135 
	breakpoint already hit 1 time
20      breakpoint     keep y   0x00008136 
	breakpoint already hit 1 time
21      breakpoint     keep y   0x0000813c 
	breakpoint already hit 1 time
22      breakpoint     keep y   0x00008138 
	breakpoint already hit 1 time
23      breakpoint     keep y   0x0000813a 
	breakpoint already hit 1 time
Continuing.

Breakpoint 19, 0x00008135 in ?? ()
=> 0x00008135:	ec	in     al,dx
Continuing.

Breakpoint 20, 0x00008136 in ?? ()
=> 0x00008136:	24 88	and    al,0x88
Continuing.

Breakpoint 22, 0x00008138 in ?? ()
=> 0x00008138:	3c 08	cmp    al,0x8
Continuing.

Breakpoint 23, 0x0000813a in ?? ()
=> 0x0000813a:	75 f5	jne    0x8131
Continuing.

Breakpoint 21, 0x0000813c in ?? ()
=> 0x0000813c:	66 ba f0 01	mov    dx,0x1f0
Continuing.

Breakpoint 19, 0x00008135 in ?? ()
=> 0x00008135:	ec	in     al,dx
0x7e00:	0x00	0x00	0x00	0x00	0x00	0x00	0xff	0xff
0x7e08:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x7e10:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x7e18:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Num     Type           Disp Enb Address    What
19      breakpoint     keep y   0x00008135 
	breakpoint already hit 3 times
20      breakpoint     keep y   0x00008136 
	breakpoint already hit 2 times
21      breakpoint     keep y   0x0000813c 
	breakpoint already hit 2 times
22      breakpoint     keep y   0x00008138 
	breakpoint already hit 2 times
23      breakpoint     keep y   0x0000813a 
	breakpoint already hit 2 times
Continuing.

Breakpoint 20, 0x00008136 in ?? ()
=> 0x00008136:	24 88	and    al,0x88
Continuing.

Breakpoint 22, 0x00008138 in ?? ()
=> 0x00008138:	3c 08	cmp    al,0x8
Continuing.

Breakpoint 23, 0x0000813a in ?? ()
=> 0x0000813a:	75 f5	jne    0x8131
Continuing.

Breakpoint 22, 0x00008138 in ?? ()
=> 0x00008138:	3c 08	cmp    al,0x8
Continuing.

Breakpoint 23, 0x0000813a in ?? ()
=> 0x0000813a:	75 f5	jne    0x8131
Continuing.

Breakpoint 22, 0x00008138 in ?? ()
=> 0x00008138:	3c 08	cmp    al,0x8
Num     Type           Disp Enb Address    What
21      breakpoint     keep y   0x0000813c 
	breakpoint already hit 2 times
22      breakpoint     keep y   0x00008138 
	breakpoint already hit 5 times
23      breakpoint     keep y   0x0000813a 
	breakpoint already hit 4 times
Continuing.

Breakpoint 23, 0x0000813a in ?? ()
=> 0x0000813a:	75 f5	jne    0x8131
Undefined command: "diasa".  Try "help".
Undefined command: "diaasa".  Try "help".
Dump of assembler code from 0x813a to 0x814a:
=> 0x0000813a:	jne    0x8131
   0x0000813c:	mov    dx,0x1f0
   0x00008140:	mov    cx,0x100
   0x00008144:	in     ax,dx
   0x00008146:	mov    WORD PTR [di],ax
End of assembler dump.
Num     Type           Disp Enb Address    What
21      breakpoint     keep y   0x0000813c 
	breakpoint already hit 2 times
23      breakpoint     keep y   0x0000813a 
	breakpoint already hit 5 times
Num     Type           Disp Enb Address    What
21      breakpoint     keep y   0x0000813c 
	breakpoint already hit 2 times
Continuing.

Program received signal SIGINT, Interrupt.
0x000e8390 in ?? ()
=> 0x000e8390:	f3 a4	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x813a
Continuing.

Breakpoint 1, 0x0000813a in ?? ()
=> 0x0000813a:	75 f5	jne    0x8131
Breakpoint 2 at 0x813c
Continuing.

Breakpoint 1, 0x0000813a in ?? ()
=> 0x0000813a:	75 f5	jne    0x8131
$1 = 0x80
0x00008131 in ?? ()
=> 0x00008131:	66 ba f7 01	mov    dx,0x1f7
0x00008135 in ?? ()
=> 0x00008135:	ec	in     al,dx
0x00008136 in ?? ()
=> 0x00008136:	24 88	and    al,0x88
$2 = 0x58
Continuing.

Breakpoint 1, 0x0000813a in ?? ()
=> 0x0000813a:	75 f5	jne    0x8131
Continuing.

Breakpoint 1, 0x0000813a in ?? ()
=> 0x0000813a:	75 f5	jne    0x8131
$3 = 0x80
0x00008131 in ?? ()
=> 0x00008131:	66 ba f7 01	mov    dx,0x1f7
0x00008135 in ?? ()
=> 0x00008135:	ec	in     al,dx
0x00008136 in ?? ()
=> 0x00008136:	24 88	and    al,0x88
0x00008138 in ?? ()
=> 0x00008138:	3c 08	cmp    al,0x8

Breakpoint 1, 0x0000813a in ?? ()
=> 0x0000813a:	75 f5	jne    0x8131

Breakpoint 2, 0x0000813c in ?? ()
=> 0x0000813c:	66 ba f0 01	mov    dx,0x1f0
0x00008140 in ?? ()
=> 0x00008140:	66 b9 00 01	mov    cx,0x100
0x00008144 in ?? ()
=> 0x00008144:	66 ed	in     ax,dx
0x00008146 in ?? ()
=> 0x00008146:	66 67 89 05	mov    WORD PTR [di],ax
0x0000814a in ?? ()
=> 0x0000814a:	66 83 c7 02	add    di,0x2
Num     Type           Disp Enb Address    What
1       breakpoint     keep y   0x0000813a 
	breakpoint already hit 5 times
2       breakpoint     keep y   0x0000813c 
	breakpoint already hit 1 time
Dump of assembler code from 0x814a to 0x815a:
=> 0x0000814a:	add    di,0x2
   0x0000814e:	loop   0x8144
   0x00008150:	ret    
   0x00008151:	dec    ebx
   0x00008152:	inc    ebp
   0x00008153:	push   edx
   0x00008154:	dec    esi
   0x00008155:	inc    ebp
   0x00008156:	dec    esp
   0x00008157:	and    BYTE PTR [eax],ah
   0x00008159:	and    BYTE PTR [eax],ah
End of assembler dump.
Breakpoint 3 at 0x8150
Continuing.

Breakpoint 1, 0x0000813a in ?? ()
=> 0x0000813a:	75 f5	jne    0x8131
Continuing.

Breakpoint 1, 0x0000813a in ?? ()
=> 0x0000813a:	75 f5	jne    0x8131
Num     Type           Disp Enb Address    What
1       breakpoint     keep y   0x0000813a 
	breakpoint already hit 7 times
2       breakpoint     keep y   0x0000813c 
	breakpoint already hit 1 time
3       breakpoint     keep y   0x00008150 
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    edx,0xcec0092
Dump of assembler code from 0x8000 to 0x8030:
=> 0x00008000:	mov    edx,0xcec0092
   0x00008005:	add    ch,dh
   0x00008007:	mov    dx,0x0
   0x0000800b:	add    BYTE PTR [eax],al
   0x0000800d:	mov    ax,0x813a
   0x00008011:	add    BYTE PTR [eax],al
   0x00008013:	mov    cx,0x1000
   0x00008017:	add    BYTE PTR [eax],al
   0x00008019:	div    cx
   0x0000801c:	cmp    dx,0x0
   0x00008020:	mul    cx
   0x00008023:	je     0x802b
   0x00008025:	add    ax,0x1000
   0x00008029:	add    BYTE PTR [eax],al
   0x0000802b:	mov    bx,0x812e
   0x0000802f:	add    BYTE PTR [eax],al
End of assembler dump.
Dump of assembler code from 0x8023 to 0x8053:
   0x00008023:	je     0x802b
   0x00008025:	add    ax,0x1000
   0x00008029:	add    BYTE PTR [eax],al
   0x0000802b:	mov    bx,0x812e
   0x0000802f:	add    BYTE PTR [eax],al
   0x00008031:	mov    cx,0x28
   0x00008035:	add    BYTE PTR [eax],al
   0x00008037:	mov    WORD PTR [bp+di],cx
   0x0000803b:	mov    WORD PTR [bp+di+0x2],ax
   0x00008040:	mov    di,ax
   0x00008043:	mov    ax,0x8105
   0x00008047:	add    BYTE PTR [eax],al
   0x00008049:	mov    si,ax
   0x0000804c:	mov    ecx,0x6766000a
   0x00008051:	mov    eax,DWORD PTR [esi]
End of assembler dump.
Dump of assembler code from 0x8040 to 0x8080:
   0x00008040:	mov    di,ax
   0x00008043:	mov    ax,0x8105
   0x00008047:	add    BYTE PTR [eax],al
   0x00008049:	mov    si,ax
   0x0000804c:	mov    ecx,0x6766000a
   0x00008051:	mov    eax,DWORD PTR [esi]
   0x00008053:	mov    WORD PTR [bx],ax
   0x00008057:	add    di,0x4
   0x0000805b:	add    si,0x4
   0x0000805f:	loop   0x804f
   0x00008061:	mov    bx,0x812e
   0x00008065:	add    BYTE PTR [eax],al
   0x00008067:	lgdtd  [bp+di]
   0x0000806b:	mov    eax,cr0
   0x0000806e:	or     ax,0x1
   0x00008072:	mov    cr0,eax
   0x00008075:	jmp    0xe389:0x8807a
   0x0000807c:	mov    ax,WORD PTR [ebx]
   0x0000807f:	mov    ebx,0x8138
End of assembler dump.
Breakpoint 2 at 0x8075
Continuing.

Breakpoint 2, 0x00008075 in ?? ()
=> 0x00008075:	ea 7a 80 08 00 89 e3	jmp    0xe389:0x8807a
0x0000807a in ?? ()
=> 0x0000807a:	89 e3	mov    ebx,esp
0x0000807c in ?? ()
=> 0x0000807c:	66 8b 03	mov    ax,WORD PTR [ebx]
0x0000807f in ?? ()
=> 0x0000807f:	bb 38 81 00 00	mov    ebx,0x8138
$1 = 0x7d69
0x00008084 in ?? ()
=> 0x00008084:	66 89 03	mov    WORD PTR [ebx],ax
0x00008087 in ?? ()
=> 0x00008087:	b8 21 00 00 00	mov    eax,0x21
0x8130:	0x00	0x90	0x00	0x00	0x00	0x00	0x00	0x00
0x8138:	0x69	0x7d	0x00	0x00	0x00	0x00	0x00	0x00
0x8140:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x8148:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x0000808c in ?? ()
=> 0x0000808c:	bb 34 81 00 00	mov    ebx,0x8134
0x00008091 in ?? ()
=> 0x00008091:	89 03	mov    DWORD PTR [ebx],eax
0x00008093 in ?? ()
=> 0x00008093:	bb 34 81 00 00	mov    ebx,0x8134
0x00008098 in ?? ()
=> 0x00008098:	8b 1b	mov    ebx,DWORD PTR [ebx]
0x0000809a in ?? ()
=> 0x0000809a:	83 fb 40	cmp    ebx,0x40
0x0000809d in ?? ()
=> 0x0000809d:	77 56	ja     0x80f5
0x0000809f in ?? ()
=> 0x0000809f:	bf 00 7e 00 00	mov    edi,0x7e00
0x000080a4 in ?? ()
=> 0x000080a4:	bb 38 81 00 00	mov    ebx,0x8138
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8075
Continuing.

Breakpoint 1, 0x00008075 in ?? ()
=> 0x00008075:	ea 7a 80 08 00 89 e3	jmp    0xe389:0x8807a
0x0000807a in ?? ()
=> 0x0000807a:	89 e3	mov    ebx,esp
0x0000807c in ?? ()
=> 0x0000807c:	66 8b 03	mov    ax,WORD PTR [ebx]
0x0000807f in ?? ()
=> 0x0000807f:	bb 38 81 00 00	mov    ebx,0x8138
0x00008084 in ?? ()
=> 0x00008084:	66 89 03	mov    WORD PTR [ebx],ax
0x00008087 in ?? ()
=> 0x00008087:	b8 21 00 00 00	mov    eax,0x21
0x0000808c in ?? ()
=> 0x0000808c:	bb 34 81 00 00	mov    ebx,0x8134
0x00008091 in ?? ()
=> 0x00008091:	89 03	mov    DWORD PTR [ebx],eax
0x00008093 in ?? ()
=> 0x00008093:	bb 38 81 00 00	mov    ebx,0x8138
0x00008098 in ?? ()
=> 0x00008098:	66 8b 03	mov    ax,WORD PTR [ebx]
0x0000809b in ?? ()
=> 0x0000809b:	bb 34 81 00 00	mov    ebx,0x8134
0x000080a0 in ?? ()
=> 0x000080a0:	8b 1b	mov    ebx,DWORD PTR [ebx]
$1 = 0x7d69
0x000080a2 in ?? ()
=> 0x000080a2:	83 fb 40	cmp    ebx,0x40
$2 = 0x21
0x000080a5 in ?? ()
=> 0x000080a5:	77 4e	ja     0x80f5
0x000080a7 in ?? ()
=> 0x000080a7:	bf 00 7e 00 00	mov    edi,0x7e00
0x000080ac in ?? ()
=> 0x000080ac:	ea b3 80 00 00 00 00	jmp    0x0:0x80b3
eax            0x7d69              32105
ecx            0x0                 0
edx            0x0                 0
ebx            0x21                33
esp            0x7bfc              0x7bfc
ebp            0x7bfe              0x7bfe
esi            0x812d              33069
edi            0x7e00              32256
eip            0x80ac              0x80ac
eflags         0x287               [ IOPL=0 IF SF PF CF ]
cs             0x8                 8
ss             0x0                 0
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
fs_base        0x0                 0
gs_base        0x0                 0
k_gs_base      0x0                 0
cr0            0x11                [ ET PE ]
cr2            0x0                 0
cr3            0x0                 [ PDBR=0 PCID=0 ]
cr4            0x0                 [ ]
cr8            0x0                 0
efer           0x0                 [ ]
xmm0           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm1           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm2           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm3           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm4           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm5           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm6           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm7           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
mxcsr          0x1f80              [ IM DM ZM OM UM PM ]
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8075
Continuing.

Breakpoint 1, 0x00008075 in ?? ()
=> 0x00008075:	ea 7a 80 08 00 89 e3	jmp    0xe389:0x8807a
0x0000807a in ?? ()
=> 0x0000807a:	89 e3	mov    ebx,esp
0x0000807c in ?? ()
=> 0x0000807c:	66 8b 03	mov    ax,WORD PTR [ebx]
0x0000807f in ?? ()
=> 0x0000807f:	bb 3e 81 00 00	mov    ebx,0x813e
$1 = 0x7d69
0x00008084 in ?? ()
=> 0x00008084:	66 89 03	mov    WORD PTR [ebx],ax
0x00008087 in ?? ()
=> 0x00008087:	b8 21 00 00 00	mov    eax,0x21
Undefined command: "".  Try "help".
0x8130:	0x92	0xcf	0x00	0x00	0x28	0x00	0x00	0x90
0x8138:	0x00	0x00	0x00	0x00	0x00	0x00	0x69	0x7d
0x8140:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x8148:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x0000808c in ?? ()
=> 0x0000808c:	bb 3a 81 00 00	mov    ebx,0x813a
0x00008091 in ?? ()
=> 0x00008091:	89 03	mov    DWORD PTR [ebx],eax
0x00008093 in ?? ()
=> 0x00008093:	bb 3a 81 00 00	mov    ebx,0x813a
0x00008098 in ?? ()
=> 0x00008098:	8b 1b	mov    ebx,DWORD PTR [ebx]
0x0000809a in ?? ()
=> 0x0000809a:	83 fb 40	cmp    ebx,0x40
0x0000809d in ?? ()
=> 0x0000809d:	77 45	ja     0x80e4
0x0000809f in ?? ()
=> 0x0000809f:	bf 00 7e 00 00	mov    edi,0x7e00
0x000080a4 in ?? ()
=> 0x000080a4:	e8 3f 00 00 00	call   0x80e8
$2 = 0x21
$3 = 0x21
$4 = 0x7e00
$5 = 0x8133
eax            0x21                33
ecx            0x0                 0
edx            0x0                 0
ebx            0x21                33
esp            0x7bfc              0x7bfc
ebp            0x7bfe              0x7bfe
esi            0x8133              33075
edi            0x7e00              32256
eip            0x80a4              0x80a4
eflags         0x287               [ IOPL=0 IF SF PF CF ]
cs             0x8                 8
ss             0x0                 0
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
fs_base        0x0                 0
gs_base        0x0                 0
k_gs_base      0x0                 0
cr0            0x11                [ ET PE ]
cr2            0x0                 0
cr3            0x0                 [ PDBR=0 PCID=0 ]
cr4            0x0                 [ ]
cr8            0x0                 0
efer           0x0                 [ ]
xmm0           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm1           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
Quit
0x000080e8 in ?? ()
=> 0x000080e8:	be 3e 81 00 00	mov    esi,0x813e
0x000080ed in ?? ()
=> 0x000080ed:	66 8b 06	mov    ax,WORD PTR [esi]
0x000080f0 in ?? ()
=> 0x000080f0:	ea f7 80 00 00 00 00	jmp    0x0:0x80f7
$6 = 0x7d69
Undefined command: "is".  Try "help".
0x0000e05b in ?? ()
=> 0x0000e05b:	00 00	add    BYTE PTR [eax],al
Dump of assembler code from 0x80f0 to 0x80fa:
   0x000080f0:	jmp    0x0:0x80f7
   0x000080f7:	call   eax
   0x000080f9:	jmp    0x4bc3:0x880fe
End of assembler dump.
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x80f0
Continuing.

Breakpoint 1, 0x000080f0 in ?? ()
=> 0x000080f0:	ea f7 80 00 00 00 00	jmp    0x0:0x80f7
0x0000e05b in ?? ()
=> 0x0000e05b:	00 00	add    BYTE PTR [eax],al
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x80e8
Continuing.

Breakpoint 1, 0x000080e8 in ?? ()
=> 0x000080e8:	be 3b 81 00 00	mov    esi,0x813b
0x000080ed in ?? ()
=> 0x000080ed:	66 8b 06	mov    ax,WORD PTR [esi]
0x000080f0 in ?? ()
=> 0x000080f0:	31 f6	xor    esi,esi
0x000080f2 in ?? ()
=> 0x000080f2:	8e ce	mov    cs,esi
0x0000e05b in ?? ()
=> 0x0000e05b:	00 00	add    BYTE PTR [eax],al
$1 = 0xe05b
$2 = 0xf000
$3 = 0x0
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8075
Continuing.

Breakpoint 1, 0x00008075 in ?? ()
=> 0x00008075:	ea 7a 80 08 00 89 e3	jmp    0xe389:0x8807a
Undefined command: "sisi".  Try "help".
0x0000807a in ?? ()
=> 0x0000807a:	89 e3	mov    ebx,esp
0x0000807c in ?? ()
=> 0x0000807c:	66 8b 03	mov    ax,WORD PTR [ebx]
0x0000807f in ?? ()
=> 0x0000807f:	bb 40 81 00 00	mov    ebx,0x8140
0x00008084 in ?? ()
=> 0x00008084:	66 89 03	mov    WORD PTR [ebx],ax
0x00008087 in ?? ()
=> 0x00008087:	b8 21 00 00 00	mov    eax,0x21
0x0000808c in ?? ()
=> 0x0000808c:	bb 3c 81 00 00	mov    ebx,0x813c
0x00008091 in ?? ()
=> 0x00008091:	89 03	mov    DWORD PTR [ebx],eax
0x00008093 in ?? ()
=> 0x00008093:	bb 3c 81 00 00	mov    ebx,0x813c
0x00008098 in ?? ()
=> 0x00008098:	8b 1b	mov    ebx,DWORD PTR [ebx]
0x0000809a in ?? ()
=> 0x0000809a:	83 fb 40	cmp    ebx,0x40
0x0000809d in ?? ()
=> 0x0000809d:	77 45	ja     0x80e4
0x0000809f in ?? ()
=> 0x0000809f:	bf 00 7e 00 00	mov    edi,0x7e00
0x000080a4 in ?? ()
=> 0x000080a4:	e8 3f 00 00 00	call   0x80e8
0x000080e8 in ?? ()
=> 0x000080e8:	be 40 81 00 00	mov    esi,0x8140
0x000080ed in ?? ()
=> 0x000080ed:	66 8b 06	mov    ax,WORD PTR [esi]
0x000080f0 in ?? ()
=> 0x000080f0:	66 6a 00	pushw  0x0
0x000080f3 in ?? ()
=> 0x000080f3:	68 f9 80 00 00	push   0x80f9
0x000080f8 in ?? ()
=> 0x000080f8:	cb	retf   
0x0000e05b in ?? ()
=> 0x0000e05b:	00 00	add    BYTE PTR [eax],al
0x0000e062 in ?? ()
=> 0x0000e062:	00 00	add    BYTE PTR [eax],al
0x0000d09f in ?? ()
=> 0x0000d09f:	00 00	add    BYTE PTR [eax],al
0x0000d0a0 in ?? ()
=> 0x0000d0a0:	00 00	add    BYTE PTR [eax],al
0x0000d0a1 in ?? ()
=> 0x0000d0a1:	00 00	add    BYTE PTR [eax],al
0x0000d0a7 in ?? ()
=> 0x0000d0a7:	00 00	add    BYTE PTR [eax],al
0x0000d0a9 in ?? ()
=> 0x0000d0a9:	00 00	add    BYTE PTR [eax],al
0x0000d0ab in ?? ()
=> 0x0000d0ab:	00 00	add    BYTE PTR [eax],al
0x00000000 in ?? ()
=> 0x00000000:	53	push   ebx
0x000080fa in ?? ()
=> 0x000080fa:	d0 ea	shr    dl,1
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8075
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8076
Continuing.

Breakpoint 1, 0x00008076 in ?? ()
=> 0x00008076:	ea 7b 80 08 00 89 e3	jmp    0xe389:0x8807b
0x0000807b in ?? ()
=> 0x0000807b:	89 e3	mov    ebx,esp
0x0000807d in ?? ()
=> 0x0000807d:	66 8b 03	mov    ax,WORD PTR [ebx]
0x00008080 in ?? ()
=> 0x00008080:	bb 40 81 00 00	mov    ebx,0x8140
0x00008085 in ?? ()
=> 0x00008085:	66 89 03	mov    WORD PTR [ebx],ax
0x00008088 in ?? ()
=> 0x00008088:	b8 21 00 00 00	mov    eax,0x21
0x0000808d in ?? ()
=> 0x0000808d:	bb 3c 81 00 00	mov    ebx,0x813c
0x00008092 in ?? ()
=> 0x00008092:	89 03	mov    DWORD PTR [ebx],eax
0x00008094 in ?? ()
=> 0x00008094:	bb 3c 81 00 00	mov    ebx,0x813c
0x00008099 in ?? ()
=> 0x00008099:	8b 1b	mov    ebx,DWORD PTR [ebx]
0x0000809b in ?? ()
=> 0x0000809b:	83 fb 40	cmp    ebx,0x40
0x0000809e in ?? ()
=> 0x0000809e:	77 45	ja     0x80e5
0x000080a0 in ?? ()
=> 0x000080a0:	bf 00 7e 00 00	mov    edi,0x7e00
0x000080a5 in ?? ()
=> 0x000080a5:	e8 3e 00 00 00	call   0x80e8
0x000080e8 in ?? ()
=> 0x000080e8:	be 40 81 00 00	mov    esi,0x8140
0x000080ed in ?? ()
=> 0x000080ed:	66 8b 06	mov    ax,WORD PTR [esi]
0x000080f0 in ?? ()
=> 0x000080f0:	66 6a 00	pushw  0x0
0x000080f3 in ?? ()
=> 0x000080f3:	68 f9 80 00 00	push   0x80f9
0x000080f8 in ?? ()
=> 0x000080f8:	cb	retf   
0x0000e05b in ?? ()
=> 0x0000e05b:	00 00	add    BYTE PTR [eax],al
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8076
Continuing.

Breakpoint 1, 0x00008076 in ?? ()
=> 0x00008076:	ea 7b 80 08 00 89 e3	jmp    0xe389:0x8807b
0x0000807b in ?? ()
=> 0x0000807b:	89 e3	mov    ebx,esp
0x0000807d in ?? ()
=> 0x0000807d:	66 8b 03	mov    ax,WORD PTR [ebx]
source command requires file name of file to source.
0x00008080 in ?? ()
=> 0x00008080:	bb 3d 81 00 00	mov    ebx,0x813d
0x00008085 in ?? ()
=> 0x00008085:	66 89 03	mov    WORD PTR [ebx],ax
0x00008088 in ?? ()
=> 0x00008088:	b8 21 00 00 00	mov    eax,0x21
0x0000808d in ?? ()
=> 0x0000808d:	bb 39 81 00 00	mov    ebx,0x8139
0x00008092 in ?? ()
=> 0x00008092:	89 03	mov    DWORD PTR [ebx],eax
0x00008094 in ?? ()
=> 0x00008094:	bb 39 81 00 00	mov    ebx,0x8139
0x00008099 in ?? ()
=> 0x00008099:	8b 1b	mov    ebx,DWORD PTR [ebx]
0x0000809b in ?? ()
=> 0x0000809b:	83 fb 40	cmp    ebx,0x40
0x0000809e in ?? ()
=> 0x0000809e:	77 45	ja     0x80e5
0x000080a0 in ?? ()
=> 0x000080a0:	bf 00 7e 00 00	mov    edi,0x7e00
0x000080a5 in ?? ()
=> 0x000080a5:	e8 3e 00 00 00	call   0x80e8
0x000080e8 in ?? ()
=> 0x000080e8:	be 3d 81 00 00	mov    esi,0x813d
0x000080ed in ?? ()
=> 0x000080ed:	66 8b 06	mov    ax,WORD PTR [esi]
0x000080f0 in ?? ()
=> 0x000080f0:	66 ea f6 80 00 00	jmp    0x0:0x80f6
0x0000e05b in ?? ()
=> 0x0000e05b:	00 00	add    BYTE PTR [eax],al
0x80f0:	0x66	0xea	0xf6	0x80	0x00	0x00	0xff	0xd0
0x80f8:	0xea	0xfd	0x80	0x08	0x00	0xc3	0x4b	0x45
0x8100:	0x52	0x4e	0x45	0x4c	0x20	0x20	0x20	0x20
0x8108:	0x20	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    edx,0xcec0092
Dump of assembler code from 0x8000 to 0x8040:
=> 0x00008000:	mov    edx,0xcec0092
   0x00008005:	add    ch,dh
   0x00008007:	mov    dx,0x0
   0x0000800b:	add    BYTE PTR [eax],al
   0x0000800d:	mov    ax,0x8143
   0x00008011:	add    BYTE PTR [eax],al
   0x00008013:	mov    cx,0x1000
   0x00008017:	add    BYTE PTR [eax],al
   0x00008019:	div    cx
   0x0000801c:	cmp    dx,0x0
   0x00008020:	mul    cx
   0x00008023:	je     0x802b
   0x00008025:	add    ax,0x1000
   0x00008029:	add    BYTE PTR [eax],al
   0x0000802b:	mov    bx,0x8133
   0x0000802f:	add    BYTE PTR [eax],al
   0x00008031:	mov    cx,0x28
   0x00008035:	add    BYTE PTR [eax],al
   0x00008037:	mov    WORD PTR [bp+di],cx
   0x0000803b:	mov    WORD PTR [bp+di+0x2],ax
End of assembler dump.
Dump of assembler code from 0x8000 to 0x8048:
=> 0x00008000:	mov    edx,0xcec0092
   0x00008005:	add    ch,dh
   0x00008007:	mov    dx,0x0
   0x0000800b:	add    BYTE PTR [eax],al
   0x0000800d:	mov    ax,0x8143
   0x00008011:	add    BYTE PTR [eax],al
   0x00008013:	mov    cx,0x1000
   0x00008017:	add    BYTE PTR [eax],al
   0x00008019:	div    cx
   0x0000801c:	cmp    dx,0x0
   0x00008020:	mul    cx
   0x00008023:	je     0x802b
   0x00008025:	add    ax,0x1000
   0x00008029:	add    BYTE PTR [eax],al
   0x0000802b:	mov    bx,0x8133
   0x0000802f:	add    BYTE PTR [eax],al
   0x00008031:	mov    cx,0x28
   0x00008035:	add    BYTE PTR [eax],al
   0x00008037:	mov    WORD PTR [bp+di],cx
   0x0000803b:	mov    WORD PTR [bp+di+0x2],ax
   0x00008040:	mov    di,ax
   0x00008043:	mov    ax,0x810a
   0x00008047:	add    BYTE PTR [eax],al
End of assembler dump.
Breakpoint 2 at 0x8040
Continuing.

Breakpoint 2, 0x00008040 in ?? ()
=> 0x00008040:	66 89 c7	mov    di,ax
Dump of assembler code from 0x8040 to 0x8088:
=> 0x00008040:	mov    di,ax
   0x00008043:	mov    ax,0x810a
   0x00008047:	add    BYTE PTR [eax],al
   0x00008049:	mov    si,ax
   0x0000804c:	mov    ecx,0x6766000a
   0x00008051:	mov    eax,DWORD PTR [esi]
   0x00008053:	mov    WORD PTR [bx],ax
   0x00008057:	add    di,0x4
   0x0000805b:	add    si,0x4
   0x0000805f:	loop   0x804f
   0x00008061:	mov    bx,0x8133
   0x00008065:	add    BYTE PTR [eax],al
   0x00008067:	lgdtd  [bp+di]
   0x0000806b:	mov    eax,cr0
   0x0000806e:	or     ax,0x1
   0x00008072:	mov    cr0,eax
   0x00008075:	jmp    0xe389:0x8807a
   0x0000807c:	mov    ax,WORD PTR [ebx]
   0x0000807f:	mov    ebx,0x813d
   0x00008084:	mov    DWORD PTR [ebx],eax
   0x00008086:	add    ebx,0x4
End of assembler dump.
Breakpoint 3 at 0x8075
Continuing.

Breakpoint 3, 0x00008075 in ?? ()
=> 0x00008075:	ea 7a 80 08 00 89 e3	jmp    0xe389:0x8807a
0x0000807a in ?? ()
=> 0x0000807a:	89 e3	mov    ebx,esp
0x0000807c in ?? ()
=> 0x0000807c:	66 8b 03	mov    ax,WORD PTR [ebx]
0x0000807f in ?? ()
=> 0x0000807f:	bb 3d 81 00 00	mov    ebx,0x813d
$1 = 0x7d69
0x00008084 in ?? ()
=> 0x00008084:	89 03	mov    DWORD PTR [ebx],eax
0x00008086 in ?? ()
=> 0x00008086:	83 c3 04	add    ebx,0x4
0x8130:	0xcf	0x00	0x00	0x28	0x00	0x00	0x90	0x00
0x8138:	0x00	0x00	0x00	0x00	0x00	0x69	0x7d	0x00
0x8140:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x8148:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x00008089 in ?? ()
=> 0x00008089:	31 c0	xor    eax,eax
0x0000808b in ?? ()
=> 0x0000808b:	66 89 03	mov    WORD PTR [ebx],ax
0x0000808e in ?? ()
=> 0x0000808e:	b8 21 00 00 00	mov    eax,0x21
0x8130:	0xcf	0x00	0x00	0x28	0x00	0x00	0x90	0x00
0x8138:	0x00	0x00	0x00	0x00	0x00	0x69	0x7d	0x00
0x8140:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x8148:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x00008093 in ?? ()
=> 0x00008093:	bb 39 81 00 00	mov    ebx,0x8139
0x00008098 in ?? ()
=> 0x00008098:	89 03	mov    DWORD PTR [ebx],eax
0x0000809a in ?? ()
=> 0x0000809a:	bb 39 81 00 00	mov    ebx,0x8139
0x0000809f in ?? ()
=> 0x0000809f:	8b 1b	mov    ebx,DWORD PTR [ebx]
0x000080a1 in ?? ()
=> 0x000080a1:	83 fb 40	cmp    ebx,0x40
0x000080a4 in ?? ()
=> 0x000080a4:	77 45	ja     0x80eb
0x000080a6 in ?? ()
=> 0x000080a6:	bf 00 7e 00 00	mov    edi,0x7e00
0x000080ab in ?? ()
=> 0x000080ab:	e8 3f 00 00 00	call   0x80ef
0x000080ef in ?? ()
=> 0x000080ef:	be 3d 81 00 00	mov    esi,0x813d
0x000080f4 in ?? ()
=> 0x000080f4:	ff 2e	jmp    FWORD PTR [esi]
0x0000e05b in ?? ()
=> 0x0000e05b:	00 00	add    BYTE PTR [eax],al
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8075
Continuing.

Breakpoint 1, 0x00008075 in ?? ()
=> 0x00008075:	ea 7a 80 18 00 89 e3	jmp    0xe389:0x18807a
0x0000807a in ?? ()
=> 0x0000807a:	89 e3	mov    ebx,esp
0x0000807c in ?? ()
=> 0x0000807c:	66 8b 03	mov    ax,WORD PTR [ebx]
0x0000807f in ?? ()
=> 0x0000807f:	bb 4f 81 00 00	mov    ebx,0x814f
$1 = 0x7d69
0x00008084 in ?? ()
=> 0x00008084:	89 03	mov    DWORD PTR [ebx],eax
0x00008086 in ?? ()
=> 0x00008086:	83 c3 04	add    ebx,0x4
0x00008089 in ?? ()
=> 0x00008089:	66 b8 08 00	mov    ax,0x8
0x0000808d in ?? ()
=> 0x0000808d:	66 89 03	mov    WORD PTR [ebx],ax
0x00008090 in ?? ()
=> 0x00008090:	b8 21 00 00 00	mov    eax,0x21
0x8140:	0x10	0x92	0xcf	0x00	0x00	0x38	0x00	0x00
0x8148:	0x90	0x00	0x00	0x00	0x00	0x00	0x00	0x69
0x8150:	0x7d	0x00	0x00	0x08	0x00	0x00	0x00	0x00
0x8158:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8075
Continuing.

Breakpoint 1, 0x00008075 in ?? ()
=> 0x00008075:	ea 7a 80 18 00 89 e3	jmp    0xe389:0x18807a
0x0000807a in ?? ()
=> 0x0000807a:	89 e3	mov    ebx,esp
$1 = 0x18
0x0000807c in ?? ()
=> 0x0000807c:	66 8b 03	mov    ax,WORD PTR [ebx]
0x0000807f in ?? ()
=> 0x0000807f:	bb 4f 81 00 00	mov    ebx,0x814f
0x00008084 in ?? ()
=> 0x00008084:	89 03	mov    DWORD PTR [ebx],eax
0x00008086 in ?? ()
=> 0x00008086:	83 c3 02	add    ebx,0x2
0x00008089 in ?? ()
=> 0x00008089:	66 b8 08 00	mov    ax,0x8
0x0000808d in ?? ()
=> 0x0000808d:	66 89 03	mov    WORD PTR [ebx],ax
0x00008090 in ?? ()
=> 0x00008090:	b8 21 00 00 00	mov    eax,0x21
0x8014:	0xb9	0x00	0x10	0x00	0x00	0x66	0xf7	0xf1
0x801c:	0x66	0x83	0xfa	0x00	0x66	0xf7	0xe1	0x74
0x8024:	0x06	0x66	0x05	0x00	0x10	0x00	0x00	0x66
0x802c:	0xbb	0x45	0x81	0x00	0x00	0x66	0xb9	0x38
0x8140:	0x10	0x92	0xcf	0x00	0x00	0x38	0x00	0x00
0x8148:	0x90	0x00	0x00	0x00	0x00	0x00	0x00	0x69
0x8150:	0x7d	0x08	0x00	0x00	0x00	0x00	0x00	0x00
0x8158:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x00008095 in ?? ()
=> 0x00008095:	bb 4b 81 00 00	mov    ebx,0x814b
0x0000809a in ?? ()
=> 0x0000809a:	89 03	mov    DWORD PTR [ebx],eax
0x0000809c in ?? ()
=> 0x0000809c:	bb 4b 81 00 00	mov    ebx,0x814b
0x000080a1 in ?? ()
=> 0x000080a1:	8b 1b	mov    ebx,DWORD PTR [ebx]
0x000080a3 in ?? ()
=> 0x000080a3:	83 fb 40	cmp    ebx,0x40
0x000080a6 in ?? ()
=> 0x000080a6:	77 45	ja     0x80ed
0x000080a8 in ?? ()
=> 0x000080a8:	bf 00 7e 00 00	mov    edi,0x7e00
0x000080ad in ?? ()
=> 0x000080ad:	e8 3f 00 00 00	call   0x80f1
0x000080f1 in ?? ()
=> 0x000080f1:	be 4f 81 00 00	mov    esi,0x814f
0x000080f6 in ?? ()
=> 0x000080f6:	ff 2e	jmp    FWORD PTR [esi]
0x0000e05b in ?? ()
=> 0x0000e05b:	00 00	add    BYTE PTR [eax],al
$2 = 0x0
eax            0x0                 0
ecx            0x0                 0
edx            0x663               1635
ebx            0x0                 0
esp            0x0                 0x0
ebp            0x0                 0x0
esi            0x0                 0
edi            0x0                 0
eip            0xe05b              0xe05b
eflags         0x2                 [ IOPL=0 ]
cs             0xf000              61440
ss             0x0                 0
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
fs_base        0x0                 0
gs_base        0x0                 0
k_gs_base      0x0                 0
cr0            0x60000010          [ CD NW ET ]
cr2            0x0                 0
cr3            0x0                 [ PDBR=0 PCID=0 ]
cr4            0x0                 [ ]
cr8            0x0                 0
efer           0x0                 [ ]
xmm0           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm1           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm2           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm3           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm4           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm5           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm6           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm7           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
mxcsr          0x1f80              [ IM DM ZM OM UM PM ]
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8075
Continuing.

Breakpoint 1, 0x00008075 in ?? ()
=> 0x00008075:	ea 7a 80 18 00 89 e3	jmp    0xe389:0x18807a
0x0000807a in ?? ()
=> 0x0000807a:	89 e3	mov    ebx,esp
0x0000807c in ?? ()
=> 0x0000807c:	66 8b 03	mov    ax,WORD PTR [ebx]
0x0000807f in ?? ()
=> 0x0000807f:	bb 55 81 00 00	mov    ebx,0x8155
0x00008084 in ?? ()
=> 0x00008084:	89 03	mov    DWORD PTR [ebx],eax
0x00008086 in ?? ()
=> 0x00008086:	83 c3 02	add    ebx,0x2
0x00008089 in ?? ()
=> 0x00008089:	66 b8 08 00	mov    ax,0x8
0x0000808d in ?? ()
=> 0x0000808d:	66 89 03	mov    WORD PTR [ebx],ax
0x9000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9008:	0xff	0xff	0x00	0x00	0x00	0x9a	0x8f	0x00
0x9010:	0xff	0xff	0x00	0x00	0x00	0x92	0x8f	0x00
0x9018:	0xff	0xff	0x00	0x00	0x00	0x9a	0xcf	0x00
0x9000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9008:	0xff	0xff	0x00	0x00	0x00	0x9a	0x8f	0x00
0x9010:	0xff	0xff	0x00	0x00	0x00	0x92	0x8f	0x00
0x9018:	0xff	0xff	0x00	0x00	0x00	0x9a	0xcf	0x00
0x9020:	0xff	0xff	0x00	0x00	0x00	0x92	0xcf	0x00
0x9028:	0xff	0xff	0x00	0x00	0x10	0x9a	0xcf	0x00
0x9030:	0xff	0xff	0x00	0x00	0x10	0x92	0xcf	0x00
0x9038:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x00008090 in ?? ()
=> 0x00008090:	b8 21 00 00 00	mov    eax,0x21
0x00008095 in ?? ()
=> 0x00008095:	bb 51 81 00 00	mov    ebx,0x8151
0x0000809a in ?? ()
=> 0x0000809a:	89 03	mov    DWORD PTR [ebx],eax
0x0000809c in ?? ()
=> 0x0000809c:	bb 51 81 00 00	mov    ebx,0x8151
0x000080a1 in ?? ()
=> 0x000080a1:	8b 1b	mov    ebx,DWORD PTR [ebx]
0x000080a3 in ?? ()
=> 0x000080a3:	83 fb 40	cmp    ebx,0x40
0x000080a6 in ?? ()
=> 0x000080a6:	77 45	ja     0x80ed
0x000080a8 in ?? ()
=> 0x000080a8:	bf 00 7e 00 00	mov    edi,0x7e00
0x000080ad in ?? ()
=> 0x000080ad:	e8 3f 00 00 00	call   0x80f1
0x000080f1 in ?? ()
=> 0x000080f1:	fa	cli    
0x000080f2 in ?? ()
=> 0x000080f2:	be 55 81 00 00	mov    esi,0x8155
0x000080f7 in ?? ()
=> 0x000080f7:	ea fe 80 00 00 08 00	jmp    0x8:0x80fe
0x000080fe in ?? ()
=> 0x000080fe:	ff d0	call   eax
0x00000021 in ?? ()
=> 0x00000021:	fe 00	inc    BYTE PTR [eax]
$1 = 0x21
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x80ad
Continuing.

Breakpoint 1, 0x000080ad in ?? ()
=> 0x000080ad:	e8 3f 00 00 00	call   0x80f1
0x000080f1 in ?? ()
=> 0x000080f1:	be 57 81 00 00	mov    esi,0x8157
0x000080f6 in ?? ()
=> 0x000080f6:	66 8b 06	mov    ax,WORD PTR [esi]
0x000080f9 in ?? ()
=> 0x000080f9:	ea 00 81 00 00 08 00	jmp    0x8:0x8100
0x00008100 in ?? ()
=> 0x00008100:	ff d0	call   eax
$1 = 0x7d69
0x00007d69 in ?? ()
=> 0x00007d69:	ba f7 01 ec 24	mov    edx,0x24ec01f7
0x00007d6c in ?? ()
=> 0x00007d6c:	ec	in     al,dx
0x00007d6d in ?? ()
=> 0x00007d6d:	24 c0	and    al,0xc0
eax            0x7d50              32080
ecx            0x0                 0
edx            0x1f7               503
ebx            0x21                33
esp            0x7bf6              0x7bf6
ebp            0x7bfe              0x7bfe
esi            0x8157              33111
edi            0x7e00              32256
eip            0x7d6d              0x7d6d
eflags         0x287               [ IOPL=0 IF SF PF CF ]
cs             0x8                 8
ss             0x0                 0
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
fs_base        0x0                 0
gs_base        0x0                 0
k_gs_base      0x0                 0
cr0            0x11                [ ET PE ]
cr2            0x0                 0
cr3            0x0                 [ PDBR=0 PCID=0 ]
cr4            0x0                 [ ]
cr8            0x0                 0
efer           0x0                 [ ]
xmm0           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm1           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
Quit
Dump of assembler code from 0x7d6d to 0x7dad:
=> 0x00007d6d:	and    al,0xc0
   0x00007d6f:	cmp    al,0x40
   0x00007d71:	jne    0x7d69
   0x00007d73:	mov    al,0x1
   0x00007d75:	mov    edx,0x66ee01f2
   0x00007d7a:	mov    eax,ebx
   0x00007d7c:	mov    edx,0x66ee01f3
   0x00007d81:	shr    eax,0x8
   0x00007d84:	mov    edx,0x66ee01f4
   0x00007d89:	shr    eax,0x8
   0x00007d8c:	mov    edx,0x66ee01f5
   0x00007d91:	shr    eax,0x8
   0x00007d94:	and    al,0xf
   0x00007d96:	or     al,0xe0
   0x00007d98:	mov    edx,0xbaee01f6
   0x00007d9d:	test   DWORD PTR [ecx],0xbaee20b0
   0x00007da3:	test   DWORD PTR [ecx],0x3c8824ec
   0x00007da9:	or     BYTE PTR [ebp-0xa],dh
   0x00007dac:	mov    edx,0xb901f0
End of assembler dump.
0x00007d6f in ?? ()
=> 0x00007d6f:	3c 40	cmp    al,0x40
0x00007d71 in ?? ()
=> 0x00007d71:	75 f6	jne    0x7d69
0x00007d73 in ?? ()
=> 0x00007d73:	b0 01	mov    al,0x1
0x00007d75 in ?? ()
=> 0x00007d75:	ba f2 01 ee 66	mov    edx,0x66ee01f2
0x00007d78 in ?? ()
=> 0x00007d78:	ee	out    dx,al
0x00007d79 in ?? ()
=> 0x00007d79:	66 89 d8	mov    ax,bx
0x00007d7c in ?? ()
=> 0x00007d7c:	ba f3 01 ee 66	mov    edx,0x66ee01f3
0x00007d7f in ?? ()
=> 0x00007d7f:	ee	out    dx,al
0x00007d80 in ?? ()
=> 0x00007d80:	66 c1 e8 08	shr    ax,0x8
0x00007d84 in ?? ()
=> 0x00007d84:	ba f4 01 ee 66	mov    edx,0x66ee01f4
0x00007d87 in ?? ()
=> 0x00007d87:	ee	out    dx,al
0x00007d88 in ?? ()
=> 0x00007d88:	66 c1 e8 08	shr    ax,0x8
0x00007d8c in ?? ()
=> 0x00007d8c:	ba f5 01 ee 66	mov    edx,0x66ee01f5
0x00007d8f in ?? ()
=> 0x00007d8f:	ee	out    dx,al
0x00007d90 in ?? ()
=> 0x00007d90:	66 c1 e8 08	shr    ax,0x8
0x00007d94 in ?? ()
=> 0x00007d94:	24 0f	and    al,0xf
0x00007d96 in ?? ()
=> 0x00007d96:	0c e0	or     al,0xe0
0x00007d98 in ?? ()
=> 0x00007d98:	ba f6 01 ee ba	mov    edx,0xbaee01f6
0x00007d9b in ?? ()
=> 0x00007d9b:	ee	out    dx,al
0x00007d9c in ?? ()
=> 0x00007d9c:	ba f7 01 b0 20	mov    edx,0x20b001f7
0x00007d9f in ?? ()
=> 0x00007d9f:	b0 20	mov    al,0x20
0x00007da1 in ?? ()
=> 0x00007da1:	ee	out    dx,al
0x00007da2 in ?? ()
=> 0x00007da2:	ba f7 01 ec 24	mov    edx,0x24ec01f7
0x00007da5 in ?? ()
=> 0x00007da5:	ec	in     al,dx
Dump of assembler code from 0x7da5 to 0x7dd5:
=> 0x00007da5:	in     al,dx
   0x00007da6:	and    al,0x88
   0x00007da8:	cmp    al,0x8
   0x00007daa:	jne    0x7da2
   0x00007dac:	mov    edx,0xb901f0
   0x00007db1:	add    ebp,ebp
   0x00007db3:	mov    DWORD PTR ds:0xe202c783,eax
   0x00007db9:	clc    
   0x00007dba:	ret    
   0x00007dbb:	dec    esp
   0x00007dbc:	dec    edi
   0x00007dbd:	inc    ecx
   0x00007dbe:	inc    esp
   0x00007dbf:	inc    ebp
   0x00007dc0:	push   edx
   0x00007dc1:	and    BYTE PTR [eax],ah
   0x00007dc3:	and    BYTE PTR [eax],ah
   0x00007dc5:	and    BYTE PTR [eax],al
   0x00007dc7:	push   esp
   0x00007dc8:	push   0x6f6c2065
   0x00007dcd:	popa   
   0x00007dce:	fs gs jb 0x7df2
   0x00007dd2:	ja     0x7e35
   0x00007dd4:	jae    0x7df6
End of assembler dump.
Breakpoint 2 at 0x7dac
Continuing.

Breakpoint 2, 0x00007dac in ?? ()
=> 0x00007dac:	ba f0 01 b9 00	mov    edx,0xb901f0
0x00007daf in ?? ()
=> 0x00007daf:	b9 00 01 ed 89	mov    ecx,0x89ed0100
0x00007db2 in ?? ()
=> 0x00007db2:	ed	in     eax,dx
0x00007db3 in ?? ()
=> 0x00007db3:	89 05 83 c7 02 e2	mov    DWORD PTR ds:0xe202c783,eax
0x00007db5 in ?? ()
=> 0x00007db5:	83 c7 02	add    edi,0x2
Breakpoint 3 at 0x7dba
Continuing.

Breakpoint 3, 0x00007dba in ?? ()
=> 0x00007dba:	c3	ret    
0x7e00:	0x4c	0x4f	0x41	0x44	0x45	0x52	0x20	0x20
0x7e08:	0x20	0x20	0x20	0x20	0x00	0xab	0x5a	0x72
0x7e10:	0xcf	0x56	0xcf	0x56	0x00	0x00	0x5a	0x72
0x7e18:	0xcf	0x56	0x03	0x00	0x4d	0x01	0x00	0x00
0x7e20:	0x4b	0x45	0x52	0x4e	0x45	0x4c	0x20	0x20
0x7e28:	0x20	0x20	0x20	0x20	0x00	0xb3	0x5a	0x72
0x7e30:	0xcf	0x56	0xcf	0x56	0x00	0x00	0x5a	0x72
0x7e38:	0xcf	0x56	0x00	0x00	0x00	0x00	0x00	0x00
0x7e00:	76 'L'	79 'O'	65 'A'	68 'D'	69 'E'	82 'R'	32 ' '	32 ' '
0x7e08:	32 ' '	32 ' '	32 ' '	32 ' '	0 '\000'	-85 '\253'	90 'Z'	114 'r'
0x7e10:	-49 '\317'	86 'V'	-49 '\317'	86 'V'	0 '\000'	0 '\000'	90 'Z'	114 'r'
0x7e18:	-49 '\317'	86 'V'	3 '\003'	0 '\000'	77 'M'	1 '\001'	0 '\000'	0 '\000'
0x7e20:	75 'K'	69 'E'	82 'R'	78 'N'	69 'E'	76 'L'	32 ' '	32 ' '
0x7e28:	32 ' '	32 ' '	32 ' '	32 ' '	0 '\000'	-77 '\263'	90 'Z'	114 'r'
0x7e30:	-49 '\317'	86 'V'	-49 '\317'	86 'V'	0 '\000'	0 '\000'	90 'Z'	114 'r'
0x7e38:	-49 '\317'	86 'V'	0 '\000'	0 '\000'	0 '\000'	0 '\000'	0 '\000'	0 '\000'
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8075
Continuing.

Breakpoint 1, 0x00008075 in ?? ()
=> 0x00008075:	ea 7a 80 18 00 89 e3	jmp    0xe389:0x18807a
Dump of assembler code from 0x8075 to 0x80b5:
=> 0x00008075:	jmp    0xe389:0x18807a
   0x0000807c:	mov    ax,WORD PTR [ebx]
   0x0000807f:	mov    ebx,0x814e
   0x00008084:	mov    WORD PTR [ebx],ax
   0x00008087:	mov    eax,0x21
   0x0000808c:	mov    ebx,0x814a
   0x00008091:	mov    DWORD PTR [ebx],eax
   0x00008093:	mov    ebx,0x814a
   0x00008098:	mov    ebx,DWORD PTR [ebx]
   0x0000809a:	cmp    ebx,0x40
   0x0000809d:	ja     0x80e4
   0x0000809f:	mov    edi,0x7e00
   0x000080a4:	call   0x80e8
   0x000080a9:	cld    
   0x000080aa:	xor    ebx,ebx
   0x000080ac:	mov    esi,ebx
   0x000080ae:	shl    esi,0x5
   0x000080b1:	add    esi,0x7e00
End of assembler dump.
Breakpoint 2 at 0x80e8
Continuing.

Breakpoint 2, 0x000080e8 in ?? ()
=> 0x000080e8:	be 4e 81 00 00	mov    esi,0x814e
Dump of assembler code from 0x80e8 to 0x8128:
=> 0x000080e8:	mov    esi,0x814e
   0x000080ed:	mov    ax,WORD PTR [esi]
   0x000080f0:	jmp    0x8:0x80f7
   0x000080f7:	call   eax
   0x000080f9:	jmp    0x4bc3:0x1880fe
   0x00008100:	inc    ebp
   0x00008101:	push   edx
   0x00008102:	dec    esi
   0x00008103:	inc    ebp
   0x00008104:	dec    esp
   0x00008105:	and    BYTE PTR [eax],ah
   0x00008107:	and    BYTE PTR [eax],ah
   0x00008109:	and    BYTE PTR [eax],al
   0x0000810b:	add    BYTE PTR [eax],al
   0x0000810d:	add    BYTE PTR [eax],al
   0x0000810f:	add    BYTE PTR [eax],al
   0x00008111:	add    BYTE PTR [eax],al
   0x00008113:	(bad)  
   0x00008114:	inc    DWORD PTR [eax]
   0x00008116:	add    BYTE PTR [eax],al
   0x00008118:	call   0x0:0xffff008f
   0x0000811f:	add    BYTE PTR [edx-0xff71],dl
   0x00008125:	add    BYTE PTR [eax],al
   0x00008127:	add    BYTE PTR [edx-0xff31],bl
End of assembler dump.
Breakpoint 3 at 0x80f9
Continuing.

Breakpoint 1, 0x00008075 in ?? ()
=> 0x00008075:	ea 7a 80 18 00 89 e3	jmp    0xe389:0x18807a
0x0000807a in ?? ()
=> 0x0000807a:	89 e3	mov    ebx,esp
Continuing.

Breakpoint 2, 0x000080e8 in ?? ()
=> 0x000080e8:	be 4e 81 00 00	mov    esi,0x814e
0x000080ed in ?? ()
=> 0x000080ed:	66 8b 06	mov    ax,WORD PTR [esi]
0x000080f0 in ?? ()
=> 0x000080f0:	ea f7 80 00 00 08 00	jmp    0x8:0x80f7
0x000080f7 in ?? ()
=> 0x000080f7:	ff d0	call   eax
0x00007d69 in ?? ()
=> 0x00007d69:	ba f7 01 ec 24	mov    edx,0x24ec01f7
Dump of assembler code from 0x7dba to 0x7dc4:
   0x00007dba:	ret    
   0x00007dbb:	dec    esp
   0x00007dbc:	dec    edi
   0x00007dbd:	inc    ecx
   0x00007dbe:	inc    esp
   0x00007dbf:	inc    ebp
   0x00007dc0:	push   edx
   0x00007dc1:	and    BYTE PTR [eax],ah
   0x00007dc3:	and    BYTE PTR [eax],ah
End of assembler dump.
Breakpoint 4 at 0x7dba
Continuing.

Breakpoint 4, 0x00007dba in ?? ()
=> 0x00007dba:	c3	ret    
0x00007c9c in ?? ()
=> 0x00007c9c:	fc	cld    
0x7bf0:	0x00	0x00	0x58	0x00	0x00	0x00	0xa6	0x7d
0x7bf8:	0x00	0x00	0x16	0x0a	0x9c	0x7c	0x00	0x00
0x7c00:	0xeb	0x3c	0x00	0x5a	0x69	0x67	0x68	0x74
0x7c08:	0x63	0x68	0x00	0x00	0x02	0x01	0x01	0x00
$1 = 0x7bfe
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x80e8
Continuing.

Breakpoint 1, 0x000080e8 in ?? ()
=> 0x000080e8:	be 4e 81 00 00	mov    esi,0x814e
0x000080ed in ?? ()
=> 0x000080ed:	66 8b 06	mov    ax,WORD PTR [esi]
0x000080f0 in ?? ()
=> 0x000080f0:	ea f7 80 00 00 08 00	jmp    0x8:0x80f7
0x000080f7 in ?? ()
=> 0x000080f7:	ff d0	call   eax
$1 = 0x7bf8
0x7bf0:	0x00	0x00	0x08	0x00	0x00	0x00	0xac	0x7d
0x7bf8:	0xa9	0x80	0x00	0x00	0x69	0x7d	0x00	0x00
0x7c00:	0xeb	0x3c	0x00	0x5a	0x69	0x67	0x68	0x74
0x7c08:	0x63	0x68	0x00	0x00	0x02	0x01	0x01	0x00
0x00007d69 in ?? ()
=> 0x00007d69:	ba f7 01 ec 24	mov    edx,0x24ec01f7
$2 = 0x7bf6
0x7bf0:	0x00	0x00	0x08	0x00	0x00	0x00	0xf9	0x80
0x7bf8:	0xa9	0x80	0x00	0x00	0x69	0x7d	0x00	0x00
0x7c00:	0xeb	0x3c	0x00	0x5a	0x69	0x67	0x68	0x74
0x7c08:	0x63	0x68	0x00	0x00	0x02	0x01	0x01	0x00
Breakpoint 2 at 0x7dba
Continuing.

Breakpoint 2, 0x00007dba in ?? ()
=> 0x00007dba:	c3	ret    
$3 = 0x7bfc
0x7bf0:	0x00	0x00	0x58	0x00	0x00	0x00	0xa6	0x7d
0x7bf8:	0x00	0x00	0x16	0x0a	0x9c	0x7c	0x00	0x00
0x7c00:	0xeb	0x3c	0x00	0x5a	0x69	0x67	0x68	0x74
0x7c08:	0x63	0x68	0x00	0x00	0x02	0x01	0x01	0x00
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8075
Continuing.

Breakpoint 1, 0x00008075 in ?? ()
=> 0x00008075:	ea 7a 80 18 00 89 e3	jmp    0xe389:0x18807a
0x0000807a in ?? ()
=> 0x0000807a:	89 e3	mov    ebx,esp
0x0000807c in ?? ()
=> 0x0000807c:	66 8b 03	mov    ax,WORD PTR [ebx]
$1 = 0x7bfc
0x0000807f in ?? ()
=> 0x0000807f:	bb 4e 81 00 00	mov    ebx,0x814e
0x00008084 in ?? ()
=> 0x00008084:	66 89 03	mov    WORD PTR [ebx],ax
0x00008087 in ?? ()
=> 0x00008087:	b8 21 00 00 00	mov    eax,0x21
0x0000808c in ?? ()
=> 0x0000808c:	bb 4a 81 00 00	mov    ebx,0x814a
$2 = 0x7bfc
0x00008091 in ?? ()
=> 0x00008091:	89 03	mov    DWORD PTR [ebx],eax
0x00008093 in ?? ()
=> 0x00008093:	bb 4a 81 00 00	mov    ebx,0x814a
0x00008098 in ?? ()
=> 0x00008098:	8b 1b	mov    ebx,DWORD PTR [ebx]
0x0000809a in ?? ()
=> 0x0000809a:	83 fb 40	cmp    ebx,0x40
0x0000809d in ?? ()
=> 0x0000809d:	77 45	ja     0x80e4
0x0000809f in ?? ()
=> 0x0000809f:	bf 00 7e 00 00	mov    edi,0x7e00
0x000080a4 in ?? ()
=> 0x000080a4:	e8 3f 00 00 00	call   0x80e8
$3 = 0x7bfc
0x7bf0:	0x00	0x00	0x08	0x00	0x00	0x00	0xac	0x7d
0x7bf8:	0x00	0x00	0x46	0x02	0x69	0x7d	0x00	0x00
0x7c00:	0xeb	0x3c	0x00	0x5a	0x69	0x67	0x68	0x74
0x7c08:	0x63	0x68	0x00	0x00	0x02	0x01	0x01	0x00
0x000080e8 in ?? ()
=> 0x000080e8:	be 4e 81 00 00	mov    esi,0x814e
$4 = 0x7bf8
0x7bf0:	0x00	0x00	0x08	0x00	0x00	0x00	0xac	0x7d
0x7bf8:	0xa9	0x80	0x00	0x00	0x69	0x7d	0x00	0x00
0x7c00:	0xeb	0x3c	0x00	0x5a	0x69	0x67	0x68	0x74
0x7c08:	0x63	0x68	0x00	0x00	0x02	0x01	0x01	0x00
0x000080ed in ?? ()
=> 0x000080ed:	66 8b 06	mov    ax,WORD PTR [esi]
0x000080f0 in ?? ()
=> 0x000080f0:	ea f7 80 00 00 08 00	jmp    0x8:0x80f7
0x000080f7 in ?? ()
=> 0x000080f7:	ff d0	call   eax
$5 = 0x7bf8
0x7bf0:	0x00	0x00	0x08	0x00	0x00	0x00	0xac	0x7d
0x7bf8:	0xa9	0x80	0x00	0x00	0x69	0x7d	0x00	0x00
0x7c00:	0xeb	0x3c	0x00	0x5a	0x69	0x67	0x68	0x74
0x7c08:	0x63	0x68	0x00	0x00	0x02	0x01	0x01	0x00
0x00007d69 in ?? ()
=> 0x00007d69:	ba f7 01 ec 24	mov    edx,0x24ec01f7
0x7bf0:	0x00	0x00	0x08	0x00	0x00	0x00	0xf9	0x80
0x7bf8:	0xa9	0x80	0x00	0x00	0x69	0x7d	0x00	0x00
0x7c00:	0xeb	0x3c	0x00	0x5a	0x69	0x67	0x68	0x74
0x7c08:	0x63	0x68	0x00	0x00	0x02	0x01	0x01	0x00
$6 = 0x7bf6
0x00007d6c in ?? ()
=> 0x00007d6c:	ec	in     al,dx
$7 = 0x7bf6
0x00007d6d in ?? ()
=> 0x00007d6d:	24 c0	and    al,0xc0
$8 = 0x7bf6
0x00007d6f in ?? ()
=> 0x00007d6f:	3c 40	cmp    al,0x40
$9 = 0x7bf6
0x00007d71 in ?? ()
=> 0x00007d71:	75 f6	jne    0x7d69
$10 = 0x7bf6
0x00007d73 in ?? ()
=> 0x00007d73:	b0 01	mov    al,0x1
Invalid number "23xb".
0x7bf0:	0x00	0x00	0x08	0x00	0x00	0x00	0xf9	0x80
0x7bf8:	0xa9	0x80	0x00	0x00	0x69	0x7d	0x00	0x00
0x7c00:	0xeb	0x3c	0x00	0x5a	0x69	0x67	0x68	0x74
0x7c08:	0x63	0x68	0x00	0x00	0x02	0x01	0x01	0x00
0x00007d75 in ?? ()
=> 0x00007d75:	ba f2 01 ee 66	mov    edx,0x66ee01f2
0x00007d78 in ?? ()
=> 0x00007d78:	ee	out    dx,al
0x00007d79 in ?? ()
=> 0x00007d79:	66 89 d8	mov    ax,bx
$11 = 0x7bf6
Dump of assembler code from 0x7d79 to 0x7da9:
=> 0x00007d79:	mov    ax,bx
   0x00007d7c:	mov    edx,0x66ee01f3
   0x00007d81:	shr    eax,0x8
   0x00007d84:	mov    edx,0x66ee01f4
   0x00007d89:	shr    eax,0x8
   0x00007d8c:	mov    edx,0x66ee01f5
   0x00007d91:	shr    eax,0x8
   0x00007d94:	and    al,0xf
   0x00007d96:	or     al,0xe0
   0x00007d98:	mov    edx,0xbaee01f6
   0x00007d9d:	test   DWORD PTR [ecx],0xbaee20b0
   0x00007da3:	test   DWORD PTR [ecx],0x3c8824ec
End of assembler dump.
Breakpoint 2 at 0x7d94
Continuing.

Breakpoint 2, 0x00007d94 in ?? ()
=> 0x00007d94:	24 0f	and    al,0xf
$12 = 0x7bfc
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x80e8
Continuing.

Breakpoint 1, 0x000080e8 in ?? ()
=> 0x000080e8:	be 4e 81 00 00	mov    esi,0x814e
Breakpoint 2 at 0x7d79
Continuing.

Breakpoint 2, 0x00007d79 in ?? ()
=> 0x00007d79:	66 89 d8	mov    ax,bx
$1 = 0x7bf6
0x00007d7c in ?? ()
=> 0x00007d7c:	ba f3 01 ee 66	mov    edx,0x66ee01f3
0x00007d7f in ?? ()
=> 0x00007d7f:	ee	out    dx,al
$2 = 0x7bf6
0x00007d80 in ?? ()
=> 0x00007d80:	66 c1 e8 08	shr    ax,0x8
$3 = 0x7bf6
0x00007d84 in ?? ()
=> 0x00007d84:	ba f4 01 ee 66	mov    edx,0x66ee01f4
$4 = 0x7bf6
0x00007d87 in ?? ()
=> 0x00007d87:	ee	out    dx,al
$5 = 0x7bf6
0x00007d88 in ?? ()
=> 0x00007d88:	66 c1 e8 08	shr    ax,0x8
$6 = 0x7bf6
0x00007d8c in ?? ()
=> 0x00007d8c:	ba f5 01 ee 66	mov    edx,0x66ee01f5
$7 = 0x7bf6
0x00007d8f in ?? ()
=> 0x00007d8f:	ee	out    dx,al
$8 = 0x7bf6
0x00007d90 in ?? ()
=> 0x00007d90:	66 c1 e8 08	shr    ax,0x8
$9 = 0x7bf6
0x00007d94 in ?? ()
=> 0x00007d94:	24 0f	and    al,0xf
$10 = 0x7bf6
0x00007d96 in ?? ()
=> 0x00007d96:	0c e0	or     al,0xe0
$11 = 0x7bf6
0x7bf0:	0x00	0x00	0x08	0x00	0x00	0x00	0xf9	0x80
0x7bf8:	0xa9	0x80	0x00	0x00	0x69	0x7d	0x00	0x00
0x7c00:	0xeb	0x3c	0x00	0x5a	0x69	0x67	0x68	0x74
0x7c08:	0x63	0x68	0x00	0x00	0x02	0x01	0x01	0x00
0x00007d98 in ?? ()
=> 0x00007d98:	ba f6 01 ee ba	mov    edx,0xbaee01f6
0x00007d9b in ?? ()
=> 0x00007d9b:	ee	out    dx,al
0x00007d9c in ?? ()
=> 0x00007d9c:	ba f7 01 b0 20	mov    edx,0x20b001f7
0x00007d9f in ?? ()
=> 0x00007d9f:	b0 20	mov    al,0x20
0x00007da1 in ?? ()
=> 0x00007da1:	ee	out    dx,al
0x00007da2 in ?? ()
=> 0x00007da2:	ba f7 01 ec 24	mov    edx,0x24ec01f7
$12 = 0x7bf6
0x00007da5 in ?? ()
=> 0x00007da5:	ec	in     al,dx
0x00007da6 in ?? ()
=> 0x00007da6:	24 88	and    al,0x88
0x00007da8 in ?? ()
=> 0x00007da8:	3c 08	cmp    al,0x8
0x00007daa in ?? ()
=> 0x00007daa:	75 f6	jne    0x7da2
0x00007dac in ?? ()
=> 0x00007dac:	ba f0 01 b9 00	mov    edx,0xb901f0
$13 = 0x7bf6
Dump of assembler code from 0x7dac to 0x7db6:
=> 0x00007dac:	mov    edx,0xb901f0
   0x00007db1:	add    ebp,ebp
   0x00007db3:	mov    DWORD PTR ds:0xe202c783,eax
End of assembler dump.
$14 = 0x7bf6
Dump of assembler code from 0x7dac to 0x7ddc:
=> 0x00007dac:	mov    edx,0xb901f0
   0x00007db1:	add    ebp,ebp
   0x00007db3:	mov    DWORD PTR ds:0xe202c783,eax
   0x00007db9:	clc    
   0x00007dba:	ret    
   0x00007dbb:	dec    esp
   0x00007dbc:	dec    edi
   0x00007dbd:	inc    ecx
   0x00007dbe:	inc    esp
   0x00007dbf:	inc    ebp
   0x00007dc0:	push   edx
   0x00007dc1:	and    BYTE PTR [eax],ah
   0x00007dc3:	and    BYTE PTR [eax],ah
   0x00007dc5:	and    BYTE PTR [eax],al
   0x00007dc7:	push   esp
   0x00007dc8:	push   0x6f6c2065
   0x00007dcd:	popa   
   0x00007dce:	fs gs jb 0x7df2
   0x00007dd2:	ja     0x7e35
   0x00007dd4:	jae    0x7df6
   0x00007dd6:	outs   dx,BYTE PTR ds:[esi]
   0x00007dd7:	outs   dx,DWORD PTR ds:[esi]
   0x00007dd8:	je     0x7dfa
   0x00007dda:	outs   dx,WORD PTR ds:[esi]
End of assembler dump.
Breakpoint 3 at 0x7dba
Continuing.

Breakpoint 2, 0x00007d79 in ?? ()
=> 0x00007d79:	66 89 d8	mov    ax,bx
Continuing.

Breakpoint 3, 0x00007dba in ?? ()
=> 0x00007dba:	c3	ret    
$15 = 0x7bfc
Continuing.

Breakpoint 2, 0x00007d79 in ?? ()
=> 0x00007d79:	66 89 d8	mov    ax,bx
$16 = 0x7bfc
Continuing.

Breakpoint 3, 0x00007dba in ?? ()
=> 0x00007dba:	c3	ret    
Continuing.

Breakpoint 2, 0x00007d79 in ?? ()
=> 0x00007d79:	66 89 d8	mov    ax,bx
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x7dba
Breakpoint 2 at 0x80e8
Continuing.

Breakpoint 1, 0x00007dba in ?? ()
=> 0x00007dba:	c3	ret    
$1 = 0x7bfc
0x7bf0:	0x00	0x00	0x58	0x00	0x00	0x00	0xa6	0x7d
0x7bf8:	0x00	0x00	0x16	0x0a	0x9c	0x7c	0x00	0x00
0x7c00:	0xeb	0x3c	0x00	0x5a	0x69	0x67	0x68	0x74
0x7c08:	0x63	0x68	0x00	0x00	0x02	0x01	0x01	0x00
Continuing.

Breakpoint 1, 0x00007dba in ?? ()
=> 0x00007dba:	c3	ret    
Continuing.

Breakpoint 1, 0x00007dba in ?? ()
=> 0x00007dba:	c3	ret    
Continuing.

Breakpoint 2, 0x000080e8 in ?? ()
=> 0x000080e8:	be 4e 81 00 00	mov    esi,0x814e
Continuing.

Breakpoint 1, 0x00007dba in ?? ()
=> 0x00007dba:	c3	ret    
Continuing.

Breakpoint 1, 0x00007dba in ?? ()
=> 0x00007dba:	c3	ret    
Continuing.

Breakpoint 1, 0x00007dba in ?? ()
=> 0x00007dba:	c3	ret    
Continuing.

Breakpoint 2, 0x000080e8 in ?? ()
=> 0x000080e8:	be 4e 81 00 00	mov    esi,0x814e
Detaching from pid process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x7dba
Breakpoint 2 at 0x80e9
Continuing.

Breakpoint 1, 0x00007dba in ?? ()
=> 0x00007dba:	c3	ret    
Continuing.

Breakpoint 1, 0x00007dba in ?? ()
=> 0x00007dba:	c3	ret    
Continuing.

Breakpoint 1, 0x00007dba in ?? ()
=> 0x00007dba:	c3	ret    
Continuing.

Breakpoint 1, 0x00007dba in ?? ()
=> 0x00007dba:	c3	ret    
Continuing.
[Inferior 1 (process 1) exited normally]
The program is not being run.
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	fa	cli    
Dump of assembler code from 0x8076 to 0x8080:
   0x00008076:	add    BYTE PTR [ecx],dh
   0x00008078:	sar    BYTE PTR [ebx+0x8274],0x89
   0x0000807f:	add    ecx,DWORD PTR [ecx+0x38b66e3]
End of assembler dump.
Dump of assembler code from 0x8000 to 0x8040:
=> 0x00008000:	cli    
   0x00008001:	mov    edx,0xcec0092
   0x00008006:	add    ch,dh
   0x00008008:	xor    dx,dx
   0x0000800b:	mov    ax,0x8278
   0x0000800f:	add    BYTE PTR [eax],al
   0x00008011:	mov    cx,0x1000
   0x00008015:	add    BYTE PTR [eax],al
   0x00008017:	div    cx
   0x0000801a:	cmp    dx,0x0
   0x0000801e:	mul    cx
   0x00008021:	je     0x8029
   0x00008023:	add    ax,0x1000
   0x00008027:	add    BYTE PTR [eax],al
   0x00008029:	mov    bx,0x8266
   0x0000802d:	add    BYTE PTR [eax],al
   0x0000802f:	mov    cx,0x38
   0x00008033:	add    BYTE PTR [eax],al
   0x00008035:	mov    DWORD PTR [bp+di],ecx
   0x00008038:	mov    WORD PTR [bp+di+0x2],ax
   0x0000803d:	mov    di,ax
End of assembler dump.
Dump of assembler code from 0x8021 to 0x8061:
   0x00008021:	je     0x8029
   0x00008023:	add    ax,0x1000
   0x00008027:	add    BYTE PTR [eax],al
   0x00008029:	mov    bx,0x8266
   0x0000802d:	add    BYTE PTR [eax],al
   0x0000802f:	mov    cx,0x38
   0x00008033:	add    BYTE PTR [eax],al
   0x00008035:	mov    DWORD PTR [bp+di],ecx
   0x00008038:	mov    WORD PTR [bp+di+0x2],ax
   0x0000803d:	mov    di,ax
   0x00008040:	mov    ax,0x822d
   0x00008044:	add    BYTE PTR [eax],al
   0x00008046:	mov    si,ax
   0x00008049:	mov    ecx,0x6766000e
   0x0000804e:	mov    eax,DWORD PTR [esi]
   0x00008050:	mov    WORD PTR [bx],ax
   0x00008054:	add    di,0x4
   0x00008058:	add    si,0x4
   0x0000805c:	loop   0x804c
   0x0000805e:	mov    bx,0x8266
End of assembler dump.
Dump of assembler code from 0x805e to 0x809e:
   0x0000805e:	mov    bx,0x8266
   0x00008062:	add    BYTE PTR [eax],al
   0x00008064:	lgdtd  [bp+di]
   0x00008068:	mov    eax,cr0
   0x0000806b:	or     ax,0x1
   0x0000806f:	mov    cr0,eax
   0x00008072:	jmp    0xc031:0x188077
   0x00008079:	mov    ebx,0x8274
   0x0000807e:	mov    DWORD PTR [ebx],eax
   0x00008080:	mov    ebx,esp
   0x00008082:	mov    ax,WORD PTR [ebx]
   0x00008085:	mov    ebx,0x8270
   0x0000808a:	mov    WORD PTR [ebx],ax
   0x0000808d:	mov    eax,0x21
   0x00008092:	mov    ebx,0x826c
   0x00008097:	mov    DWORD PTR [ebx],eax
   0x00008099:	mov    ebx,0x826c
End of assembler dump.
Breakpoint 2 at 0x8072
Continuing.

Breakpoint 2, 0x00008072 in ?? ()
=> 0x00008072:	ea 77 80 18 00 31 c0	jmp    0xc031:0x188077
0x00008077 in ?? ()
=> 0x00008077:	31 c0	xor    eax,eax
Dump of assembler code from 0x8077 to 0x80f7:
=> 0x00008077:	xor    eax,eax
   0x00008079:	mov    ebx,0x8274
   0x0000807e:	mov    DWORD PTR [ebx],eax
   0x00008080:	mov    ebx,esp
   0x00008082:	mov    ax,WORD PTR [ebx]
   0x00008085:	mov    ebx,0x8270
   0x0000808a:	mov    WORD PTR [ebx],ax
   0x0000808d:	mov    eax,0x21
   0x00008092:	mov    ebx,0x826c
   0x00008097:	mov    DWORD PTR [ebx],eax
   0x00008099:	mov    ebx,0x826c
   0x0000809e:	mov    ebx,DWORD PTR [ebx]
   0x000080a0:	cmp    ebx,0x40
   0x000080a3:	ja     0x8176
   0x000080a9:	mov    edi,0x7e00
   0x000080ae:	call   0x81b1
   0x000080b3:	cld    
   0x000080b4:	xor    ebx,ebx
   0x000080b6:	mov    esi,ebx
   0x000080b8:	shl    esi,0x5
   0x000080bb:	add    esi,0x7e00
   0x000080c1:	mov    edi,0x81c8
   0x000080c6:	mov    ecx,0xb
   0x000080cb:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   0x000080cd:	jcxz   0x80e6
   0x000080d0:	add    ebx,0x1
   0x000080d3:	cmp    ebx,0x10
   0x000080d6:	jl     0x80b6
   0x000080d8:	mov    ebx,0x826c
   0x000080dd:	mov    eax,DWORD PTR [ebx]
   0x000080df:	add    eax,0x1
   0x000080e2:	mov    DWORD PTR [ebx],eax
   0x000080e4:	jmp    0x8099
   0x000080e6:	xor    eax,eax
   0x000080e8:	shl    ebx,0x5
   0x000080eb:	add    ebx,0x7e00
   0x000080f1:	mov    eax,DWORD PTR [ebx+0x1c]
   0x000080f4:	cmp    eax,0x0
End of assembler dump.
Dump of assembler code from 0x80f4 to 0x8174:
   0x000080f4:	cmp    eax,0x0
   0x000080f7:	je     0x817d
   0x000080fd:	xor    eax,eax
   0x000080ff:	mov    ax,WORD PTR [ebx+0x1a]
   0x00008103:	mov    ebx,0x8272
   0x00008108:	mov    WORD PTR [ebx],ax
   0x0000810b:	cmp    ax,0xfff7
   0x0000810f:	ja     0x8174
   0x00008111:	cmp    ax,0x2000
   0x00008115:	jae    0x817d
   0x00008117:	xor    edx,edx
   0x00008119:	mov    ecx,0xff
   0x0000811e:	div    ecx
   0x00008120:	add    eax,0x1
   0x00008123:	mov    ebx,0x8274
   0x00008128:	mov    ebx,DWORD PTR [ebx]
   0x0000812a:	cmp    eax,ebx
   0x0000812c:	je     0x8141
   0x0000812e:	mov    ebx,0x8274
   0x00008133:	mov    DWORD PTR [ebx],eax
   0x00008135:	mov    edi,0x7e00
   0x0000813a:	mov    ebx,eax
   0x0000813c:	call   0x81b1
   0x00008141:	mov    ebx,0x8272
   0x00008146:	mov    bx,WORD PTR [ebx]
   0x00008149:	add    bx,0x3f
   0x0000814d:	mov    edi,0x100000
   0x00008152:	call   0x81b1
   0x00008157:	mov    ebx,0x8272
   0x0000815c:	mov    bx,WORD PTR [ebx]
   0x0000815f:	shl    bx,1
   0x00008162:	add    bx,0x7e00
   0x00008167:	mov    ax,WORD PTR [ebx]
   0x0000816a:	mov    ebx,0x8272
   0x0000816f:	mov    WORD PTR [ebx],ax
   0x00008172:	jmp    0x810b
End of assembler dump.
Dump of assembler code from 0x8172 to 0x81f2:
   0x00008172:	jmp    0x810b
   0x00008174:	jmp    0x81ae
   0x00008176:	mov    esi,0x81d4
   0x0000817b:	jmp    0x8182
   0x0000817d:	mov    esi,0x8200
   0x00008182:	mov    ecx,esi
   0x00008184:	mov    edi,0xb8000
   0x00008189:	mov    ah,0x7
   0x0000818b:	mov    al,BYTE PTR [esi]
   0x0000818d:	cmp    al,0x0
   0x0000818f:	je     0x819c
   0x00008191:	mov    WORD PTR [edi],ax
   0x00008194:	add    esi,0x1
   0x00008197:	add    edi,0x2
   0x0000819a:	jmp    0x818b
   0x0000819c:	mov    edx,0x3d4
   0x000081a1:	mov    al,0xf
   0x000081a3:	out    dx,al
   0x000081a4:	mov    edx,0x3d5
   0x000081a9:	sub    esi,ecx
   0x000081ab:	mov    eax,esi
   0x000081ad:	out    dx,al
   0x000081ae:	hlt    
   0x000081af:	jmp    0x81ae
   0x000081b1:	mov    esi,0x8270
   0x000081b6:	mov    ax,WORD PTR [esi]
   0x000081b9:	jmp    0x8:0x81c0
   0x000081c0:	call   eax
   0x000081c2:	jmp    0x4bc3:0x1881c7
   0x000081c9:	inc    ebp
   0x000081ca:	push   edx
   0x000081cb:	dec    esi
   0x000081cc:	inc    ebp
   0x000081cd:	dec    esp
   0x000081ce:	and    BYTE PTR [eax],ah
   0x000081d0:	and    BYTE PTR [eax],ah
   0x000081d2:	and    BYTE PTR [eax],al
   0x000081d4:	push   esp
   0x000081d5:	push   0x656b2065
   0x000081da:	jb     0x824a
   0x000081dc:	gs ins BYTE PTR es:[edi],dx
   0x000081de:	and    BYTE PTR [ecx+0x73],ch
   0x000081e1:	and    BYTE PTR [esi+0x6f],ch
   0x000081e4:	je     0x8206
   0x000081e6:	outs   dx,WORD PTR ds:[esi]
   0x000081e8:	jne    0x8258
   0x000081ea:	fs and BYTE PTR cs:[esi+0x69],al
   0x000081ef:	ins    BYTE PTR es:[edi],dx
   0x000081f0:	and    BYTE PTR gs:[ecx+0x6e],ch
End of assembler dump.
Breakpoint 3 at 0x81ae
Continuing.

Breakpoint 3, 0x000081ae in ?? ()
=> 0x000081ae:	f4	hlt    
0x100000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x81ae
Continuing.

Breakpoint 1, 0x000081ae in ?? ()
=> 0x000081ae:	f4	hlt    
0x100000:	0x31	0x32	0x33	0x0d	0x0a	0x00	0x00	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Continuing.
[Inferior 1 (process 1) exited normally]
The program is not being run.
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x80ae
Breakpoint 2 at 0x81ae
Continuing.

Breakpoint 2, 0x000081ae in ?? ()
=> 0x000081ae:	f4	hlt    
0x100000:	0xc5	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100008:	0x00	0x00	0x00	0x00	0x01	0x00	0x00	0x00
0x100010:	0x01	0x00	0x00	0x00	0x5a	0x00	0x00	0x00
0x100018:	0x01	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9008:	0xff	0xff	0x00	0x00	0x00	0x9a	0x8f	0x00
0x9010:	0xff	0xff	0x00	0x00	0x00	0x92	0x8f	0x00
0x9018:	0xff	0xff	0x00	0x00	0x00	0x9a	0xcf	0x00
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x81ae
Continuing.

Program received signal SIGINT, Interrupt.
0x000081c4 in ?? ()
=> 0x000081c4:	eb fd	jmp    0x81c3
0x100000:	0x7f	0x45	0x4c	0x46	0x01	0x01	0x01	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100010:	0x02	0x00	0x03	0x00	0x01	0x00	0x00	0x00
0x100018:	0x0c	0x00	0x10	0x00	0x34	0x00	0x00	0x00
0x1090f0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1090f8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x109100:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x109108:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x109000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x109008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x109010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x109018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100000:	0x7f	0x45	0x4c	0x46	0x01	0x01	0x01	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100010:	0x02	0x00	0x03	0x00	0x01	0x00	0x00	0x00
0x100018:	0x0c	0x00	0x10	0x00	0x34	0x00	0x00	0x00
0x100020:	0xd4	0x3e	0x00	0x00	0x00	0x00	0x00	0x00
0x100028:	0x34	0x00	0x20	0x00	0x03	0x00	0x28	0x00
0x100030:	0x10	0x00	0x0f	0x00	0x01	0x00	0x00	0x00
0x100038:	0x00	0x10	0x00	0x00	0x00	0x00	0x10	0x00
0x100040:	0x00	0x00	0x10	0x00	0x62	0x03	0x00	0x00
0x100048:	0x62	0x03	0x00	0x00	0x05	0x00	0x00	0x00
0x100050:	0x00	0x10	0x00	0x00	0x01	0x00	0x00	0x00
0x100058:	0x00	0x00	0x00	0x00	0x00	0x10	0x10	0x00
0x100060:	0x00	0x10	0x10	0x00	0x00	0x00	0x00	0x00
0x100068:	0xe8	0x3f	0x00	0x00	0x06	0x00	0x00	0x00
0x100070:	0x00	0x10	0x00	0x00	0x01	0x00	0x00	0x00
0x100078:	0x00	0x20	0x00	0x00	0x00	0x50	0x10	0x00
0x100080:	0x00	0x50	0x10	0x00	0x64	0x11	0x00	0x00
0x100088:	0x64	0x11	0x00	0x00	0x06	0x00	0x00	0x00
0x100090:	0x00	0x10	0x00	0x00	0x00	0x00	0x00	0x00
0x100098:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1000a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1000a8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1000b0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1000b8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1000c0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1000c8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1000d0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1000d8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1000e0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1000e8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1000f0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1000f8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100100:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100108:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100110:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100118:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100120:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100128:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100130:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100138:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100140:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100148:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100150:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100158:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100160:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100168:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100170:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100178:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100180:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100188:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100190:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100198:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1001a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1001a8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1001b0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1001b8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1001c0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1001c8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1001d0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1001d8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1001e0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1001e8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1001f0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1001f8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x101000:	0x02	0xb0	0xad	0x1b	0x03	0x00	0x00	0x00
0x101008:	0xfb	0x4f	0x52	0xe4	0xbc	0xbe	0x4f	0x10
0x101010:	0x00	0xe8	0x3d	0x00	0x00	0x00	0x83	0xec
0x101018:	0x06	0xc7	0x44	0x24	0x02	0xc0	0x4f	0x10
0x101020:	0x00	0x66	0xa1	0x06	0x50	0x10	0x00	0x66
0x101028:	0x89	0x04	0x24	0x0f	0x01	0x14	0x24	0x83
0x101030:	0xc4	0x06	0x66	0xb9	0x10	0x00	0x8e	0xc1
0x101038:	0x8e	0xd9	0x8e	0xe1	0x8e	0xe9	0x8e	0xd1
0x101040:	0x66	0x6a	0x08	0x68	0x49	0x00	0x10	0x00
0x101048:	0xcb	0x53	0xe8	0x12	0x00	0x00	0x00	0xfa
0x101050:	0xf4	0xeb	0xfd	0x55	0x89	0xe5	0x83	0xec
0x101058:	0x08	0xe8	0x96	0x02	0x00	0x00	0x90	0xc9
0x101060:	0xc3	0x55	0x89	0xe5	0x83	0xec	0x08	0xe8
0x101068:	0x4c	0x01	0x00	0x00	0x83	0xec	0x0c	0x68
0x101070:	0x00	0x60	0x10	0x00	0xe8	0x0a	0x01	0x00
0x101078:	0x00	0x83	0xc4	0x10	0x90	0xc9	0xc3	0x55
0x101080:	0x89	0xe5	0x83	0xec	0x18	0x8b	0x45	0x08
0x101088:	0x88	0x45	0xf4	0x80	0x7d	0xf4	0x0a	0x75
0x101090:	0x49	0x0f	0xb7	0x05	0xbe	0x4f	0x10	0x00
0x101098:	0x0f	0xb7	0xc0	0x69	0xc0	0xcd	0xcc	0x00
0x1010a0:	0x00	0xc1	0xe8	0x10	0x66	0xc1	0xe8	0x06
0x1010a8:	0x66	0xa3	0xbe	0x4f	0x10	0x00	0x0f	0xb7
0x1010b0:	0x05	0xbe	0x4f	0x10	0x00	0x83	0xc0	0x01
0x1010b8:	0x66	0xa3	0xbe	0x4f	0x10	0x00	0x0f	0xb7
0x1010c0:	0x15	0xbe	0x4f	0x10	0x00	0x89	0xd0	0xc1
0x1010c8:	0xe0	0x02	0x01	0xd0	0xc1	0xe0	0x04	0x66
0x1010d0:	0xa3	0xbe	0x4f	0x10	0x00	0xe9	0x84	0x00
0x1010d8:	0x00	0x00	0x80	0x7d	0xf4	0x0d	0x75	0x36
0x1010e0:	0x0f	0xb7	0x05	0xbe	0x4f	0x10	0x00	0x0f
0x1010e8:	0xb7	0xc0	0x69	0xc0	0xcd	0xcc	0x00	0x00
0x1010f0:	0xc1	0xe8	0x10	0x66	0xc1	0xe8	0x06	0x66
0x1010f8:	0xa3	0xbe	0x4f	0x10	0x00	0x0f	0xb7	0x15
0x101100:	0xbe	0x4f	0x10	0x00	0x89	0xd0	0xc1	0xe0
0x101108:	0x02	0x01	0xd0	0xc1	0xe0	0x04	0x66	0xa3
0x101110:	0xbe	0x4f	0x10	0x00	0xeb	0x48	0xa1	0x00
0x101118:	0x50	0x10	0x00	0x0f	0xb7	0x15	0xbe	0x4f
0x101120:	0x10	0x00	0x0f	0xb7	0xd2	0x01	0xd2	0x01
0x101128:	0xc2	0x0f	0xb6	0x45	0xf4	0x88	0x02	0xa1
0x101130:	0x00	0x50	0x10	0x00	0x0f	0xb7	0x15	0xbe
0x101138:	0x4f	0x10	0x00	0x0f	0xb7	0xd2	0x01	0xd2
0x101140:	0x83	0xc2	0x01	0x01	0xc2	0x0f	0xb6	0x05
0x101148:	0x04	0x50	0x10	0x00	0x88	0x02	0x0f	0xb7
0x101150:	0x05	0xbe	0x4f	0x10	0x00	0x83	0xc0	0x01
0x101158:	0x66	0xa3	0xbe	0x4f	0x10	0x00	0x0f	0xb7
0x101160:	0x05	0xbe	0x4f	0x10	0x00	0x66	0x3d	0xce
0x101168:	0x07	0x76	0x15	0xe8	0x42	0x00	0x00	0x00
0x101170:	0x0f	0xb7	0x05	0xbe	0x4f	0x10	0x00	0x83
0x101178:	0xe8	0x50	0x66	0xa3	0xbe	0x4f	0x10	0x00
0x101180:	0x90	0xc9	0xc3	0x55	0x89	0xe5	0x83	0xec
0x101188:	0x08	0xeb	0x19	0x8b	0x45	0x08	0x0f	0xb6
0x101190:	0x00	0x0f	0xbe	0xc0	0x83	0xec	0x0c	0x50
0x101198:	0xe8	0xe2	0xfe	0xff	0xff	0x83	0xc4	0x10
0x1011a0:	0x83	0x45	0x08	0x01	0x8b	0x45	0x08	0x0f
0x1011a8:	0xb6	0x00	0x84	0xc0	0x75	0xdd	0x90	0x90
0x1011b0:	0xc9	0xc3	0x55	0x89	0xe5	0x90	0x5d	0xc3
0x1011b8:	0x55	0x89	0xe5	0x83	0xec	0x10	0x66	0xc7
0x1011c0:	0x45	0xfe	0x00	0x00	0xeb	0x34	0xa1	0x00
0x1011c8:	0x50	0x10	0x00	0x0f	0xb7	0x55	0xfe	0x01
0x1011d0:	0xd2	0x01	0xd0	0xc6	0x00	0x00	0xa1	0x00
0x1011d8:	0x50	0x10	0x00	0x0f	0xb7	0x55	0xfe	0x01
0x1011e0:	0xd2	0x83	0xc2	0x01	0x01	0xc2	0x0f	0xb6
0x1011e8:	0x05	0x04	0x50	0x10	0x00	0x88	0x02	0x0f
0x1011f0:	0xb7	0x45	0xfe	0x83	0xc0	0x01	0x66	0x89
0x1011f8:	0x45	0xfe	0x66	0x81	0x7d	0xfe	0xcf	0x07
0x103ab0:	0x69	0x74	0x47	0x44	0x54	0x5f	0x76	0x00
0x103ab8:	0x5f	0x5a	0x38	0x74	0x74	0x79	0x43	0x6c
0x103ac0:	0x65	0x61	0x72	0x76	0x00	0x5f	0x5a	0x39
0x103ac8:	0x74	0x74	0x79	0x50	0x75	0x74	0x53	0x74
0x103ad0:	0x72	0x50	0x63	0x00	0x69	0x6e	0x69	0x74
0x103ad8:	0x47	0x44	0x54	0x5f	0x00	0x74	0x74	0x79
0x103ae0:	0x50	0x75	0x74	0x53	0x74	0x72	0x00	0x5f
0x103ae8:	0x5a	0x31	0x31	0x74	0x74	0x79	0x53	0x63
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Continuing.

Program received signal SIGINT, Interrupt.
0x000081c3 in ?? ()
=> 0x000081c3:	eb fd	jmp    0x81c2
0x100000:	0x7f	0x45	0x4c	0x46	0x01	0x01	0x01	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100010:	0x02	0x00	0x03	0x00	0x01	0x00	0x00	0x00
0x100018:	0x0c	0x00	0x10	0x00	0x34	0x00	0x00	0x00
0x103d50:	0x74	0x2e	0x6f	0x00	0x73	0x74	0x61	0x63
0x103d58:	0x6b	0x42	0x6f	0x74	0x74	0x6f	0x6d	0x00
0x103d60:	0x73	0x74	0x61	0x63	0x6b	0x54	0x6f	0x70
0x103d68:	0x00	0x47	0x44	0x54	0x44	0x6f	0x6e	0x65
0x1040b0:	0x01	0x00	0x00	0x00	0x8e	0x00	0x00	0x00
0x1040b8:	0x01	0x00	0x00	0x00	0x30	0x00	0x00	0x00
0x1040c0:	0x00	0x00	0x00	0x00	0xb8	0x3b	0x00	0x00
0x1040c8:	0x12	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Detaching from pid process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Continuing.

Program received signal SIGINT, Interrupt.
0x000e8390 in ?? ()
=> 0x000e8390:	f3 a4	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x81e3
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x81e3
Continuing.

Breakpoint 1, 0x000081e3 in ?? ()
=> 0x000081e3:	f4	hlt    
0x100000:	0x7f	0x45	0x4c	0x46	0x01	0x01	0x01	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100010:	0x02	0x00	0x03	0x00	0x01	0x00	0x00	0x00
0x100018:	0x0c	0x00	0x10	0x00	0x34	0x00	0x00	0x00
0x7e00:	Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Continuing.

Program received signal SIGINT, Interrupt.
0x00100051 in ?? ()
=> 0x00100051:	eb fd	jmp    0x100050
0x100000:	0x02	0xb0	0xad	0x1b	0x03	0x00	0x00	0x00
0x100008:	0xfb	0x4f	0x52	0xe4	0xbc	0xbe	0x4f	0x10
0x100010:	0x00	0xe8	0x3d	0x00	0x00	0x00	0x83	0xec
0x100018:	0x06	0xc7	0x44	0x24	0x02	0xc0	0x4f	0x10
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Continuing.

Program received signal SIGINT, Interrupt.
0x00100051 in ?? ()
=> 0x00100051:	eb fd	jmp    0x100050
$1 = 0x104fbc
0x104fb0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104fb8:	0x4f	0x00	0x10	0x00	0x00	0x00	0xaa	0x00
0x104fc0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104fc8:	0xff	0xff	0x00	0x00	0x00	0x9a	0xcf	0x00
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    edx,0xcec0092
Dump of assembler code from 0x8000 to 0x8040:
=> 0x00008000:	mov    edx,0xcec0092
   0x00008005:	add    ch,dh
   0x00008007:	xor    dx,dx
   0x0000800a:	mov    ax,0x8543
   0x0000800e:	add    BYTE PTR [eax],al
   0x00008010:	mov    cx,0x1000
   0x00008014:	add    BYTE PTR [eax],al
   0x00008016:	div    cx
   0x00008019:	cmp    dx,0x0
   0x0000801d:	mul    cx
   0x00008020:	je     0x8028
   0x00008022:	add    ax,0x1000
   0x00008026:	add    BYTE PTR [eax],al
   0x00008028:	mov    bx,0x8343
   0x0000802c:	add    BYTE PTR [eax],al
   0x0000802e:	mov    cx,0x38
   0x00008032:	add    BYTE PTR [eax],al
   0x00008034:	mov    DWORD PTR [bp+di],ecx
   0x00008037:	mov    WORD PTR [bp+di+0x2],ax
   0x0000803c:	mov    di,ax
   0x0000803f:	mov    ax,0x8349
End of assembler dump.
Dump of assembler code from 0x803c to 0x807c:
   0x0000803c:	mov    di,ax
   0x0000803f:	mov    ax,0x8349
   0x00008043:	add    BYTE PTR [eax],al
   0x00008045:	mov    si,ax
   0x00008048:	mov    ecx,0x6766000e
   0x0000804d:	mov    eax,DWORD PTR [esi]
   0x0000804f:	mov    WORD PTR [bx],ax
   0x00008053:	add    di,0x4
   0x00008057:	add    si,0x4
   0x0000805b:	loop   0x804b
   0x0000805d:	mov    bx,0x8343
   0x00008061:	add    BYTE PTR [eax],al
   0x00008063:	lgdtd  [bp+di]
   0x00008067:	mov    di,0x8357
   0x0000806b:	add    BYTE PTR [eax],al
   0x0000806d:	mov    bx,0x0
   0x00008071:	add    BYTE PTR [eax],al
   0x00008073:	xor    ax,ax
   0x00008076:	mov    ax,0xe820
   0x0000807a:	add    BYTE PTR [eax],al
End of assembler dump.
Breakpoint 2 at 0x8067
Continuing.

Breakpoint 2, 0x00008067 in ?? ()
=> 0x00008067:	66 bf 57 83	mov    di,0x8357
0x0000806d in ?? ()
=> 0x0000806d:	66 bb 00 00	mov    bx,0x0
0x00008073 in ?? ()
=> 0x00008073:	66 31 c0	xor    ax,ax
0x00008076 in ?? ()
=> 0x00008076:	66 b8 20 e8	mov    ax,0xe820
0x0000807c in ?? ()
=> 0x0000807c:	66 b9 14 00	mov    cx,0x14
0x00008082 in ?? ()
=> 0x00008082:	66 ba 50 41	mov    dx,0x4150
0x00008088 in ?? ()
=> 0x00008088:	cd 15	int    0x15
Dump of assembler code from 0x8088 to 0x8092:
=> 0x00008088:	int    0x15
   0x0000808a:	jb     0x80a4
   0x0000808c:	cmp    dx,0x4150
   0x00008091:	dec    ebp
End of assembler dump.
Breakpoint 3 at 0x808a
Continuing.

Breakpoint 3, 0x0000808a in ?? ()
=> 0x0000808a:	72 18	jb     0x80a4
0x8350:	0x00	0xff	0xff	0x00	0x00	0x00	0x9a	0x00
0x8358:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x8360:	0xfc	0x09	0x00	0x00	0x00	0x00	0x00	0x01
0x8368:	0x00	0x00	0x00	0x00	0x00	0x00	0x92	0xcf
$1 = 0x14
$2 = 0x534d4150
$3 = 0x1
0x0000808c in ?? ()
=> 0x0000808c:	66 81 fa 50 41	cmp    dx,0x4150
0x00008093 in ?? ()
=> 0x00008093:	75 0f	jne    0x80a4
0x00008095 in ?? ()
=> 0x00008095:	66 b8 14 00	mov    ax,0x14
0x0000809b in ?? ()
=> 0x0000809b:	66 01 c7	add    di,ax
0x0000809e in ?? ()
=> 0x0000809e:	66 83 fb 00	cmp    bx,0x0
$4 = 0x836b
0x000080a2 in ?? ()
=> 0x000080a2:	75 d2	jne    0x8076
0x00008076 in ?? ()
=> 0x00008076:	66 b8 20 e8	mov    ax,0xe820
0x0000807c in ?? ()
=> 0x0000807c:	66 b9 14 00	mov    cx,0x14
0x00008082 in ?? ()
=> 0x00008082:	66 ba 50 41	mov    dx,0x4150
0x00008088 in ?? ()
=> 0x00008088:	cd 15	int    0x15
0x0000f859 in ?? ()
=> 0x0000f859:	00 00	add    BYTE PTR [eax],al
Continuing.

Breakpoint 3, 0x0000808a in ?? ()
=> 0x0000808a:	72 18	jb     0x80a4
0x8350:	0x00	0xff	0xff	0x00	0x00	0x00	0x9a	0x00
0x8358:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x8360:	0xfc	0x09	0x00	0x00	0x00	0x00	0x00	0x01
0x8368:	0x00	0x00	0x00	0x00	0xfc	0x09	0x00	0x00
0x8370:	0x00	0x00	0x00	0x00	0x04	0x00	0x00	0x00
0x8378:	0x00	0x00	0x00	0x02	0x00	0x00	0x00	0xcf
0x8380:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x8388:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x8390:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x9008:	0xff	0xff	0x00	0x00	0x00	0x9a	0x8f	0x00
0x9010:	0xff	0xff	0x00	0x00	0x00	0x92	0x8f	0x00
0x9018:	0xff	0xff	0x00	0x00	0x00	0x9a	0xcf	0x00
0x0000808c in ?? ()
=> 0x0000808c:	66 81 fa 50 41	cmp    dx,0x4150
0x00008093 in ?? ()
=> 0x00008093:	75 0f	jne    0x80a4
0x00008095 in ?? ()
=> 0x00008095:	66 b8 14 00	mov    ax,0x14
0x0000809b in ?? ()
=> 0x0000809b:	66 01 c7	add    di,ax
0x0000809e in ?? ()
=> 0x0000809e:	66 83 fb 00	cmp    bx,0x0
0x000080a2 in ?? ()
=> 0x000080a2:	75 d2	jne    0x8076
0x00008076 in ?? ()
=> 0x00008076:	66 b8 20 e8	mov    ax,0xe820
0x0000807c in ?? ()
=> 0x0000807c:	66 b9 14 00	mov    cx,0x14
0x00008082 in ?? ()
=> 0x00008082:	66 ba 50 41	mov    dx,0x4150
0x00008088 in ?? ()
=> 0x00008088:	cd 15	int    0x15
Continuing.

Breakpoint 3, 0x0000808a in ?? ()
=> 0x0000808a:	72 18	jb     0x80a4
0x8370:	0x00	0x00	0x00	0x00	0x04	0x00	0x00	0x00
0x8378:	0x00	0x00	0x00	0x02	0x00	0x00	0x00	0x00
0x8380:	0x00	0x0f	0x00	0x00	0x00	0x00	0x00	0x00
0x8388:	0x00	0x01	0x00	0x00	0x00	0x00	0x00	0x02
0x8390:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x8398:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x83a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x83a8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x83b0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    edx,0xcec0092
Dump of assembler code from 0x8000 to 0x8048:
=> 0x00008000:	mov    edx,0xcec0092
   0x00008005:	add    ch,dh
   0x00008007:	xor    dx,dx
   0x0000800a:	mov    ax,0x85be
   0x0000800e:	add    BYTE PTR [eax],al
   0x00008010:	mov    cx,0x1000
   0x00008014:	add    BYTE PTR [eax],al
   0x00008016:	div    cx
   0x00008019:	cmp    dx,0x0
   0x0000801d:	mul    cx
   0x00008020:	je     0x8028
   0x00008022:	add    ax,0x1000
   0x00008026:	add    BYTE PTR [eax],al
   0x00008028:	mov    bx,0x83be
   0x0000802c:	add    BYTE PTR [eax],al
   0x0000802e:	mov    cx,0x38
   0x00008032:	add    BYTE PTR [eax],al
   0x00008034:	mov    DWORD PTR [bp+di],ecx
   0x00008037:	mov    WORD PTR [bp+di+0x2],ax
   0x0000803c:	mov    di,ax
   0x0000803f:	mov    ax,0x83c4
   0x00008043:	add    BYTE PTR [eax],al
   0x00008045:	mov    si,ax
End of assembler dump.
Dump of assembler code from 0x803c to 0x8084:
   0x0000803c:	mov    di,ax
   0x0000803f:	mov    ax,0x83c4
   0x00008043:	add    BYTE PTR [eax],al
   0x00008045:	mov    si,ax
   0x00008048:	mov    ecx,0x6766000e
   0x0000804d:	mov    eax,DWORD PTR [esi]
   0x0000804f:	mov    WORD PTR [bx],ax
   0x00008053:	add    di,0x4
   0x00008057:	add    si,0x4
   0x0000805b:	loop   0x804b
   0x0000805d:	mov    bx,0x83be
   0x00008061:	add    BYTE PTR [eax],al
   0x00008063:	lgdtd  [bp+di]
   0x00008067:	mov    bx,0x83ce
   0x0000806b:	add    BYTE PTR [eax],al
   0x0000806d:	xor    ax,ax
   0x00008070:	mov    WORD PTR [bp+di],ax
   0x00008074:	mov    di,0x83d2
   0x00008078:	add    BYTE PTR [eax],al
   0x0000807a:	mov    bx,0x0
   0x0000807e:	add    BYTE PTR [eax],al
   0x00008080:	mov    ax,0xe820
End of assembler dump.
Breakpoint 2 at 0x8067
Continuing.

Breakpoint 2, 0x00008067 in ?? ()
=> 0x00008067:	66 bb ce 83	mov    bx,0x83ce
0x0000806d in ?? ()
=> 0x0000806d:	66 31 c0	xor    ax,ax
0x00008070 in ?? ()
=> 0x00008070:	66 67 89 03	mov    WORD PTR [bp+di],ax
0x00008074 in ?? ()
=> 0x00008074:	66 bf d2 83	mov    di,0x83d2
0x83c0:	0x00	0x90	0x00	0x00	0x00	0x00	0x00	0x00
0x83c8:	0x00	0x00	0x00	0x00	0xff	0xff	0x00	0x00
0x83d0:	0x00	0x00	0x8f	0x00	0xff	0xff	0x00	0x00
0x83d8:	0x00	0x92	0x8f	0x00	0xff	0xff	0x00	0x00
$1 = 0x0
$2 = 0x9038
0x0000807a in ?? ()
=> 0x0000807a:	66 bb 00 00	mov    bx,0x0
0x00008080 in ?? ()
=> 0x00008080:	66 b8 20 e8	mov    ax,0xe820
0x00008086 in ?? ()
=> 0x00008086:	66 b9 14 00	mov    cx,0x14
0x0000808c in ?? ()
=> 0x0000808c:	66 ba 50 41	mov    dx,0x4150
0x00008092 in ?? ()
=> 0x00008092:	cd 15	int    0x15
Dump of assembler code from 0x8092 to 0x809c:
=> 0x00008092:	int    0x15
   0x00008094:	jb     0x81668121
   0x0000809a:	cli    
   0x0000809b:	push   eax
End of assembler dump.
Breakpoint 3 at 0x8094
Continuing.

Breakpoint 3, 0x00008094 in ?? ()
=> 0x00008094:	0f 82 87 00 66 81	jb     0x81668121
0x00008098 in ?? ()
=> 0x00008098:	66 81 fa 50 41	cmp    dx,0x4150
0x0000809f in ?? ()
=> 0x0000809f:	75 7e	jne    0x811f
0x000080a1 in ?? ()
=> 0x000080a1:	26 66 67 8b 0f	mov    cx,WORD PTR es:[bx]
0x000080a6 in ?? ()
=> 0x000080a6:	66 81 f9 00 00	cmp    cx,0x0
$3 = 0x0
0x000080ad in ?? ()
=> 0x000080ad:	75 20	jne    0x80cf
0x000080cf in ?? ()
=> 0x000080cf:	66 b8 14 00	mov    ax,0x14
0x000080d5 in ?? ()
=> 0x000080d5:	66 01 c7	add    di,ax
0x000080d8 in ?? ()
=> 0x000080d8:	66 83 fb 00	cmp    bx,0x0
0x000080dc in ?? ()
=> 0x000080dc:	74 41	je     0x811f
Continuing.

Program received signal SIGINT, Interrupt.
0x0000832b in ?? ()
=> 0x0000832b:	eb fd	jmp    0x832a
0x83c0:	0x00	0x00	0x69	0x7d	0xff	0xff	0x01	0x00
0x83c8:	0x00	0x00	0x00	0x42	0x00	0x00	0xff	0xff
0x83d0:	0xef	0xff	0x00	0x00	0x00	0x00	0x00	0x00
0x83d8:	0x00	0x00	0x00	0xfc	0x09	0x00	0x00	0x00
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x803c
Continuing.

Breakpoint 1, 0x0000803c in ?? ()
=> 0x0000803c:	66 89 c7	mov    di,ax
Dump of assembler code from 0x803c to 0x8084:
=> 0x0000803c:	mov    di,ax
   0x0000803f:	mov    ax,0x83c4
   0x00008043:	add    BYTE PTR [eax],al
   0x00008045:	mov    si,ax
   0x00008048:	mov    ecx,0x6766000e
   0x0000804d:	mov    eax,DWORD PTR [esi]
   0x0000804f:	mov    WORD PTR [bx],ax
   0x00008053:	add    di,0x4
   0x00008057:	add    si,0x4
   0x0000805b:	loop   0x804b
   0x0000805d:	mov    bx,0x83be
   0x00008061:	add    BYTE PTR [eax],al
   0x00008063:	lgdtd  [bp+di]
   0x00008067:	mov    bx,0x83ce
   0x0000806b:	add    BYTE PTR [eax],al
   0x0000806d:	xor    ax,ax
   0x00008070:	mov    WORD PTR [bp+di],ax
   0x00008074:	mov    di,0x83d2
   0x00008078:	add    BYTE PTR [eax],al
   0x0000807a:	mov    bx,0x0
   0x0000807e:	add    BYTE PTR [eax],al
   0x00008080:	mov    ax,0xe820
End of assembler dump.
Breakpoint 2 at 0x8067
Dump of assembler code from 0x8067 to 0x80af:
   0x00008067:	mov    bx,0x83ce
   0x0000806b:	add    BYTE PTR [eax],al
   0x0000806d:	xor    ax,ax
   0x00008070:	mov    WORD PTR [bp+di],ax
   0x00008074:	mov    di,0x83d2
   0x00008078:	add    BYTE PTR [eax],al
   0x0000807a:	mov    bx,0x0
   0x0000807e:	add    BYTE PTR [eax],al
   0x00008080:	mov    ax,0xe820
   0x00008084:	add    BYTE PTR [eax],al
   0x00008086:	mov    cx,0x14
   0x0000808a:	add    BYTE PTR [eax],al
   0x0000808c:	mov    dx,0x4150
   0x00008090:	dec    ebp
   0x00008091:	push   ebx
   0x00008092:	int    0x15
   0x00008094:	jb     0x81668121
   0x0000809a:	cli    
   0x0000809b:	push   eax
   0x0000809c:	inc    ecx
   0x0000809d:	dec    ebp
   0x0000809e:	push   ebx
   0x0000809f:	jne    0x811f
   0x000080a1:	mov    cx,WORD PTR es:[bx]
   0x000080a6:	cmp    cx,0x0
   0x000080ab:	adc    BYTE PTR [eax],al
   0x000080ad:	jne    0x80cf
End of assembler dump.
Breakpoint 3 at 0x8094
Continuing.

Breakpoint 2, 0x00008067 in ?? ()
=> 0x00008067:	66 bb ce 83	mov    bx,0x83ce
Continuing.

Breakpoint 3, 0x00008094 in ?? ()
=> 0x00008094:	0f 82 87 00 66 81	jb     0x81668121
0x00008098 in ?? ()
=> 0x00008098:	66 81 fa 50 41	cmp    dx,0x4150
Breakpoint 4 at 0x808c
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8094
Breakpoint 2 at 0x808c
Continuing.

Breakpoint 2, 0x0000808c in ?? ()
=> 0x0000808c:	66 ba 50 41	mov    dx,0x4150
Continuing.

Breakpoint 1, 0x00008094 in ?? ()
=> 0x00008094:	0f 82 87 00 66 81	jb     0x81668121
0x00008098 in ?? ()
=> 0x00008098:	66 81 fa 50 41	cmp    dx,0x4150
0x0000809f in ?? ()
=> 0x0000809f:	75 7e	jne    0x811f
0x000080a1 in ?? ()
=> 0x000080a1:	26 66 67 8b 0f	mov    cx,WORD PTR es:[bx]
$1 = 0x83d2
0x83d2:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x83da:	0x00	0xfc	0x09	0x00	0x00	0x00	0x00	0x00
0x83e2:	0x01	0x00	0x00	0x00
0x000080a6 in ?? ()
=> 0x000080a6:	66 81 f9 00 00	cmp    cx,0x0
0x000080ad in ?? ()
=> 0x000080ad:	75 20	jne    0x80cf
0x000080cf in ?? ()
=> 0x000080cf:	66 b8 14 00	mov    ax,0x14
0x000080d5 in ?? ()
=> 0x000080d5:	66 01 c7	add    di,ax
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8094
Breakpoint 2 at 0x808c
Continuing.

Breakpoint 2, 0x0000808c in ?? ()
=> 0x0000808c:	66 ba 50 41	mov    dx,0x4150
Continuing.

Breakpoint 1, 0x00008094 in ?? ()
=> 0x00008094:	0f 82 8b 00 66 81	jb     0x81668125
0x00008098 in ?? ()
=> 0x00008098:	66 81 fa 50 41	cmp    dx,0x4150
0x0000809f in ?? ()
=> 0x0000809f:	0f 85 80 00 26 66	jne    0x66268125
0x000080a3 in ?? ()
=> 0x000080a3:	26 66 67 8b 0f	mov    cx,WORD PTR es:[bx]
0x000080a8 in ?? ()
=> 0x000080a8:	66 81 f9 00 00	cmp    cx,0x0
0x000080af in ?? ()
=> 0x000080af:	75 20	jne    0x80d1
0x000080d1 in ?? ()
=> 0x000080d1:	66 b8 14 00	mov    ax,0x14
0x000080d7 in ?? ()
=> 0x000080d7:	66 01 c7	add    di,ax
0x000080da in ?? ()
=> 0x000080da:	66 83 fb 00	cmp    bx,0x0
0x000080de in ?? ()
=> 0x000080de:	74 43	je     0x8123
0x000080e0 in ?? ()
=> 0x000080e0:	eb 9e	jmp    0x8080
0x00008080 in ?? ()
=> 0x00008080:	66 b8 20 e8	mov    ax,0xe820
Continuing.

Breakpoint 2, 0x0000808c in ?? ()
=> 0x0000808c:	66 ba 50 41	mov    dx,0x4150
Continuing.

Breakpoint 1, 0x00008094 in ?? ()
=> 0x00008094:	0f 82 8b 00 66 81	jb     0x81668125
0x00008098 in ?? ()
=> 0x00008098:	66 81 fa 50 41	cmp    dx,0x4150
0x0000809f in ?? ()
=> 0x0000809f:	0f 85 80 00 26 66	jne    0x66268125
0x000080a3 in ?? ()
=> 0x000080a3:	26 66 67 8b 0f	mov    cx,WORD PTR es:[bx]
0x000080a8 in ?? ()
=> 0x000080a8:	66 81 f9 00 00	cmp    cx,0x0
$1 = void
$2 = 0x9fc00
0x000080af in ?? ()
=> 0x000080af:	75 20	jne    0x80d1
0x000080d1 in ?? ()
=> 0x000080d1:	66 b8 14 00	mov    ax,0x14
0x000080d7 in ?? ()
=> 0x000080d7:	66 01 c7	add    di,ax
0x000080da in ?? ()
=> 0x000080da:	66 83 fb 00	cmp    bx,0x0
0x000080de in ?? ()
=> 0x000080de:	74 43	je     0x8123
0x000080e0 in ?? ()
=> 0x000080e0:	eb 9e	jmp    0x8080
0x00008080 in ?? ()
=> 0x00008080:	66 b8 20 e8	mov    ax,0xe820
Continuing.

Breakpoint 2, 0x0000808c in ?? ()
=> 0x0000808c:	66 ba 50 41	mov    dx,0x4150
Continuing.

Breakpoint 1, 0x00008094 in ?? ()
=> 0x00008094:	0f 82 8b 00 66 81	jb     0x81668125
0x00008098 in ?? ()
=> 0x00008098:	66 81 fa 50 41	cmp    dx,0x4150
0x0000809f in ?? ()
=> 0x0000809f:	0f 85 80 00 26 66	jne    0x66268125
0x000080a3 in ?? ()
=> 0x000080a3:	26 66 67 8b 0f	mov    cx,WORD PTR es:[bx]
0x000080a8 in ?? ()
=> 0x000080a8:	66 81 f9 00 00	cmp    cx,0x0
$3 = 0xf0000
0x000080af in ?? ()
=> 0x000080af:	75 20	jne    0x80d1
0x000080d1 in ?? ()
=> 0x000080d1:	66 b8 14 00	mov    ax,0x14
Continuing.

Breakpoint 2, 0x0000808c in ?? ()
=> 0x0000808c:	66 ba 50 41	mov    dx,0x4150
Continuing.

Breakpoint 1, 0x00008094 in ?? ()
=> 0x00008094:	0f 82 8b 00 66 81	jb     0x81668125
0x00008098 in ?? ()
=> 0x00008098:	66 81 fa 50 41	cmp    dx,0x4150
0x0000809f in ?? ()
=> 0x0000809f:	0f 85 80 00 26 66	jne    0x66268125
0x000080a3 in ?? ()
=> 0x000080a3:	26 66 67 8b 0f	mov    cx,WORD PTR es:[bx]
0x000080a8 in ?? ()
=> 0x000080a8:	66 81 f9 00 00	cmp    cx,0x0
$4 = 0x100000
0x000080af in ?? ()
=> 0x000080af:	75 20	jne    0x80d1
0x000080b1 in ?? ()
=> 0x000080b1:	66 83 c7 04	add    di,0x4
0x000080b5 in ?? ()
=> 0x000080b5:	26 66 67 8b 0f	mov    cx,WORD PTR es:[bx]
0x000080ba in ?? ()
=> 0x000080ba:	66 83 f9 00	cmp    cx,0x0
$5 = 0x0
0x000080be in ?? ()
=> 0x000080be:	75 11	jne    0x80d1
0x000080c0 in ?? ()
=> 0x000080c0:	66 83 c7 0c	add    di,0xc
0x8412:	0x00	0x00	0x10	0x00	0x00	0x00	0x00	0x00
0x841a:	0x00	0x00	0xee	0x07	0x00	0x00	0x00	0x00
0x8422:	0x01	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x842a:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x000080c4 in ?? ()
=> 0x000080c4:	26 66 67 8b 0f	mov    cx,WORD PTR es:[bx]
0x000080c9 in ?? ()
=> 0x000080c9:	66 83 f9 01	cmp    cx,0x1
$6 = 0x1
0x000080cd in ?? ()
=> 0x000080cd:	75 54	jne    0x8123
0x000080cf in ?? ()
=> 0x000080cf:	eb 11	jmp    0x80e2
0x000080e2 in ?? ()
=> 0x000080e2:	66 83 ef 08	sub    di,0x8
0x000080e6 in ?? ()
=> 0x000080e6:	26 66 67 8b 0f	mov    cx,WORD PTR es:[bx]
0x000080eb in ?? ()
=> 0x000080eb:	66 81 f9 ff ff	cmp    cx,0xffff
$7 = 0x7ee0000
0x000080f2 in ?? ()
=> 0x000080f2:	77 0f	ja     0x8103
0x000080f4 in ?? ()
=> 0x000080f4:	66 83 c7 04	add    di,0x4
0x000080f8 in ?? ()
=> 0x000080f8:	26 66 67 8b 0f	mov    cx,WORD PTR es:[bx]
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8096
Continuing.

Program received signal SIGINT, Interrupt.
0x0000832f in ?? ()
=> 0x0000832f:	eb fd	jmp    0x832e
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8067
Continuing.

Breakpoint 1, 0x00008067 in ?? ()
=> 0x00008067:	66 bb d2 83	mov    bx,0x83d2
Dump of assembler code from 0x8067 to 0x80af:
=> 0x00008067:	mov    bx,0x83d2
   0x0000806b:	add    BYTE PTR [eax],al
   0x0000806d:	xor    ax,ax
   0x00008070:	mov    WORD PTR [bp+di],ax
   0x00008074:	mov    di,0x83d6
   0x00008078:	add    BYTE PTR [eax],al
   0x0000807a:	mov    bx,0x0
   0x0000807e:	add    BYTE PTR [eax],al
   0x00008080:	mov    ax,0xe820
   0x00008084:	add    BYTE PTR [eax],al
   0x00008086:	mov    cx,0x14
   0x0000808a:	add    BYTE PTR [eax],al
   0x0000808c:	mov    dx,0x4150
   0x00008090:	dec    ebp
   0x00008091:	push   ebx
   0x00008092:	int    0x15
   0x00008094:	jb     0x81668125
   0x0000809a:	cli    
   0x0000809b:	push   eax
   0x0000809c:	inc    ecx
   0x0000809d:	dec    ebp
   0x0000809e:	push   ebx
   0x0000809f:	jne    0x66268125
   0x000080a5:	mov    ecx,DWORD PTR [bx]
   0x000080a8:	cmp    cx,0x0
   0x000080ad:	adc    BYTE PTR [eax],al
End of assembler dump.
Dump of assembler code from 0x80a5 to 0x80ed:
   0x000080a5:	mov    ecx,DWORD PTR [bx]
   0x000080a8:	cmp    cx,0x0
   0x000080ad:	adc    BYTE PTR [eax],al
   0x000080af:	jne    0x80d1
   0x000080b1:	add    di,0x4
   0x000080b5:	mov    cx,WORD PTR es:[bx]
   0x000080ba:	cmp    cx,0x0
   0x000080be:	jne    0x80d1
   0x000080c0:	add    di,0xc
   0x000080c4:	mov    cx,WORD PTR es:[bx]
   0x000080c9:	cmp    cx,0x1
   0x000080cd:	jne    0x8123
   0x000080cf:	jmp    0x80e2
   0x000080d1:	mov    ax,0x14
   0x000080d5:	add    BYTE PTR [eax],al
   0x000080d7:	add    di,ax
   0x000080da:	cmp    bx,0x0
   0x000080de:	je     0x8123
   0x000080e0:	jmp    0x8080
   0x000080e2:	sub    di,0x8
   0x000080e6:	mov    cx,WORD PTR es:[bx]
   0x000080eb:	cmp    cx,0xffff
End of assembler dump.
Dump of assembler code from 0x80eb to 0x810b:
   0x000080eb:	cmp    cx,0xffff
   0x000080f0:	out    dx,eax
   0x000080f1:	push   DWORD PTR [edi+0xf]
   0x000080f4:	add    di,0x4
   0x000080f8:	mov    ax,WORD PTR es:[bx]
   0x000080fd:	cmp    ax,0x0
   0x00008101:	je     0x8109
   0x00008103:	mov    cx,0xffff
   0x00008107:	out    dx,eax
   0x00008108:	jmp    DWORD PTR [esi-0x45]
End of assembler dump.
Breakpoint 2 at 0x80eb
Continuing.

Breakpoint 2, 0x000080eb in ?? ()
=> 0x000080eb:	66 81 f9 ff ff	cmp    cx,0xffff
$1 = 0x7ee0000
0x000080f2 in ?? ()
=> 0x000080f2:	77 0f	ja     0x8103
0x000080f4 in ?? ()
=> 0x000080f4:	66 83 c7 04	add    di,0x4
0x000080f8 in ?? ()
=> 0x000080f8:	26 66 67 8b 07	mov    ax,WORD PTR es:[bx]
0x000080fd in ?? ()
=> 0x000080fd:	66 83 f8 00	cmp    ax,0x0
$2 = 0x0
0x00008101 in ?? ()
=> 0x00008101:	74 06	je     0x8109
0x00008109 in ?? ()
=> 0x00008109:	66 bb d2 83	mov    bx,0x83d2
0x0000810f in ?? ()
=> 0x0000810f:	66 67 89 0b	mov    WORD PTR [bp+di],cx
0x00008113 in ?? ()
=> 0x00008113:	66 bb d2 83	mov    bx,0x83d2
0x83d2:	0x00	0x00	0xee	0x07	0x00	0x00	0x00	0x00
0x83da:	0x00	0x00	0x00	0x00	0x00	0xfc	0x09	0x00
0x83e2:	0x00	0x00	0x00	0x00	0x01	0x00	0x00	0x00
0x83ea:	0x00	0xfc	0x09	0x00	0x00	0x00	0x00	0x00
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    edx,0xcec0092
Dump of assembler code from 0x8000 to 0x8080:
=> 0x00008000:	mov    edx,0xcec0092
   0x00008005:	add    ch,dh
   0x00008007:	xor    dx,dx
   0x0000800a:	mov    ax,0x85bc
   0x0000800e:	add    BYTE PTR [eax],al
   0x00008010:	mov    cx,0x1000
   0x00008014:	add    BYTE PTR [eax],al
   0x00008016:	div    cx
   0x00008019:	cmp    dx,0x0
   0x0000801d:	mul    cx
   0x00008020:	je     0x8028
   0x00008022:	add    ax,0x1000
   0x00008026:	add    BYTE PTR [eax],al
   0x00008028:	mov    bx,0x83bc
   0x0000802c:	add    BYTE PTR [eax],al
   0x0000802e:	mov    cx,0x38
   0x00008032:	add    BYTE PTR [eax],al
   0x00008034:	mov    DWORD PTR [bp+di],ecx
   0x00008037:	mov    WORD PTR [bp+di+0x2],ax
   0x0000803c:	mov    di,ax
   0x0000803f:	mov    ax,0x83c2
   0x00008043:	add    BYTE PTR [eax],al
   0x00008045:	mov    si,ax
   0x00008048:	mov    ecx,0x6766000e
   0x0000804d:	mov    eax,DWORD PTR [esi]
   0x0000804f:	mov    WORD PTR [bx],ax
   0x00008053:	add    di,0x4
   0x00008057:	add    si,0x4
   0x0000805b:	loop   0x804b
   0x0000805d:	mov    bx,0x83bc
   0x00008061:	add    BYTE PTR [eax],al
   0x00008063:	lgdtd  [bp+di]
   0x00008067:	mov    bx,0x83cc
   0x0000806b:	add    BYTE PTR [eax],al
   0x0000806d:	xor    ax,ax
   0x00008070:	mov    WORD PTR [bp+di],ax
   0x00008074:	mov    di,0x83d0
   0x00008078:	add    BYTE PTR [eax],al
   0x0000807a:	mov    cx,0x14
   0x0000807e:	add    BYTE PTR [eax],al
End of assembler dump.
Breakpoint 2 at 0x8067
Continuing.

Breakpoint 2, 0x00008067 in ?? ()
=> 0x00008067:	66 bb cc 83	mov    bx,0x83cc
Dump of assembler code from 0x8067 to 0x80af:
=> 0x00008067:	mov    bx,0x83cc
   0x0000806b:	add    BYTE PTR [eax],al
   0x0000806d:	xor    ax,ax
   0x00008070:	mov    WORD PTR [bp+di],ax
   0x00008074:	mov    di,0x83d0
   0x00008078:	add    BYTE PTR [eax],al
   0x0000807a:	mov    cx,0x14
   0x0000807e:	add    BYTE PTR [eax],al
   0x00008080:	mov    bx,0x0
   0x00008084:	add    BYTE PTR [eax],al
   0x00008086:	mov    ax,0xe820
   0x0000808a:	add    BYTE PTR [eax],al
   0x0000808c:	mov    dx,0x4150
   0x00008090:	dec    ebp
   0x00008091:	push   ebx
   0x00008092:	int    0x15
   0x00008094:	jb     0x8166811f
   0x0000809a:	cli    
   0x0000809b:	push   eax
   0x0000809c:	inc    ecx
   0x0000809d:	dec    ebp
   0x0000809e:	push   ebx
   0x0000809f:	jne    0x811d
   0x000080a1:	mov    si,WORD PTR es:[bx]
   0x000080a6:	cmp    si,0x0
   0x000080ab:	adc    BYTE PTR [eax],al
   0x000080ad:	jne    0x80cf
End of assembler dump.
Breakpoint 3 at 0x8094
Continuing.

Breakpoint 3, 0x00008094 in ?? ()
=> 0x00008094:	0f 82 85 00 66 81	jb     0x8166811f
$1 = 0x14
0x00008098 in ?? ()
=> 0x00008098:	66 81 fa 50 41	cmp    dx,0x4150
0x0000809f in ?? ()
=> 0x0000809f:	75 7c	jne    0x811d
0x000080a1 in ?? ()
=> 0x000080a1:	26 66 67 8b 37	mov    si,WORD PTR es:[bx]
0x000080a6 in ?? ()
=> 0x000080a6:	66 81 fe 00 00	cmp    si,0x0
No symbol table is loaded.  Use the "file" command.
Breakpoint 4 at 0x80a6
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x80a6
Continuing.

Breakpoint 1, 0x000080a6 in ?? ()
=> 0x000080a6:	66 81 fe 00 00	cmp    si,0x0
$1 = 0x0
0x000080ad in ?? ()
=> 0x000080ad:	75 20	jne    0x80cf
0x000080cf in ?? ()
=> 0x000080cf:	66 83 fb 00	cmp    bx,0x0
$2 = 0x1
0x000080d3 in ?? ()
=> 0x000080d3:	74 48	je     0x811d
0x000080d5 in ?? ()
=> 0x000080d5:	eb bb	jmp    0x8092
0x00008092 in ?? ()
=> 0x00008092:	cd 15	int    0x15
Breakpoint 2 at 0x8094
Continuing.

Breakpoint 2, 0x00008094 in ?? ()
=> 0x00008094:	0f 82 85 00 66 81	jb     0x8166811f
0x0000811d in ?? ()
=> 0x0000811d:	66 be a7 83	mov    si,0x83a7
$3 = 0x14
$4 = 0x83d0
0x83d0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x83d8:	0x00	0xfc	0x09	0x00	0x00	0x00	0x00	0x00
0x83e0:	0x01	0x00	0x00	0x00	0x00	0x00	0x00
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8094
Breakpoint 2 at 0x80a6
Continuing.

Breakpoint 1, 0x00008094 in ?? ()
=> 0x00008094:	0f 82 88 00 66 81	jb     0x81668122
0x00008098 in ?? ()
=> 0x00008098:	66 81 fa 50 41	cmp    dx,0x4150
0x0000809f in ?? ()
=> 0x0000809f:	75 7f	jne    0x8120
0x000080a1 in ?? ()
=> 0x000080a1:	26 66 67 8b 37	mov    si,WORD PTR es:[bx]

Breakpoint 2, 0x000080a6 in ?? ()
=> 0x000080a6:	66 81 fe 00 00	cmp    si,0x0
$1 = 0x0
Continuing.

Breakpoint 1, 0x00008094 in ?? ()
=> 0x00008094:	0f 82 88 00 66 81	jb     0x81668122
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8094
Breakpoint 2 at 0x80a6
Continuing.

Breakpoint 1, 0x00008094 in ?? ()
=> 0x00008094:	0f 82 88 00 66 81	jb     0x81668122
0x00008098 in ?? ()
=> 0x00008098:	66 81 fa 50 41	cmp    dx,0x4150
0x0000809f in ?? ()
=> 0x0000809f:	75 7f	jne    0x8120
Continuing.

Breakpoint 2, 0x000080a6 in ?? ()
=> 0x000080a6:	66 81 fe 00 00	cmp    si,0x0
Continuing.

Breakpoint 1, 0x00008094 in ?? ()
=> 0x00008094:	0f 82 88 00 66 81	jb     0x81668122
0x00008120 in ?? ()
=> 0x00008120:	66 be aa 83	mov    si,0x83aa
$1 = 0x83e7
0x83e7:	0x00	0x00	0x00	0x92	0xcf	0x00	0xff	0xff
0x83ef:	0x00	0x00	0x10	0x9a	0xcf	0x00	0xff	0xff
0x83f7:	0x00	0x00	0x10	0x92
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8067
Continuing.

Breakpoint 1, 0x00008067 in ?? ()
=> 0x00008067:	66 bb d2 83	mov    bx,0x83d2
Dump of assembler code from 0x8067 to 0x80af:
=> 0x00008067:	mov    bx,0x83d2
   0x0000806b:	add    BYTE PTR [eax],al
   0x0000806d:	xor    ax,ax
   0x00008070:	mov    WORD PTR [bp+di],ax
   0x00008074:	mov    di,0x83d6
   0x00008078:	add    BYTE PTR [eax],al
   0x0000807a:	mov    cx,0x14
   0x0000807e:	add    BYTE PTR [eax],al
   0x00008080:	mov    bx,0x0
   0x00008084:	add    BYTE PTR [eax],al
   0x00008086:	mov    ax,0xe820
   0x0000808a:	add    BYTE PTR [eax],al
   0x0000808c:	mov    dx,0x4150
   0x00008090:	dec    ebp
   0x00008091:	push   ebx
   0x00008092:	xor    si,si
   0x00008095:	int    0x15
   0x00008097:	jb     0x81668125
   0x0000809d:	cli    
   0x0000809e:	push   eax
   0x0000809f:	inc    ecx
   0x000080a0:	dec    ebp
   0x000080a1:	push   ebx
   0x000080a2:	jne    0x8123
   0x000080a4:	mov    si,WORD PTR es:[bx]
   0x000080a9:	cmp    si,0x0
   0x000080ae:	adc    BYTE PTR [eax],al
End of assembler dump.
Breakpoint 2 at 0x8092
Continuing.

Breakpoint 2, 0x00008092 in ?? ()
=> 0x00008092:	66 31 f6	xor    si,si
Dump of assembler code from 0x8092 to 0x80da:
=> 0x00008092:	xor    si,si
   0x00008095:	int    0x15
   0x00008097:	jb     0x81668125
   0x0000809d:	cli    
   0x0000809e:	push   eax
   0x0000809f:	inc    ecx
   0x000080a0:	dec    ebp
   0x000080a1:	push   ebx
   0x000080a2:	jne    0x8123
   0x000080a4:	mov    si,WORD PTR es:[bx]
   0x000080a9:	cmp    si,0x0
   0x000080ae:	adc    BYTE PTR [eax],al
   0x000080b0:	jne    0x80d2
   0x000080b2:	add    di,0x4
   0x000080b6:	mov    si,WORD PTR es:[bx]
   0x000080bb:	cmp    si,0x0
   0x000080bf:	jne    0x80d2
   0x000080c1:	add    di,0xc
   0x000080c5:	mov    si,WORD PTR es:[bx]
   0x000080ca:	cmp    si,0x1
   0x000080ce:	jne    0x8123
   0x000080d0:	jmp    0x80dd
   0x000080d2:	cmp    bx,0x0
   0x000080d6:	je     0x8123
   0x000080d8:	add    di,cx
End of assembler dump.
Breakpoint 3 at 0x8097
Breakpoint 4 at 0x80a9
Continuing.

Breakpoint 3, 0x00008097 in ?? ()
=> 0x00008097:	0f 82 88 00 66 81	jb     0x81668125
0x0000809b in ?? ()
=> 0x0000809b:	66 81 fa 50 41	cmp    dx,0x4150
Continuing.

Breakpoint 4, 0x000080a9 in ?? ()
=> 0x000080a9:	66 81 fe 00 00	cmp    si,0x0
$1 = 0x0
Continuing.

Breakpoint 2, 0x00008092 in ?? ()
=> 0x00008092:	66 31 f6	xor    si,si
0x00008095 in ?? ()
=> 0x00008095:	cd 15	int    0x15
$2 = 0x0
Continuing.

Breakpoint 3, 0x00008097 in ?? ()
=> 0x00008097:	0f 82 88 00 66 81	jb     0x81668125
0x00008123 in ?? ()
=> 0x00008123:	66 be ad 83	mov    si,0x83ad
$3 = 0x534d8650
$4 = 0x534d4150
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
A syntax error in expression, near `b *0x80a9
'.
Invalid character '\' in expression.
Breakpoint 1 at 0x8097
Breakpoint 2 at 0x80a9
Continuing.

Breakpoint 1, 0x00008097 in ?? ()
=> 0x00008097:	0f 82 88 00 66 81	jb     0x81668125
$1 = 0x534d4150
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8067
Continuing.

Breakpoint 1, 0x00008067 in ?? ()
=> 0x00008067:	66 bb d2 83	mov    bx,0x83d2
Dump of assembler code from 0x8067 to 0x80af:
=> 0x00008067:	mov    bx,0x83d2
   0x0000806b:	add    BYTE PTR [eax],al
   0x0000806d:	xor    ax,ax
   0x00008070:	mov    WORD PTR [bp+di],ax
   0x00008074:	mov    di,0x83d6
   0x00008078:	add    BYTE PTR [eax],al
   0x0000807a:	mov    cx,0x14
   0x0000807e:	add    BYTE PTR [eax],al
   0x00008080:	mov    bx,0x0
   0x00008084:	add    BYTE PTR [eax],al
   0x00008086:	mov    dx,0x4150
   0x0000808a:	dec    ebp
   0x0000808b:	push   ebx
   0x0000808c:	xor    si,si
   0x0000808f:	mov    ax,0xe820
   0x00008093:	add    BYTE PTR [eax],al
   0x00008095:	int    0x15
   0x00008097:	jb     0x81668125
   0x0000809d:	cli    
   0x0000809e:	push   eax
   0x0000809f:	inc    ecx
   0x000080a0:	dec    ebp
   0x000080a1:	push   ebx
   0x000080a2:	jne    0x8123
   0x000080a4:	mov    si,WORD PTR es:[bx]
   0x000080a9:	cmp    si,0x0
   0x000080ae:	adc    BYTE PTR [eax],al
End of assembler dump.
Breakpoint 2 at 0x80a4
Breakpoint 3 at 0x8097
Continuing.

Breakpoint 3, 0x00008097 in ?? ()
=> 0x00008097:	0f 82 88 00 66 81	jb     0x81668125
0x0000809b in ?? ()
=> 0x0000809b:	66 81 fa 50 41	cmp    dx,0x4150
$1 = 0x534d4150
Continuing.

Breakpoint 2, 0x000080a4 in ?? ()
=> 0x000080a4:	26 66 67 8b 37	mov    si,WORD PTR es:[bx]
0x000080a9 in ?? ()
=> 0x000080a9:	66 81 fe 00 00	cmp    si,0x0
$2 = 0x0
Continuing.

Breakpoint 3, 0x00008097 in ?? ()
=> 0x00008097:	0f 82 88 00 66 81	jb     0x81668125
0x0000809b in ?? ()
=> 0x0000809b:	66 81 fa 50 41	cmp    dx,0x4150
Continuing.

Breakpoint 2, 0x000080a4 in ?? ()
=> 0x000080a4:	26 66 67 8b 37	mov    si,WORD PTR es:[bx]
0x000080a9 in ?? ()
=> 0x000080a9:	66 81 fe 00 00	cmp    si,0x0
$3 = 0x9fc00
Continuing.

Breakpoint 3, 0x00008097 in ?? ()
=> 0x00008097:	0f 82 88 00 66 81	jb     0x81668125
0x0000809b in ?? ()
=> 0x0000809b:	66 81 fa 50 41	cmp    dx,0x4150
Continuing.

Breakpoint 2, 0x000080a4 in ?? ()
=> 0x000080a4:	26 66 67 8b 37	mov    si,WORD PTR es:[bx]
0x000080a9 in ?? ()
=> 0x000080a9:	66 81 fe 00 00	cmp    si,0x0
$4 = 0xf0000
0x000080b0 in ?? ()
=> 0x000080b0:	75 20	jne    0x80d2
Continuing.

Breakpoint 3, 0x00008097 in ?? ()
=> 0x00008097:	0f 82 88 00 66 81	jb     0x81668125
0x0000809b in ?? ()
=> 0x0000809b:	66 81 fa 50 41	cmp    dx,0x4150
Continuing.

Breakpoint 2, 0x000080a4 in ?? ()
=> 0x000080a4:	26 66 67 8b 37	mov    si,WORD PTR es:[bx]
0x000080a9 in ?? ()
=> 0x000080a9:	66 81 fe 00 00	cmp    si,0x0
$5 = 0x100000
0x000080b0 in ?? ()
=> 0x000080b0:	75 20	jne    0x80d2
0x000080b2 in ?? ()
=> 0x000080b2:	66 83 c7 04	add    di,0x4
0x000080b6 in ?? ()
=> 0x000080b6:	26 66 67 8b 37	mov    si,WORD PTR es:[bx]
0x000080bb in ?? ()
=> 0x000080bb:	66 83 fe 00	cmp    si,0x0
0x000080bf in ?? ()
=> 0x000080bf:	75 11	jne    0x80d2
0x000080c1 in ?? ()
=> 0x000080c1:	66 83 c7 0c	add    di,0xc
0x000080c5 in ?? ()
=> 0x000080c5:	26 66 67 8b 37	mov    si,WORD PTR es:[bx]
0x000080ca in ?? ()
=> 0x000080ca:	66 83 fe 01	cmp    si,0x1
0x000080ce in ?? ()
=> 0x000080ce:	75 53	jne    0x8123
0x000080d0 in ?? ()
=> 0x000080d0:	eb 0b	jmp    0x80dd
0x000080dd in ?? ()
=> 0x000080dd:	66 83 ef 08	sub    di,0x8
0x000080e1 in ?? ()
=> 0x000080e1:	26 66 67 8b 07	mov    ax,WORD PTR es:[bx]
0x000080e6 in ?? ()
=> 0x000080e6:	66 3d ff ff	cmp    ax,0xffff
$6 = 0x7ee0000
0x000080ec in ?? ()
=> 0x000080ec:	77 0f	ja     0x80fd
0x000080ee in ?? ()
=> 0x000080ee:	66 83 c7 04	add    di,0x4
0x000080f2 in ?? ()
=> 0x000080f2:	26 66 67 8b 1f	mov    bx,WORD PTR es:[bx]
0x000080f7 in ?? ()
=> 0x000080f7:	66 83 fb 00	cmp    bx,0x0
$7 = 0x0
0x000080fb in ?? ()
=> 0x000080fb:	74 06	je     0x8103
0x00008103 in ?? ()
=> 0x00008103:	66 05 00 00	add    ax,0x0
0x00008109 in ?? ()
=> 0x00008109:	66 bb d2 83	mov    bx,0x83d2
$8 = 0x7fe0000
0x0000810f in ?? ()
=> 0x0000810f:	66 67 89 03	mov    WORD PTR [bp+di],ax
Undefined command: "siq".  Try "help".
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x80dd
Continuing.

Breakpoint 1, 0x000080dd in ?? ()
=> 0x000080dd:	eb ad	jmp    0x808c
Dump of assembler code from 0x80dd to 0x80fd:
=> 0x000080dd:	jmp    0x808c
   0x000080df:	sub    di,0x8
   0x000080e3:	mov    ax,WORD PTR es:[bx]
   0x000080e8:	cmp    ax,0x0
   0x000080ec:	lock push DWORD PTR [edi+0xf]
   0x000080f0:	add    di,0x4
   0x000080f4:	mov    bx,WORD PTR es:[bx]
   0x000080f9:	cmp    bx,0x0
End of assembler dump.
Breakpoint 2 at 0x80df
Continuing.

Breakpoint 1, 0x000080dd in ?? ()
=> 0x000080dd:	eb ad	jmp    0x808c
Continuing.

Breakpoint 1, 0x000080dd in ?? ()
=> 0x000080dd:	eb ad	jmp    0x808c
Continuing.

Breakpoint 2, 0x000080df in ?? ()
=> 0x000080df:	66 83 ef 08	sub    di,0x8
0x000080e3 in ?? ()
=> 0x000080e3:	26 66 67 8b 07	mov    ax,WORD PTR es:[bx]
0x000080e8 in ?? ()
=> 0x000080e8:	66 3d 00 00	cmp    ax,0x0
$1 = 0x7ee0000
0x000080ee in ?? ()
=> 0x000080ee:	77 0f	ja     0x80ff
0x000080f0 in ?? ()
=> 0x000080f0:	66 83 c7 04	add    di,0x4
0x000080f4 in ?? ()
=> 0x000080f4:	26 66 67 8b 1f	mov    bx,WORD PTR es:[bx]
0x000080f9 in ?? ()
=> 0x000080f9:	66 83 fb 00	cmp    bx,0x0
$2 = 0x0
0x000080fd in ?? ()
=> 0x000080fd:	74 06	je     0x8105
0x00008105 in ?? ()
=> 0x00008105:	66 83 e8 01	sub    ax,0x1
0x00008109 in ?? ()
=> 0x00008109:	66 05 00 00	add    ax,0x0
$3 = 0x7edffff
0x0000810f in ?? ()
=> 0x0000810f:	66 bb d8 83	mov    bx,0x83d8
$4 = 0x7fdffff
A syntax error in expression, near `{0x7fdffff}=10'.
A syntax error in expression, near `{*0x7fdffff}=10'.
0x7fdffff:	0x0a
0x7fdffff:	0x0a	0x00
0x7fdffff:	0x0a	0x0a
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x810f
Continuing.

Breakpoint 1, 0x0000810f in ?? ()
=> 0x0000810f:	66 bb d8 83	mov    bx,0x83d8
$1 = 0x7ffdffff
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8067
Continuing.

Breakpoint 1, 0x00008067 in ?? ()
=> 0x00008067:	66 bb d2 83	mov    bx,0x83d2
Dump of assembler code from 0x8067 to 0x80af:
=> 0x00008067:	mov    bx,0x83d2
   0x0000806b:	add    BYTE PTR [eax],al
   0x0000806d:	xor    ax,ax
   0x00008070:	mov    WORD PTR [bp+di],ax
   0x00008074:	mov    di,0x83d6
   0x00008078:	add    BYTE PTR [eax],al
   0x0000807a:	mov    cx,0x14
   0x0000807e:	add    BYTE PTR [eax],al
   0x00008080:	mov    bx,0x0
   0x00008084:	add    BYTE PTR [eax],al
   0x00008086:	mov    dx,0x4150
   0x0000808a:	dec    ebp
   0x0000808b:	push   ebx
   0x0000808c:	xor    si,si
   0x0000808f:	mov    ax,0xe820
   0x00008093:	add    BYTE PTR [eax],al
   0x00008095:	int    0x15
   0x00008097:	jb     0x8116
   0x00008099:	cmp    dx,0x4150
   0x0000809e:	dec    ebp
   0x0000809f:	push   ebx
   0x000080a0:	jne    0x8116
   0x000080a2:	mov    si,WORD PTR es:[bx]
   0x000080a7:	cmp    si,0x0
   0x000080ac:	adc    BYTE PTR [eax],al
   0x000080ae:	jne    0x80ca
End of assembler dump.
Dump of assembler code from 0x80a7 to 0x80ef:
   0x000080a7:	cmp    si,0x0
   0x000080ac:	adc    BYTE PTR [eax],al
   0x000080ae:	jne    0x80ca
   0x000080b0:	mov    si,WORD PTR es:[bx+0x4]
   0x000080b6:	cmp    si,0x0
   0x000080ba:	jne    0x80ca
   0x000080bc:	mov    si,WORD PTR es:[bx+0x10]
   0x000080c2:	cmp    si,0x1
   0x000080c6:	jne    0x8116
   0x000080c8:	jmp    0x80d2
   0x000080ca:	cmp    bx,0x0
   0x000080ce:	je     0x8116
   0x000080d0:	jmp    0x808c
   0x000080d2:	mov    ax,WORD PTR es:[bx+0x8]
   0x000080d8:	cmp    ax,0x0
   0x000080dc:	lock push DWORD PTR [edi+0xc]
   0x000080e0:	mov    bx,WORD PTR es:[bx+0xc]
   0x000080e6:	cmp    bx,0x0
   0x000080ea:	je     0x80f2
   0x000080ec:	mov    ax,0x0
End of assembler dump.
Breakpoint 2 at 0x80e6
Continuing.

Breakpoint 2, 0x000080e6 in ?? ()
=> 0x000080e6:	66 83 fb 00	cmp    bx,0x0
$1 = 0x7fee0000
$2 = 0x0
0x000080ea in ?? ()
=> 0x000080ea:	74 06	je     0x80f2
0x000080f2 in ?? ()
=> 0x000080f2:	66 83 e8 01	sub    ax,0x1
0x000080f6 in ?? ()
=> 0x000080f6:	66 05 00 00	add    ax,0x0
0x000080fc in ?? ()
=> 0x000080fc:	66 bb d2 83	mov    bx,0x83d2
$3 = 0x7ffdffff
0x00008102 in ?? ()
=> 0x00008102:	66 67 89 03	mov    WORD PTR [bp+di],ax
0x00008106 in ?? ()
=> 0x00008106:	66 bb d2 83	mov    bx,0x83d2
0x83d2:	0xff	0xff	0xfd	0x7f
0x0000810c in ?? ()
=> 0x0000810c:	66 67 8b 03	mov    ax,WORD PTR [bp+di]
0x00008110 in ?? ()
=> 0x00008110:	66 83 f8 00	cmp    ax,0x0
0x00008114 in ?? ()
=> 0x00008114:	75 41	jne    0x8157
0x00008157 in ?? ()
=> 0x00008157:	fa	cli    
0x00008158 in ?? ()
=> 0x00008158:	0f 20 c0	mov    eax,cr0
0x0000815b in ?? ()
=> 0x0000815b:	66 83 c8 01	or     ax,0x1
0x0000815f in ?? ()
=> 0x0000815f:	0f 22 c0	mov    cr0,eax
0x00008162 in ?? ()
=> 0x00008162:	ea 67 81 18 00 b8 20	jmp    0x20b8:0x188167
source command requires file name of file to source.
0x00008167 in ?? ()
=> 0x00008167:	b8 20 00 00 00	mov    eax,0x20
Dump of assembler code from 0x8167 to 0x81af:
=> 0x00008167:	mov    eax,0x20
   0x0000816c:	mov    ds,eax
   0x0000816e:	mov    es,eax
   0x00008170:	mov    gs,eax
   0x00008172:	mov    fs,eax
   0x00008174:	mov    ss,eax
   0x00008176:	xor    eax,eax
   0x00008178:	mov    ebx,0x83ca
   0x0000817d:	mov    DWORD PTR [ebx],eax
   0x0000817f:	xor    eax,eax
   0x00008181:	mov    ebx,0x83ce
   0x00008186:	mov    DWORD PTR [ebx],eax
   0x00008188:	mov    ebx,esp
   0x0000818a:	mov    ax,WORD PTR [ebx]
   0x0000818d:	mov    ebx,0x83c6
   0x00008192:	mov    WORD PTR [ebx],ax
   0x00008195:	mov    eax,0x21
   0x0000819a:	mov    ebx,0x83c2
   0x0000819f:	mov    DWORD PTR [ebx],eax
   0x000081a1:	mov    ebx,0x83c2
   0x000081a6:	mov    ebx,DWORD PTR [ebx]
   0x000081a8:	cmp    ebx,0x40
   0x000081ab:	ja     0x82f4
End of assembler dump.
Dump of assembler code from 0x81ab to 0x81f3:
   0x000081ab:	ja     0x82f4
   0x000081b1:	mov    edi,0x7e00
   0x000081b6:	call   0x8331
   0x000081bb:	cld    
   0x000081bc:	xor    ebx,ebx
   0x000081be:	mov    esi,ebx
   0x000081c0:	shl    esi,0x5
   0x000081c3:	add    esi,0x7e00
   0x000081c9:	mov    edi,0x8348
   0x000081ce:	mov    ecx,0xb
   0x000081d3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   0x000081d5:	jcxz   0x81ee
   0x000081d8:	add    ebx,0x1
   0x000081db:	cmp    ebx,0x10
   0x000081de:	jl     0x81be
   0x000081e0:	mov    ebx,0x83c2
   0x000081e5:	mov    eax,DWORD PTR [ebx]
   0x000081e7:	add    eax,0x1
   0x000081ea:	mov    DWORD PTR [ebx],eax
   0x000081ec:	jmp    0x81a1
   0x000081ee:	xor    eax,eax
   0x000081f0:	shl    ebx,0x5
End of assembler dump.
Dump of assembler code from 0x81f0 to 0x8210:
   0x000081f0:	shl    ebx,0x5
   0x000081f3:	add    ebx,0x7e00
   0x000081f9:	mov    esi,ebx
   0x000081fb:	mov    eax,DWORD PTR [esi+0x1c]
   0x000081fe:	cmp    eax,0x0
   0x00008201:	je     0x82fb
   0x00008207:	xor    edx,edx
   0x00008209:	mov    ecx,0x200
   0x0000820e:	div    ecx
End of assembler dump.
Breakpoint 3 at 0x81fe
Continuing.

Breakpoint 3, 0x000081fe in ?? ()
=> 0x000081fe:	83 f8 00	cmp    eax,0x0
$4 = 0x4154
0x00008201 in ?? ()
=> 0x00008201:	0f 84 f4 00 00 00	je     0x82fb
0x00008207 in ?? ()
=> 0x00008207:	31 d2	xor    edx,edx
0x00008209 in ?? ()
=> 0x00008209:	b9 00 02 00 00	mov    ecx,0x200
0x0000820e in ?? ()
=> 0x0000820e:	f7 f1	div    ecx
0x00008210 in ?? ()
=> 0x00008210:	83 fa 00	cmp    edx,0x0
$5 = 0x154
$6 = 0x20
0x00008213 in ?? ()
=> 0x00008213:	f7 e1	mul    ecx
0x00008215 in ?? ()
=> 0x00008215:	74 05	je     0x821c
$7 = 0x4000
0x00008217 in ?? ()
=> 0x00008217:	05 00 02 00 00	add    eax,0x200
0x0000821c in ?? ()
=> 0x0000821c:	bb d2 83 00 00	mov    ebx,0x83d2
$8 = 0x4200
0x00008221 in ?? ()
=> 0x00008221:	8b 0b	mov    ecx,DWORD PTR [ebx]
0x83d2:	0xff	0xff	0xfd	0x7f
0x00008223 in ?? ()
=> 0x00008223:	29 c1	sub    ecx,eax
$9 = 0x7ffdffff
0x00008225 in ?? ()
=> 0x00008225:	bb ce 83 00 00	mov    ebx,0x83ce
$10 = 0x7ffdbdff
0x0000822a in ?? ()
=> 0x0000822a:	89 0b	mov    DWORD PTR [ebx],ecx
0x0000822c in ?? ()
=> 0x0000822c:	bb d6 83 00 00	mov    ebx,0x83d6
0x00008231 in ?? ()
=> 0x00008231:	89 0b	mov    DWORD PTR [ebx],ecx
0x00008233 in ?? ()
=> 0x00008233:	31 c0	xor    eax,eax
0x83c0:	0x2e	0x00	0x21	0x00	0x00	0x00	0x69	0x7d
0x83c8:	0x00	0x00	0x00	0x00	0x00	0x00	0xff	0xbd
0x83d0:	0xfd	0x7f	0xff	0xff	0xfd	0x7f	0xff	0xbd
0x83d8:	0xfd	0x7f	0x00	0x00	0x00	0x00	0x00	0x00
Dump of assembler code from 0x8233 to 0x827b:
=> 0x00008233:	xor    eax,eax
   0x00008235:	mov    ax,WORD PTR [esi+0x1a]
   0x00008239:	mov    ebx,0x83c8
   0x0000823e:	mov    WORD PTR [ebx],ax
   0x00008241:	cmp    ax,0xfff7
   0x00008245:	ja     0x82b6
   0x00008247:	cmp    ax,0x2000
   0x0000824b:	jae    0x82fb
   0x00008251:	xor    edx,edx
   0x00008253:	mov    ecx,0xff
   0x00008258:	div    ecx
   0x0000825a:	add    eax,0x1
   0x0000825d:	mov    ebx,0x83ca
   0x00008262:	mov    ebx,DWORD PTR [ebx]
   0x00008264:	cmp    eax,ebx
   0x00008266:	je     0x827b
   0x00008268:	mov    ebx,0x83ca
   0x0000826d:	mov    DWORD PTR [ebx],eax
   0x0000826f:	mov    edi,0x7e00
   0x00008274:	mov    ebx,eax
   0x00008276:	call   0x8331
End of assembler dump.
Dump of assembler code from 0x8276 to 0x82be:
   0x00008276:	call   0x8331
   0x0000827b:	mov    ebx,0x83ce
   0x00008280:	mov    edi,DWORD PTR [ebx]
   0x00008282:	mov    bx,0x83c8
   0x00008286:	mov    bx,WORD PTR [ebx]
   0x00008289:	add    bx,0x3f
   0x0000828d:	call   0x8331
   0x00008292:	mov    ebx,0x83ce
   0x00008297:	mov    DWORD PTR [ebx],edi
   0x00008299:	mov    ebx,0x83c8
   0x0000829e:	mov    bx,WORD PTR [ebx]
   0x000082a1:	shl    bx,1
   0x000082a4:	add    bx,0x7e00
   0x000082a9:	mov    ax,WORD PTR [ebx]
   0x000082ac:	mov    ebx,0x83c8
   0x000082b1:	mov    WORD PTR [ebx],ax
   0x000082b4:	jmp    0x8241
   0x000082b6:	mov    ebx,0x83d6
   0x000082bb:	mov    esi,DWORD PTR [ebx]
   0x000082bd:	mov    eax,DWORD PTR [esi]
End of assembler dump.
Breakpoint 4 at 0x82b6
Continuing.

Breakpoint 4, 0x000082b6 in ?? ()
=> 0x000082b6:	bb d6 83 00 00	mov    ebx,0x83d6
0x7ffdbdff:	0x7f	0x45	0x4c	0x46	0x01	0x01	0x01	0x00
0x7ffdbe07:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x7ffdbe0f:	0x02	0x00	0x03	0x00	0x01	0x00	0x00	0x00
0x7ffdbe17:	0x0c	0x00	0x10	0x00	0x34	0x00	0x00	0x00
0x7ffdfb9f:	0x63	0x00	0x62	0x75	0x66	0x66	0x00	0x6b
0x7ffdfba7:	0x65	0x72	0x6e	0x65	0x6c	0x49	0x6e	0x69
0x7ffdfbaf:	0x74	0x5f	0x00	0x5f	0x5a	0x38	0x74	0x74
0x7ffdfbb7:	0x79	0x54	0x68	0x65	0x6d	0x65	0x63	0x63
0x000082bb in ?? ()
=> 0x000082bb:	8b 33	mov    esi,DWORD PTR [ebx]
0x000082bd in ?? ()
=> 0x000082bd:	8b 06	mov    eax,DWORD PTR [esi]
$11 = 0x7ffdbdff
0x000082bf in ?? ()
=> 0x000082bf:	3d 7f 45 4c 46	cmp    eax,0x464c457f
$12 = 0x464c457f
0x000082c4 in ?? ()
=> 0x000082c4:	0f 85 b6 00 00 00	jne    0x8380
0x000082ca in ?? ()
=> 0x000082ca:	8b 46 04	mov    eax,DWORD PTR [esi+0x4]
0x000082cd in ?? ()
=> 0x000082cd:	3d 01 01 01 00	cmp    eax,0x10101
$13 = 0x10101
0x000082d2 in ?? ()
=> 0x000082d2:	0f 85 a8 00 00 00	jne    0x8380
0x000082d8 in ?? ()
=> 0x000082d8:	8b 46 10	mov    eax,DWORD PTR [esi+0x10]
0x000082db in ?? ()
=> 0x000082db:	3d 02 00 03 00	cmp    eax,0x30002
$14 = 0x30002
0x000082e0 in ?? ()
=> 0x000082e0:	0f 85 9a 00 00 00	jne    0x8380
0x000082e6 in ?? ()
=> 0x000082e6:	8b 46 14	mov    eax,DWORD PTR [esi+0x14]
0x000082e9 in ?? ()
=> 0x000082e9:	83 f8 01	cmp    eax,0x1
$15 = 0x1
0x000082ec in ?? ()
=> 0x000082ec:	0f 85 8e 00 00 00	jne    0x8380
0x000082f2 in ?? ()
=> 0x000082f2:	eb 3a	jmp    0x832e
0x0000832e in ?? ()
=> 0x0000832e:	f4	hlt    
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x82e9
Continuing.

Breakpoint 1, 0x000082e9 in ?? ()
=> 0x000082e9:	83 f8 01	cmp    eax,0x1
0x000082ec in ?? ()
=> 0x000082ec:	0f 85 07 01 00 00	jne    0x83f9
0x000082f2 in ?? ()
=> 0x000082f2:	8b 5e 20	mov    ebx,DWORD PTR [esi+0x20]
$1 = 0x7ffdbdff
0x7ffdbdff:	0x7f	0x45	0x4c	0x46	0x01	0x01	0x01	0x00
0x7ffdbe07:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x7ffdbe0f:	0x02	0x00	0x03	0x00	0x01	0x00	0x00	0x00
0x7ffdbe17:	0x0c	0x00	0x10	0x00	0x34	0x00	0x00	0x00
0x000082f5 in ?? ()
=> 0x000082f5:	31 c9	xor    ecx,ecx
$2 = 0x3ed4
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x82e9
Continuing.

Breakpoint 1, 0x000082e9 in ?? ()
=> 0x000082e9:	83 f8 01	cmp    eax,0x1
0x000082ec in ?? ()
=> 0x000082ec:	0f 85 07 01 00 00	jne    0x83f9
0x000082f2 in ?? ()
=> 0x000082f2:	8b 5e 20	mov    ebx,DWORD PTR [esi+0x20]
0x000082f5 in ?? ()
=> 0x000082f5:	31 c9	xor    ecx,ecx
$1 = 0x7ffd99ff
0x000082f7 in ?? ()
=> 0x000082f7:	66 8b 4e 30	mov    cx,WORD PTR [esi+0x30]
0x000082fb in ?? ()
=> 0x000082fb:	83 e9 01	sub    ecx,0x1
$2 = 0x6380
$3 = 0xe
$4 = 14
0x000082fe in ?? ()
=> 0x000082fe:	01 f3	add    ebx,esi
$5 = 13
0x00008300 in ?? ()
=> 0x00008300:	83 c3 28	add    ebx,0x28
0x00008303 in ?? ()
=> 0x00008303:	8b 43 08	mov    eax,DWORD PTR [ebx+0x8]
$6 = 0x7ffdfda7
0x00008306 in ?? ()
=> 0x00008306:	83 e0 02	and    eax,0x2
$7 = 0x6
0x00008309 in ?? ()
=> 0x00008309:	83 f8 02	cmp    eax,0x2
$8 = 0x2
0x0000830c in ?? ()
=> 0x0000830c:	75 58	jne    0x8366
0x0000830e in ?? ()
=> 0x0000830e:	8b 43 0c	mov    eax,DWORD PTR [ebx+0xc]
0x00008311 in ?? ()
=> 0x00008311:	83 f8 00	cmp    eax,0x0
$9 = 0x100000
0x00008314 in ?? ()
=> 0x00008314:	0f 84 df 00 00 00	je     0x83f9
0x0000831a in ?? ()
=> 0x0000831a:	89 cf	mov    edi,ecx
$10 = 0x7ffdffff
$11 = 0xd
0x0000831c in ?? ()
=> 0x0000831c:	8b 4b 20	mov    ecx,DWORD PTR [ebx+0x20]
$12 = 0xd
0x0000831f in ?? ()
=> 0x0000831f:	31 d2	xor    edx,edx
$13 = 0x1
0x00008321 in ?? ()
=> 0x00008321:	f7 f1	div    ecx
0x00008323 in ?? ()
=> 0x00008323:	83 fa 00	cmp    edx,0x0
$14 = 0x100000
$15 = 0x0
0x00008326 in ?? ()
=> 0x00008326:	0f 85 cd 00 00 00	jne    0x83f9
0x0000832c in ?? ()
=> 0x0000832c:	f7 e1	mul    ecx
0x0000832e in ?? ()
=> 0x0000832e:	89 f9	mov    ecx,edi
$16 = 0xd
0x00008330 in ?? ()
=> 0x00008330:	89 c7	mov    edi,eax
0x00008332 in ?? ()
=> 0x00008332:	89 ca	mov    edx,ecx
$17 = 0x100000
0x00008334 in ?? ()
=> 0x00008334:	8b 4b 14	mov    ecx,DWORD PTR [ebx+0x14]
0x00008337 in ?? ()
=> 0x00008337:	8b 43 04	mov    eax,DWORD PTR [ebx+0x4]
$18 = 0x13
0x0000833a in ?? ()
=> 0x0000833a:	83 f8 08	cmp    eax,0x8
Undefined command: "ir".  Try "help".
eax            0x1                 1
ecx            0x13                19
edx            0xd                 13
ebx            0x7ffdfda7          2147351975
esp            0x7bfc              0x7bfc
ebp            0x7bfe              0x7bfe
esi            0x7ffd99ff          2147326463
edi            0x100000            1048576
eip            0x833a              0x833a
eflags         0x6                 [ IOPL=0 PF ]
cs             0x18                24
ss             0x20                32
ds             0x20                32
es             0x20                32
fs             0x20                32
gs             0x20                32
fs_base        0x0                 0
gs_base        0x0                 0
k_gs_base      0x0                 0
cr0            0x11                [ ET PE ]
cr2            0x0                 0
cr3            0x0                 [ PDBR=0 PCID=0 ]
cr4            0x0                 [ ]
cr8            0x0                 0
efer           0x0                 [ ]
xmm0           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm1           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
Quit
0x0000833d in ?? ()
=> 0x0000833d:	74 1c	je     0x835b
0x0000833f in ?? ()
=> 0x0000833f:	be 4f 84 00 00	mov    esi,0x844f
0x00008344 in ?? ()
=> 0x00008344:	8b 36	mov    esi,DWORD PTR [esi]
0x00008346 in ?? ()
=> 0x00008346:	8b 43 10	mov    eax,DWORD PTR [ebx+0x10]
$19 = 0x7ffd99ff
0x00008349 in ?? ()
=> 0x00008349:	01 c6	add    esi,eax
Invalid character '#' in expression.
$20 = 0x1000
0x0000834b in ?? ()
=> 0x0000834b:	31 c0	xor    eax,eax
0x0000834d in ?? ()
=> 0x0000834d:	8a 06	mov    al,BYTE PTR [esi]
0x0000834f in ?? ()
=> 0x0000834f:	88 07	mov    BYTE PTR [edi],al
$21 = 0xbc
0x00008351 in ?? ()
=> 0x00008351:	83 c7 01	add    edi,0x1
$22 = 0x100000
0x100000:	0xbc	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x00008354 in ?? ()
=> 0x00008354:	83 c6 01	add    esi,0x1
0x00008357 in ?? ()
=> 0x00008357:	e2 f2	loop   0x834b
0x0000834b in ?? ()
=> 0x0000834b:	31 c0	xor    eax,eax
$23 = 0x12
0x0000834d in ?? ()
=> 0x0000834d:	8a 06	mov    al,BYTE PTR [esi]
0x0000834f in ?? ()
=> 0x0000834f:	88 07	mov    BYTE PTR [edi],al
0x00008351 in ?? ()
=> 0x00008351:	83 c7 01	add    edi,0x1
0x00008354 in ?? ()
=> 0x00008354:	83 c6 01	add    esi,0x1
0x00008357 in ?? ()
=> 0x00008357:	e2 f2	loop   0x834b
Dump of assembler code from 0x8357 to 0x8361:
=> 0x00008357:	loop   0x834b
   0x00008359:	jmp    0x8366
   0x0000835b:	xor    eax,eax
   0x0000835d:	mov    BYTE PTR [edi],al
   0x0000835f:	add    edi,0x1
End of assembler dump.
Breakpoint 2 at 0x8359
Continuing.

Breakpoint 2, 0x00008359 in ?? ()
=> 0x00008359:	eb 0b	jmp    0x8366
0x100000:	0xbc	0xbe	0x4f	0x10	0x00	0xe8	0x03	0x00
0x100008:	0x00	0x00	0xf4	0xeb	0xfd	0x55	0x89	0xe5
0x100010:	0x90	0x5d	0xc3	0x00	0x00	0x00	0x00	0x00
0x100018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x00008366 in ?? ()
=> 0x00008366:	83 c3 28	add    ebx,0x28
0x00008369 in ?? ()
=> 0x00008369:	e2 98	loop   0x8303
0x00008303 in ?? ()
=> 0x00008303:	8b 43 08	mov    eax,DWORD PTR [ebx+0x8]
0x00008306 in ?? ()
=> 0x00008306:	83 e0 02	and    eax,0x2
Invalid character '#' in expression.
$24 = 0x3
0x00008309 in ?? ()
=> 0x00008309:	83 f8 02	cmp    eax,0x2
0x0000830c in ?? ()
=> 0x0000830c:	75 58	jne    0x8366
0x0000830e in ?? ()
=> 0x0000830e:	8b 43 0c	mov    eax,DWORD PTR [ebx+0xc]
0x00008311 in ?? ()
=> 0x00008311:	83 f8 00	cmp    eax,0x0
$25 = 0x101000
0x00008314 in ?? ()
=> 0x00008314:	0f 84 df 00 00 00	je     0x83f9
0x0000831a in ?? ()
=> 0x0000831a:	89 cf	mov    edi,ecx
0x0000831c in ?? ()
=> 0x0000831c:	8b 4b 20	mov    ecx,DWORD PTR [ebx+0x20]
0x0000831f in ?? ()
=> 0x0000831f:	31 d2	xor    edx,edx
$26 = 16
0x00008321 in ?? ()
=> 0x00008321:	f7 f1	div    ecx
0x00008323 in ?? ()
=> 0x00008323:	83 fa 00	cmp    edx,0x0
$27 = 0x0
0x00008326 in ?? ()
=> 0x00008326:	0f 85 cd 00 00 00	jne    0x83f9
$28 = 0x10100
0x0000832c in ?? ()
=> 0x0000832c:	f7 e1	mul    ecx
0x0000832e in ?? ()
=> 0x0000832e:	89 f9	mov    ecx,edi
$29 = 0x101000
0x00008330 in ?? ()
=> 0x00008330:	89 c7	mov    edi,eax
0x00008332 in ?? ()
=> 0x00008332:	89 ca	mov    edx,ecx
$30 = -1
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x8000
Continuing.

Breakpoint 1, 0x00008000 in ?? ()
=> 0x00008000:	ba 92 00 ec 0c	mov    edx,0xcec0092
Dump of assembler code from 0x8357 to 0x8361:
   0x00008357:	loop   0x834b
   0x00008359:	mov    ecx,edx
   0x0000835b:	jmp    0x8368
   0x0000835d:	xor    eax,eax
   0x0000835f:	mov    BYTE PTR [edi],al
End of assembler dump.
Breakpoint 2 at 0x8359
Continuing.

Breakpoint 2, 0x00008359 in ?? ()
=> 0x00008359:	89 d1	mov    ecx,edx
0x100000:	0xbc	0xbe	0x4f	0x10	0x00	0xe8	0x03	0x00
0x100008:	0x00	0x00	0xf4	0xeb	0xfd	0x55	0x89	0xe5
0x100010:	0x90	0x5d	0xc3	0x00	0x00	0x00	0x00	0x00
0x100018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x0000835b in ?? ()
=> 0x0000835b:	eb 0b	jmp    0x8368
$1 = 0xd
$2 = 0xd
$3 = 13
0x00008368 in ?? ()
=> 0x00008368:	83 c3 28	add    ebx,0x28
0x0000836b in ?? ()
=> 0x0000836b:	e2 96	loop   0x8303
0x00008303 in ?? ()
=> 0x00008303:	8b 43 08	mov    eax,DWORD PTR [ebx+0x8]
$4 = 12
0x00008306 in ?? ()
=> 0x00008306:	83 e0 02	and    eax,0x2
0x00008309 in ?? ()
=> 0x00008309:	83 f8 02	cmp    eax,0x2
0x0000830c in ?? ()
=> 0x0000830c:	75 5a	jne    0x8368
0x0000830e in ?? ()
=> 0x0000830e:	8b 43 0c	mov    eax,DWORD PTR [ebx+0xc]
0x00008311 in ?? ()
=> 0x00008311:	83 f8 00	cmp    eax,0x0
0x00008314 in ?? ()
=> 0x00008314:	0f 84 e1 00 00 00	je     0x83fb
0x0000831a in ?? ()
=> 0x0000831a:	89 cf	mov    edi,ecx
0x0000831c in ?? ()
=> 0x0000831c:	8b 4b 20	mov    ecx,DWORD PTR [ebx+0x20]
0x0000831f in ?? ()
=> 0x0000831f:	31 d2	xor    edx,edx
0x00008321 in ?? ()
=> 0x00008321:	f7 f1	div    ecx
0x00008323 in ?? ()
=> 0x00008323:	83 fa 00	cmp    edx,0x0
0x00008326 in ?? ()
=> 0x00008326:	0f 85 cf 00 00 00	jne    0x83fb
0x0000832c in ?? ()
=> 0x0000832c:	f7 e1	mul    ecx
0x0000832e in ?? ()
=> 0x0000832e:	89 f9	mov    ecx,edi
$5 = 0x101000
0x00008330 in ?? ()
=> 0x00008330:	89 c7	mov    edi,eax
0x00008332 in ?? ()
=> 0x00008332:	89 ca	mov    edx,ecx
0x00008334 in ?? ()
=> 0x00008334:	8b 4b 14	mov    ecx,DWORD PTR [ebx+0x14]
0x00008337 in ?? ()
=> 0x00008337:	8b 43 04	mov    eax,DWORD PTR [ebx+0x4]
$6 = 0x3fbe
0x0000833a in ?? ()
=> 0x0000833a:	83 f8 08	cmp    eax,0x8
$7 = 0x8
0x0000833d in ?? ()
=> 0x0000833d:	74 1e	je     0x835d
0x0000835d in ?? ()
=> 0x0000835d:	31 c0	xor    eax,eax
0x0000835f in ?? ()
=> 0x0000835f:	88 07	mov    BYTE PTR [edi],al
0x00008361 in ?? ()
=> 0x00008361:	83 c7 01	add    edi,0x1
Dump of assembler code from 0x8361 to 0x8371:
=> 0x00008361:	add    edi,0x1
   0x00008364:	loop   0x835d
   0x00008366:	mov    ecx,edx
   0x00008368:	add    ebx,0x28
   0x0000836b:	loop   0x8303
   0x0000836d:	jmp    0x83a9
   0x0000836f:	mov    esi,0x83cf
End of assembler dump.
Breakpoint 3 at 0x8366
Continuing.

Breakpoint 3, 0x00008366 in ?? ()
=> 0x00008366:	89 d1	mov    ecx,edx
$8 = 12
0x00008368 in ?? ()
=> 0x00008368:	83 c3 28	add    ebx,0x28
0x0000836b in ?? ()
=> 0x0000836b:	e2 96	loop   0x8303
0x00008303 in ?? ()
=> 0x00008303:	8b 43 08	mov    eax,DWORD PTR [ebx+0x8]
0x00008306 in ?? ()
=> 0x00008306:	83 e0 02	and    eax,0x2
0x00008309 in ?? ()
=> 0x00008309:	83 f8 02	cmp    eax,0x2
$9 = 0x2
Continuing.

Breakpoint 2, 0x00008359 in ?? ()
=> 0x00008359:	89 d1	mov    ecx,edx
0x104fc0:	0x14	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104fc8:	0x01	0x7a	0x52	0x00	0x01	0x7c	0x08	0x01
0x104fd0:	0x1b	0x0c	0x04	0x04	0x88	0x01	0x00	0x00
0x104fd8:	0x1c	0x00	0x00	0x00	0x1c	0x00	0x00	0x00
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x82e9
Continuing.

Breakpoint 1, 0x000082e9 in ?? ()
=> 0x000082e9:	83 f8 01	cmp    eax,0x1
Dump of assembler code from 0x82e9 to 0x8331:
=> 0x000082e9:	cmp    eax,0x1
   0x000082ec:	jne    0x8416
   0x000082f2:	mov    ebx,DWORD PTR [esi+0x20]
   0x000082f5:	xor    ecx,ecx
   0x000082f7:	mov    cx,WORD PTR [esi+0x30]
   0x000082fb:	sub    ecx,0x1
   0x000082fe:	add    ebx,esi
   0x00008300:	add    ebx,0x28
   0x00008303:	mov    eax,DWORD PTR [ebx+0x8]
   0x00008306:	and    eax,0x2
   0x00008309:	cmp    eax,0x2
   0x0000830c:	jne    0x8368
   0x0000830e:	mov    eax,DWORD PTR [ebx+0xc]
   0x00008311:	cmp    eax,0x0
   0x00008314:	je     0x8416
   0x0000831a:	mov    edi,ecx
   0x0000831c:	mov    ecx,DWORD PTR [ebx+0x20]
   0x0000831f:	xor    edx,edx
   0x00008321:	div    ecx
   0x00008323:	cmp    edx,0x0
   0x00008326:	jne    0x8416
   0x0000832c:	mul    ecx
   0x0000832e:	mov    ecx,edi
   0x00008330:	mov    edi,eax
End of assembler dump.
Dump of assembler code from 0x8330 to 0x8378:
   0x00008330:	mov    edi,eax
   0x00008332:	mov    edx,ecx
   0x00008334:	mov    ecx,DWORD PTR [ebx+0x14]
   0x00008337:	mov    eax,DWORD PTR [ebx+0x4]
   0x0000833a:	cmp    eax,0x8
   0x0000833d:	xor    eax,eax
   0x0000833f:	je     0x835f
   0x00008341:	mov    esi,0x846c
   0x00008346:	mov    esi,DWORD PTR [esi]
   0x00008348:	mov    eax,DWORD PTR [ebx+0x10]
   0x0000834b:	add    esi,eax
   0x0000834d:	xor    eax,eax
   0x0000834f:	mov    al,BYTE PTR [esi]
   0x00008351:	mov    BYTE PTR [edi],al
   0x00008353:	add    edi,0x1
   0x00008356:	add    esi,0x1
   0x00008359:	loop   0x834d
   0x0000835b:	mov    ecx,edx
   0x0000835d:	jmp    0x8368
   0x0000835f:	mov    BYTE PTR [edi],al
   0x00008361:	add    edi,0x1
   0x00008364:	loop   0x835f
   0x00008366:	mov    ecx,edx
   0x00008368:	add    ebx,0x28
   0x0000836b:	loop   0x8303
   0x0000836d:	mov    esi,0x846c
   0x00008372:	mov    esi,DWORD PTR [esi]
   0x00008374:	mov    eax,DWORD PTR [esi+0x18]
   0x00008377:	mov    esi,0x8468
End of assembler dump.
Dump of assembler code from 0x8377 to 0x83bf:
   0x00008377:	mov    esi,0x8468
   0x0000837c:	mov    ebx,DWORD PTR [esi]
   0x0000837e:	xor    ecx,ecx
   0x00008380:	xor    edx,edx
   0x00008382:	xor    esi,esi
   0x00008384:	xor    edi,edi
   0x00008386:	jmp    eax
   0x00008388:	jmp    0x83c4
   0x0000838a:	mov    esi,0x83ea
   0x0000838f:	jmp    0x8398
   0x00008391:	mov    esi,0x8416
   0x00008396:	jmp    0x8398
   0x00008398:	mov    ecx,esi
   0x0000839a:	mov    edi,0xb8000
   0x0000839f:	mov    ah,0x7
   0x000083a1:	mov    al,BYTE PTR [esi]
   0x000083a3:	cmp    al,0x0
   0x000083a5:	je     0x83b2
   0x000083a7:	mov    WORD PTR [edi],ax
   0x000083aa:	add    esi,0x1
   0x000083ad:	add    edi,0x2
   0x000083b0:	jmp    0x83a1
   0x000083b2:	mov    edx,0x3d4
   0x000083b7:	mov    al,0xf
   0x000083b9:	out    dx,al
   0x000083ba:	mov    edx,0x3d5
End of assembler dump.
Breakpoint 2 at 0x8386
Continuing.

Breakpoint 2, 0x00008386 in ?? ()
=> 0x00008386:	ff e0	jmp    eax
$1 = 0x100000
$2 = 0x7ffdffff
0x00100000 in ?? ()
=> 0x00100000:	00 00	add    BYTE PTR [eax],al
0x100000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x10000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x10008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x10010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x10018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1000000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1000008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1000010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x1000018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Detaching from pid process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x836b
Continuing.

Breakpoint 1, 0x0000836b in ?? ()
=> 0x0000836b:	e2 96	loop   0x8303
0x100000:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100008:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100010:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x100018:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x82e9
Continuing.

Breakpoint 1, 0x000082e9 in ?? ()
=> 0x000082e9:	83 f8 01	cmp    eax,0x1
Dump of assembler code from 0x82e9 to 0x8331:
=> 0x000082e9:	cmp    eax,0x1
   0x000082ec:	jne    0x8416
   0x000082f2:	mov    ebx,DWORD PTR [esi+0x20]
   0x000082f5:	xor    ecx,ecx
   0x000082f7:	mov    cx,WORD PTR [esi+0x30]
   0x000082fb:	sub    ecx,0x1
   0x000082fe:	add    ebx,esi
   0x00008300:	add    ebx,0x28
   0x00008303:	mov    eax,DWORD PTR [ebx+0x8]
   0x00008306:	and    eax,0x2
   0x00008309:	cmp    eax,0x2
   0x0000830c:	jne    0x8368
   0x0000830e:	mov    eax,DWORD PTR [ebx+0xc]
   0x00008311:	cmp    eax,0x0
   0x00008314:	je     0x8416
   0x0000831a:	mov    edi,ecx
   0x0000831c:	mov    ecx,DWORD PTR [ebx+0x20]
   0x0000831f:	xor    edx,edx
   0x00008321:	div    ecx
   0x00008323:	cmp    edx,0x0
   0x00008326:	jne    0x8416
   0x0000832c:	mul    ecx
   0x0000832e:	mov    ecx,edi
   0x00008330:	mov    edi,eax
End of assembler dump.
Dump of assembler code from 0x830 to 0x878:
   0x00000830:	add    BYTE PTR [eax],al
   0x00000832:	add    BYTE PTR [eax],al
   0x00000834:	add    BYTE PTR [eax],al
   0x00000836:	add    BYTE PTR [eax],al
   0x00000838:	add    BYTE PTR [eax],al
   0x0000083a:	add    BYTE PTR [eax],al
   0x0000083c:	add    BYTE PTR [eax],al
   0x0000083e:	add    BYTE PTR [eax],al
   0x00000840:	add    BYTE PTR [eax],al
   0x00000842:	add    BYTE PTR [eax],al
   0x00000844:	add    BYTE PTR [eax],al
   0x00000846:	add    BYTE PTR [eax],al
   0x00000848:	add    BYTE PTR [eax],al
   0x0000084a:	add    BYTE PTR [eax],al
   0x0000084c:	add    BYTE PTR [eax],al
   0x0000084e:	add    BYTE PTR [eax],al
   0x00000850:	add    BYTE PTR [eax],al
   0x00000852:	add    BYTE PTR [eax],al
   0x00000854:	add    BYTE PTR [eax],al
   0x00000856:	add    BYTE PTR [eax],al
   0x00000858:	add    BYTE PTR [eax],al
   0x0000085a:	add    BYTE PTR [eax],al
   0x0000085c:	add    BYTE PTR [eax],al
   0x0000085e:	add    BYTE PTR [eax],al
   0x00000860:	add    BYTE PTR [eax],al
   0x00000862:	add    BYTE PTR [eax],al
   0x00000864:	add    BYTE PTR [eax],al
   0x00000866:	add    BYTE PTR [eax],al
   0x00000868:	add    BYTE PTR [eax],al
   0x0000086a:	add    BYTE PTR [eax],al
   0x0000086c:	add    BYTE PTR [eax],al
   0x0000086e:	add    BYTE PTR [eax],al
   0x00000870:	add    BYTE PTR [eax],al
   0x00000872:	add    BYTE PTR [eax],al
   0x00000874:	add    BYTE PTR [eax],al
   0x00000876:	add    BYTE PTR [eax],al
End of assembler dump.
Dump of assembler code from 0x8330 to 0x8378:
   0x00008330:	mov    edi,eax
   0x00008332:	mov    edx,ecx
   0x00008334:	mov    ecx,DWORD PTR [ebx+0x14]
   0x00008337:	mov    eax,DWORD PTR [ebx+0x4]
   0x0000833a:	cmp    eax,0x8
   0x0000833d:	je     0x835d
   0x0000833f:	mov    esi,0x846c
   0x00008344:	mov    esi,DWORD PTR [esi]
   0x00008346:	mov    eax,DWORD PTR [ebx+0x10]
   0x00008349:	add    esi,eax
   0x0000834b:	xor    eax,eax
   0x0000834d:	mov    al,BYTE PTR [esi]
   0x0000834f:	mov    BYTE PTR [edi],al
   0x00008351:	add    edi,0x1
   0x00008354:	add    esi,0x1
   0x00008357:	loop   0x834b
   0x00008359:	mov    ecx,edx
   0x0000835b:	jmp    0x8368
   0x0000835d:	xor    eax,eax
   0x0000835f:	mov    BYTE PTR [edi],al
   0x00008361:	add    edi,0x1
   0x00008364:	loop   0x835f
   0x00008366:	mov    ecx,edx
   0x00008368:	add    ebx,0x28
   0x0000836b:	loop   0x8303
   0x0000836d:	mov    esi,0x846c
   0x00008372:	mov    esi,DWORD PTR [esi]
   0x00008374:	mov    eax,DWORD PTR [esi+0x18]
   0x00008377:	mov    esi,0x8468
End of assembler dump.
Dump of assembler code from 0x8377 to 0x83bf:
   0x00008377:	mov    esi,0x8468
   0x0000837c:	mov    ebx,DWORD PTR [esi]
   0x0000837e:	xor    ecx,ecx
   0x00008380:	xor    edx,edx
   0x00008382:	xor    esi,esi
   0x00008384:	xor    edi,edi
   0x00008386:	jmp    eax
   0x00008388:	jmp    0x83c4
   0x0000838a:	mov    esi,0x83ea
   0x0000838f:	jmp    0x8398
   0x00008391:	mov    esi,0x8416
   0x00008396:	jmp    0x8398
   0x00008398:	mov    ecx,esi
   0x0000839a:	mov    edi,0xb8000
   0x0000839f:	mov    ah,0x7
   0x000083a1:	mov    al,BYTE PTR [esi]
   0x000083a3:	cmp    al,0x0
   0x000083a5:	je     0x83b2
   0x000083a7:	mov    WORD PTR [edi],ax
   0x000083aa:	add    esi,0x1
   0x000083ad:	add    edi,0x2
   0x000083b0:	jmp    0x83a1
   0x000083b2:	mov    edx,0x3d4
   0x000083b7:	mov    al,0xf
   0x000083b9:	out    dx,al
   0x000083ba:	mov    edx,0x3d5
End of assembler dump.
Breakpoint 2 at 0x8386
Continuing.

Breakpoint 2, 0x00008386 in ?? ()
=> 0x00008386:	ff e0	jmp    eax
0x00100000 in ?? ()
=> 0x00100000:	bc be 4f 10 00	mov    esp,0x104fbe
0x00100005 in ?? ()
=> 0x00100005:	e8 03 00 00 00	call   0x10000d
0x0010000d in ?? ()
=> 0x0010000d:	55	push   ebp
0x0010000e in ?? ()
=> 0x0010000e:	89 e5	mov    ebp,esp
0x00100010 in ?? ()
=> 0x00100010:	90	nop
0x00100011 in ?? ()
=> 0x00100011:	5d	pop    ebp
0x00100012 in ?? ()
=> 0x00100012:	c3	ret    
0x0010000a in ?? ()
=> 0x0010000a:	f4	hlt    
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x100067: file kernel/kernel.cpp, line 13.
Continuing.

Breakpoint 1, kernelMain_ (grubInfoTable=0x7ffdffff) at kernel/kernel.cpp:13
13	    ttyClear();
=> 0x00100067 <kernelMain_(void*)+6>:	e8 4c 01 00 00	call   0x1001b8 <_Z8ttyClearv>
ttyClear () at kernel/tty/tty.cpp:46
46	    for (unsigned short i = 0; i < TTY_HEIGHT * TTY_WIDTH; i++) {
=> 0x001001be <_Z8ttyClearv+6>:	66 c7 45 fe 00 00	mov    WORD PTR [ebp-0x2],0x0
47	        buff[2 * i] = '\0';
=> 0x001001c6 <_Z8ttyClearv+14>:	a1 00 50 10 00	mov    eax,ds:0x105000
48	        buff[2 * i + 1] = theme;
=> 0x001001d6 <_Z8ttyClearv+30>:	a1 00 50 10 00	mov    eax,ds:0x105000
46	    for (unsigned short i = 0; i < TTY_HEIGHT * TTY_WIDTH; i++) {
=> 0x001001ef <_Z8ttyClearv+55>:	0f b7 45 fe	movzx  eax,WORD PTR [ebp-0x2]
   0x001001f3 <_Z8ttyClearv+59>:	83 c0 01	add    eax,0x1
   0x001001f6 <_Z8ttyClearv+62>:	66 89 45 fe	mov    WORD PTR [ebp-0x2],ax
   0x001001fa <_Z8ttyClearv+66>:	66 81 7d fe cf 07	cmp    WORD PTR [ebp-0x2],0x7cf
   0x00100200 <_Z8ttyClearv+72>:	76 c4	jbe    0x1001c6 <_Z8ttyClearv+14>
47	        buff[2 * i] = '\0';
=> 0x001001c6 <_Z8ttyClearv+14>:	a1 00 50 10 00	mov    eax,ds:0x105000
48	        buff[2 * i + 1] = theme;
=> 0x001001d6 <_Z8ttyClearv+30>:	a1 00 50 10 00	mov    eax,ds:0x105000
46	    for (unsigned short i = 0; i < TTY_HEIGHT * TTY_WIDTH; i++) {
=> 0x001001ef <_Z8ttyClearv+55>:	0f b7 45 fe	movzx  eax,WORD PTR [ebp-0x2]
   0x001001f3 <_Z8ttyClearv+59>:	83 c0 01	add    eax,0x1
   0x001001f6 <_Z8ttyClearv+62>:	66 89 45 fe	mov    WORD PTR [ebp-0x2],ax
   0x001001fa <_Z8ttyClearv+66>:	66 81 7d fe cf 07	cmp    WORD PTR [ebp-0x2],0x7cf
   0x00100200 <_Z8ttyClearv+72>:	76 c4	jbe    0x1001c6 <_Z8ttyClearv+14>
$1 = 0xb8000 ""
Breakpoint 2 at 0x10006c: file kernel/kernel.cpp, line 14.
Continuing.

Breakpoint 2, kernelMain_ (grubInfoTable=0xffff) at kernel/kernel.cpp:14
14	    ttyPutStr((char *) "Hello, HixleonOS!\nLine Test1\nLine Test2");
=> 0x0010006c <kernelMain_(void*)+11>:	83 ec 0c	sub    esp,0xc
   0x0010006f <kernelMain_(void*)+14>:	68 00 60 10 00	push   0x106000
   0x00100074 <kernelMain_(void*)+19>:	e8 0a 01 00 00	call   0x100183 <_Z9ttyPutStrPc>
   0x00100079 <kernelMain_(void*)+24>:	83 c4 10	add    esp,0x10
ttyPutStr (str=0x106000 "Hello, HixleonOS!\nLine Test1\nLine Test2") at kernel/tty/tty.cpp:33
33	    while (str[0] != '\0') {
=> 0x00100189 <_Z9ttyPutStrPc+6>:	eb 19	jmp    0x1001a4 <_Z9ttyPutStrPc+33>
34	        ttyPutChar(str[0]);
=> 0x0010018b <_Z9ttyPutStrPc+8>:	8b 45 08	mov    eax,DWORD PTR [ebp+0x8]
   0x0010018e <_Z9ttyPutStrPc+11>:	0f b6 00	movzx  eax,BYTE PTR [eax]
ttyPutChar (ch=72 'H') at kernel/tty/tty.cpp:13
13	    if (ch == '\n') {
=> 0x0010008b <_Z10ttyPutCharc+12>:	80 7d f4 0a	cmp    BYTE PTR [ebp-0xc],0xa
   0x0010008f <_Z10ttyPutCharc+16>:	75 49	jne    0x1000da <_Z10ttyPutCharc+91>
17	    } else if (ch == '\r') {
=> 0x001000da <_Z10ttyPutCharc+91>:	80 7d f4 0d	cmp    BYTE PTR [ebp-0xc],0xd
   0x001000de <_Z10ttyPutCharc+95>:	75 36	jne    0x100116 <_Z10ttyPutCharc+151>
21	        (buff + (2 * offset))[0] = ch;
=> 0x00100116 <_Z10ttyPutCharc+151>:	a1 00 50 10 00	mov    eax,ds:0x105000
22	        (buff + (2 * offset))[1] = theme;
=> 0x0010012f <_Z10ttyPutCharc+176>:	a1 00 50 10 00	mov    eax,ds:0x105000
23	        offset++;
=> 0x0010014e <_Z10ttyPutCharc+207>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100155 <_Z10ttyPutCharc+214>:	83 c0 01	add    eax,0x1
   0x00100158 <_Z10ttyPutCharc+217>:	66 a3 be 4f 10 00	mov    ds:0x104fbe,ax
25	    if (offset >= 1999) {
=> 0x0010015e <_Z10ttyPutCharc+223>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
29	}
=> 0x00100180 <_Z10ttyPutCharc+257>:	90	nop
   0x00100181 <_Z10ttyPutCharc+258>:	c9	leave  
   0x00100182 <_Z10ttyPutCharc+259>:	c3	ret    
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x100065: file kernel/kernel.cpp, line 14.
Continuing.

Breakpoint 1, kernelMain_ (memoryMax=0xffff) at kernel/kernel.cpp:14
14	    ttyPutStr((char *) "Hello, HixleonOS!\nLine Test1\nLine Test2");
=> 0x00100065 <kernelMain_(void*)+11>:	83 ec 0c	sub    esp,0xc
   0x00100068 <kernelMain_(void*)+14>:	68 00 60 10 00	push   0x106000
   0x0010006d <kernelMain_(void*)+19>:	e8 0a 01 00 00	call   0x10017c <_Z9ttyPutStrPc>
   0x00100072 <kernelMain_(void*)+24>:	83 c4 10	add    esp,0x10
$1 = 0x7ffdffff
$2 = (void *) 0xffff
$3 = 0x104fac
0x104fac:	0x10	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104fb4:	0xbe	0x4f	0x10	0x00	0x48	0x00	0x10	0x00
0x104fbc:	0xff	0xff	0x00	0x00	0x00	0x00	0x00	0x00
0x104fc4 <gdt_+4>:	0x00	0x00	0x00	0x00	0xff	0xff	0x00	0x00
$4 = 0x104fb4
Detaching from pid process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x100042: file arch/x86/boot.S, line 35.
Continuing.

Breakpoint 1, GDTDone () at arch/x86/boot.S:35
35	        pushl %ebx
=> 0x00100042 <GDTDone+0>:	53	push   ebx
$1 = 0x104fbe
$2 = 0x104fc0
0x104fc0 <gdt_>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104fc8 <gdt_+8>:	0xff	0xff	0x00	0x00	0x00	0x9a	0xcf	0x00
0x104fd0 <gdt_+16>:	0xff	0xff	0x00	0x00	0x00	0x93	0xcf	0x00
0x104fd8 <gdt_+24>:	0xff	0xff	0x00	0x00	0x00	0xfa	0xcf	0x00
0x104fb0:	0x00	0x00	0x00	0x00	0x00	0x00	0xbe	0x4f
0x104fb8:	0x42	0x00	0x10	0x00	0x08	0x00	0x00	0x00
0x104fc0 <gdt_>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104fc8 <gdt_+8>:	0xff	0xff	0x00	0x00	0x00	0x9a	0xcf	0x00
36	        call kernelMain_
=> 0x00100043 <GDTDone+1>:	e8 12 00 00 00	call   0x10005a <kernelMain_(void*)>
$3 = 0x104fbc
0x104fb0:	0x00	0x00	0x00	0x00	0x00	0x00	0xbe	0x4f
0x104fb8:	0x42	0x00	0x10	0x00	0xff	0xff	0xfd	0x7f
0x104fc0 <gdt_>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104fc8 <gdt_+8>:	0xff	0xff	0x00	0x00	0x00	0x9a	0xcf	0x00
kernelMain_ (memoryMax=0x7ffdffff) at kernel/kernel.cpp:11
11	void kernelMain_(void *memoryMax) {
=> 0x0010005a <kernelMain_(void*)+0>:	55	push   ebp
   0x0010005b <kernelMain_(void*)+1>:	89 e5	mov    ebp,esp
   0x0010005d <kernelMain_(void*)+3>:	83 ec 08	sub    esp,0x8
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x100060: file kernel/kernel.cpp, line 13.
Continuing.

Breakpoint 1, kernelMain_ (memoryMax=0x7ffdffff) at kernel/kernel.cpp:13
13	    ttyClear();
=> 0x00100060 <kernelMain_(void*)+6>:	e8 4c 01 00 00	call   0x1001b1 <_Z8ttyClearv>
$1 = 0x104fac
0x104fac:	0x10	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104fb4:	0xbe	0x4f	0x10	0x00	0x48	0x00	0x10	0x00
0x104fbc:	0xff	0xff	0xfd	0x7f	0x00	0x00	0x00	0x00
0x104fc4 <gdt_+4>:	0x00	0x00	0x00	0x00	0xff	0xff	0x00	0x00
Breakpoint 2 at 0x100065: file kernel/kernel.cpp, line 14.
Continuing.

Breakpoint 2, kernelMain_ (memoryMax=0xffff) at kernel/kernel.cpp:14
14	    ttyPutStr((char *) "Hello, HixleonOS!\nLine Test1\nLine Test2");
=> 0x00100065 <kernelMain_(void*)+11>:	83 ec 0c	sub    esp,0xc
   0x00100068 <kernelMain_(void*)+14>:	68 00 60 10 00	push   0x106000
   0x0010006d <kernelMain_(void*)+19>:	e8 0a 01 00 00	call   0x10017c <_Z9ttyPutStrPc>
   0x00100072 <kernelMain_(void*)+24>:	83 c4 10	add    esp,0x10
Detaching from pid process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x100060: file kernel/kernel.cpp, line 13.
Continuing.

Breakpoint 1, kernelMain_ (memoryMax=0x7ffdffff) at kernel/kernel.cpp:13
13	    ttyClear();
=> 0x00100060 <kernelMain_(void*)+6>:	e8 4c 01 00 00	call   0x1001b1 <_Z8ttyClearv>
$1 = 0x104fac
0x104fac:	0x10	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104fb4:	0xbe	0x4f	0x10	0x00	0x48	0x00	0x10	0x00
0x104fbc:	0xff	0xff	0xfd	0x7f	0x00	0x00	0x00	0x00
0x104fc4 <gdt_+4>:	0x00	0x00	0x00	0x00	0xff	0xff	0x00	0x00
$2 = 0x104fb4
ttyClear () at kernel/tty/tty.cpp:45
45	void ttyClear() {
=> 0x001001b1 <_Z8ttyClearv+0>:	55	push   ebp
   0x001001b2 <_Z8ttyClearv+1>:	89 e5	mov    ebp,esp
   0x001001b4 <_Z8ttyClearv+3>:	83 ec 10	sub    esp,0x10
$3 = 0x104fa8
0x104fa8:	0x65	0x00	0x10	0x00	0x10	0x00	0x00	0x00
0x104fb0:	0x00	0x00	0x00	0x00	0xbe	0x4f	0x10	0x00
0x104fb8:	0x48	0x00	0x10	0x00	0xff	0xff	0xfd	0x7f
0x104fc0 <gdt_>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
$4 = 0x104fb4
0x001001b2	45	void ttyClear() {
   0x001001b1 <_Z8ttyClearv+0>:	55	push   ebp
=> 0x001001b2 <_Z8ttyClearv+1>:	89 e5	mov    ebp,esp
   0x001001b4 <_Z8ttyClearv+3>:	83 ec 10	sub    esp,0x10
$5 = 0x104fa4
0x104fa4:	0xb4	0x4f	0x10	0x00	0x65	0x00	0x10	0x00
0x104fac:	0x10	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104fb4:	0xbe	0x4f	0x10	0x00	0x48	0x00	0x10	0x00
0x104fbc:	0xff	0xff	0xfd	0x7f	0x00	0x00	0x00	0x00
0x001001b4	45	void ttyClear() {
   0x001001b1 <_Z8ttyClearv+0>:	55	push   ebp
   0x001001b2 <_Z8ttyClearv+1>:	89 e5	mov    ebp,esp
=> 0x001001b4 <_Z8ttyClearv+3>:	83 ec 10	sub    esp,0x10
$6 = 0x104fa4
46	    for (unsigned short i = 0; i < TTY_HEIGHT * TTY_WIDTH; i++) {
=> 0x001001b7 <_Z8ttyClearv+6>:	66 c7 45 fe 00 00	mov    WORD PTR [ebp-0x2],0x0
46	    for (unsigned short i = 0; i < TTY_HEIGHT * TTY_WIDTH; i++) {
=> 0x001001bd <_Z8ttyClearv+12>:	eb 34	jmp    0x1001f3 <_Z8ttyClearv+66>
0x001001f3	46	    for (unsigned short i = 0; i < TTY_HEIGHT * TTY_WIDTH; i++) {
   0x001001e8 <_Z8ttyClearv+55>:	0f b7 45 fe	movzx  eax,WORD PTR [ebp-0x2]
   0x001001ec <_Z8ttyClearv+59>:	83 c0 01	add    eax,0x1
   0x001001ef <_Z8ttyClearv+62>:	66 89 45 fe	mov    WORD PTR [ebp-0x2],ax
=> 0x001001f3 <_Z8ttyClearv+66>:	66 81 7d fe cf 07	cmp    WORD PTR [ebp-0x2],0x7cf
   0x001001f9 <_Z8ttyClearv+72>:	76 c4	jbe    0x1001bf <_Z8ttyClearv+14>
0x001001f9	46	    for (unsigned short i = 0; i < TTY_HEIGHT * TTY_WIDTH; i++) {
   0x001001e8 <_Z8ttyClearv+55>:	0f b7 45 fe	movzx  eax,WORD PTR [ebp-0x2]
   0x001001ec <_Z8ttyClearv+59>:	83 c0 01	add    eax,0x1
   0x001001ef <_Z8ttyClearv+62>:	66 89 45 fe	mov    WORD PTR [ebp-0x2],ax
   0x001001f3 <_Z8ttyClearv+66>:	66 81 7d fe cf 07	cmp    WORD PTR [ebp-0x2],0x7cf
=> 0x001001f9 <_Z8ttyClearv+72>:	76 c4	jbe    0x1001bf <_Z8ttyClearv+14>
47	        buff[2 * i] = '\0';
=> 0x001001bf <_Z8ttyClearv+14>:	a1 00 50 10 00	mov    eax,ds:0x105000
47	        buff[2 * i] = '\0';
=> 0x001001c4 <_Z8ttyClearv+19>:	0f b7 55 fe	movzx  edx,WORD PTR [ebp-0x2]
Breakpoint 2 at 0x1001fb: file kernel/tty/tty.cpp, line 50.
Continuing.

Breakpoint 2, ttyClear () at kernel/tty/tty.cpp:50
50	    offset = 0;
=> 0x001001fb <_Z8ttyClearv+74>:	66 c7 05 be 4f 10 00 00 00	mov    WORD PTR ds:0x104fbe,0x0
0x104f94:	0x10	0x00	0x04	0x00	0x00	0x00	0x00	0x00
0x104f9c:	0x00	0x00	0xff	0xff	0x0f	0x00	0xd0	0x07
0x104fa4:	0xb4	0x4f	0x10	0x00	0x65	0x00	0x10	0x00
0x104fac:	0x10	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104f94:	0x10	0x00	0x04	0x00	0x00	0x00	0x00	0x00
0x104f9c:	0x00	0x00	0xff	0xff	0x0f	0x00	0xd0	0x07
0x104fa4:	0xb4	0x4f	0x10	0x00	0x65	0x00	0x10	0x00
0x104fac:	0x10	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104fb4:	0xbe	0x4f	0x10	0x00	0x48	0x00	0x10	0x00
0x104fbc:	0xff	0xff	0xfd	0x7f	0x00	0x00	0x00	0x00
0x104fc4 <gdt_+4>:	0x00	0x00	0x00	0x00	0xff	0xff	0x00	0x00
0x104fcc <gdt_+12>:	0x00	0x9a	0xcf	0x00	0xff	0xff	0x00	0x00
0x104fd4 <gdt_+20>:	0x00	0x93	0xcf	0x00	0xff	0xff	0x00	0x00
51	}
=> 0x00100204 <_Z8ttyClearv+83>:	90	nop
   0x00100205 <_Z8ttyClearv+84>:	c9	leave  
   0x00100206 <_Z8ttyClearv+85>:	c3	ret    
0x00100205	51	}
   0x00100204 <_Z8ttyClearv+83>:	90	nop
=> 0x00100205 <_Z8ttyClearv+84>:	c9	leave  
   0x00100206 <_Z8ttyClearv+85>:	c3	ret    
0x00100206	51	}
   0x00100204 <_Z8ttyClearv+83>:	90	nop
   0x00100205 <_Z8ttyClearv+84>:	c9	leave  
=> 0x00100206 <_Z8ttyClearv+85>:	c3	ret    
0x104fa8:	0x65	0x00	0x10	0x00	0x10	0x00	0x00	0x00
0x104fb0:	0x00	0x00	0x00	0x00	0xbe	0x4f	0x10	0x00
0x104fb8:	0x48	0x00	0x10	0x00	0xff	0xff	0x00	0x00
0x104fc0 <gdt_>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104fc8 <gdt_+8>:	0xff	0xff	0x00	0x00	0x00	0x9a	0xcf	0x00
0x104fd0 <gdt_+16>:	0xff	0xff	0x00	0x00	0x00	0x93	0xcf	0x00
0x104fd8 <gdt_+24>:	0xff	0xff	0x00	0x00	0x00	0xfa	0xcf	0x00
0x104fe0 <gdt_+32>:	0xff	0xff	0x00	0x00	0x00	0xf2	0xcf	0x00
0x104fe8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x100060: file kernel/kernel.cpp, line 13.
Breakpoint 2 at 0x100065: file kernel/kernel.cpp, line 14.
Continuing.

Breakpoint 1, kernelMain_ (memoryMax=0x7ffdffff) at kernel/kernel.cpp:13
13	    ttyClear();
=> 0x00100060 <kernelMain_(void*)+6>:	e8 4c 01 00 00	call   0x1001b1 <_Z8ttyClearv>
Continuing.

Breakpoint 2, kernelMain_ (memoryMax=0x7ffdffff) at kernel/kernel.cpp:14
14	    ttyPutStr((char *) "Hello, HixleonOS!\nLine Test1\nLine Test2");
=> 0x00100065 <kernelMain_(void*)+11>:	83 ec 0c	sub    esp,0xc
   0x00100068 <kernelMain_(void*)+14>:	68 00 60 10 00	push   0x106000
   0x0010006d <kernelMain_(void*)+19>:	e8 0a 01 00 00	call   0x10017c <_Z9ttyPutStrPc>
   0x00100072 <kernelMain_(void*)+24>:	83 c4 10	add    esp,0x10
Continuing.
[Inferior 1 (process 1) exited normally]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
No symbol table is loaded.  Use the "file" command.
Detaching from pid process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
.gdbinit:4: Error in sourced command file:
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x100179: file kernel/tty/tty.cpp, line 29.
Continuing.

Breakpoint 1, ttyPutChar (ch=72 'H') at kernel/tty/tty.cpp:29
29	    ttySetCursor(offset);
=> 0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
   0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
   0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
   0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
$1 = 0x104f58
0x104f50:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104f58:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104f60:	0x00	0x00	0x00	0x00	0x48	0x00	0x00	0x00
0x104f68:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x00100180	29	    ttySetCursor(offset);
   0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
=> 0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
   0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
   0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
   0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
0x00100183	29	    ttySetCursor(offset);
   0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
=> 0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
   0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
   0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
0x00100186	29	    ttySetCursor(offset);
   0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
   0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
=> 0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
   0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
$2 = 0x104f4c
0x104f40:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104f48:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104f50:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104f58:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x00100187	29	    ttySetCursor(offset);
   0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
   0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
   0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
=> 0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
0x104f40:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104f48:	0x01	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104f50:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x104f58:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
ttySetCursor(unsigned short) () at kernel/tty/ttySetCursor.S:6
6	        pushl %ebp
=> 0x00100371 <_Z12ttySetCursort+0>:	55	push   ebp
7	        movl %esp, %ebp
=> 0x00100372 <_Z12ttySetCursort+1>:	89 e5	mov    ebp,esp
9	        xor %eax, %eax
=> 0x00100374 <_Z12ttySetCursort+3>:	31 c0	xor    eax,eax
$3 = 0x104f40
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x100179: file kernel/tty/tty.cpp, line 29.
Continuing.

Breakpoint 1, ttyPutChar (ch=72 'H') at kernel/tty/tty.cpp:29
29	    ttySetCursor(offset);
=> 0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
   0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
   0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
   0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
0x00100180	29	    ttySetCursor(offset);
   0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
=> 0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
   0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
   0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
   0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
0x00100183	29	    ttySetCursor(offset);
   0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
=> 0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
   0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
   0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
0x00100186	29	    ttySetCursor(offset);
   0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
   0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
=> 0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
   0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
0x00100187	29	    ttySetCursor(offset);
   0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
   0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
   0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
=> 0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
ttySetCursor(unsigned short) () at kernel/tty/ttySetCursor.S:6
6	        pushl %ebp
=> 0x00100371 <_Z12ttySetCursort+0>:	55	push   ebp
7	        movl %esp, %ebp
=> 0x00100372 <_Z12ttySetCursort+1>:	89 e5	mov    ebp,esp
9	        xor %eax, %eax
=> 0x00100374 <_Z12ttySetCursort+3>:	31 c0	xor    eax,eax
10	        xor %ecx, %ecx
=> 0x00100376 <_Z12ttySetCursort+5>:	31 c9	xor    ecx,ecx
11	        movw 8(%ebp), %cx
=> 0x00100378 <_Z12ttySetCursort+7>:	66 8b 4d 08	mov    cx,WORD PTR [ebp+0x8]
13	        movw $0x03D4, %dx
=> 0x0010037c <_Z12ttySetCursort+11>:	66 ba d4 03	mov    dx,0x3d4
$1 = 0x1
14	        movb $0x0F, %al
=> 0x00100380 <_Z12ttySetCursort+15>:	b0 0f	mov    al,0xf
15	        outb %al, %dx /* 设置为光标低8位 */
=> 0x00100382 <_Z12ttySetCursort+17>:	ee	out    dx,al
17	        movw $0x03D5, %dx
=> 0x00100383 <_Z12ttySetCursort+18>:	66 ba d5 03	mov    dx,0x3d5
18	        movb %cl, %al
=> 0x00100387 <_Z12ttySetCursort+22>:	88 c8	mov    al,cl
19	        outb %al, %dx /* 设置为光标低8位 */
=> 0x00100389 <_Z12ttySetCursort+24>:	ee	out    dx,al
$2 = 1 '\001'
21	        shrl $8, %ecx
=> 0x0010038a <_Z12ttySetCursort+25>:	c1 e9 08	shr    ecx,0x8
23	        movw $0x03D4, %dx
=> 0x0010038d <_Z12ttySetCursort+28>:	66 ba d4 03	mov    dx,0x3d4
24	        movb $0x0E, %al
=> 0x00100391 <_Z12ttySetCursort+32>:	b0 0e	mov    al,0xe
25	        outb %al, %dx /* 设置为光标高8位 */
=> 0x00100393 <_Z12ttySetCursort+34>:	ee	out    dx,al
27	        movw $0x03D5, %dx
=> 0x00100394 <_Z12ttySetCursort+35>:	66 ba d5 03	mov    dx,0x3d5
28	        movb %cl, %al
=> 0x00100398 <_Z12ttySetCursort+39>:	88 c8	mov    al,cl
29	        outb %al, %dx /* 设置为光标高8位 */
=> 0x0010039a <_Z12ttySetCursort+41>:	ee	out    dx,al
$3 = 0x0
31	        leave
=> 0x0010039b <_Z12ttySetCursort+42>:	c9	leave  
32	        ret
=> 0x0010039c <_Z12ttySetCursort+43>:	c3	ret    
0x0010018c in ttyPutChar (ch=72 'H') at kernel/tty/tty.cpp:29
29	    ttySetCursor(offset);
   0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
   0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
   0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
   0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
=> 0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
30	}
=> 0x0010018f <_Z10ttyPutCharc+279>:	90	nop
   0x00100190 <_Z10ttyPutCharc+280>:	c9	leave  
   0x00100191 <_Z10ttyPutCharc+281>:	c3	ret    
Continuing.

Breakpoint 1, ttyPutChar (ch=101 'e') at kernel/tty/tty.cpp:29
29	    ttySetCursor(offset);
=> 0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
   0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
   0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
   0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
Continuing.

Breakpoint 1, ttyPutChar (ch=108 'l') at kernel/tty/tty.cpp:29
29	    ttySetCursor(offset);
=> 0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
   0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
   0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
   0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
Continuing.

Breakpoint 1, ttyPutChar (ch=108 'l') at kernel/tty/tty.cpp:29
29	    ttySetCursor(offset);
=> 0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
   0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
   0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
   0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
Continuing.

Breakpoint 1, ttyPutChar (ch=111 'o') at kernel/tty/tty.cpp:29
29	    ttySetCursor(offset);
=> 0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
   0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
   0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
   0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
Continuing.

Breakpoint 1, ttyPutChar (ch=44 ',') at kernel/tty/tty.cpp:29
29	    ttySetCursor(offset);
=> 0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
   0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
   0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
   0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
Continuing.

Breakpoint 1, ttyPutChar (ch=32 ' ') at kernel/tty/tty.cpp:29
29	    ttySetCursor(offset);
=> 0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
   0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
   0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
   0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
Continuing.

Breakpoint 1, ttyPutChar (ch=72 'H') at kernel/tty/tty.cpp:29
29	    ttySetCursor(offset);
=> 0x00100179 <_Z10ttyPutCharc+257>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100180 <_Z10ttyPutCharc+264>:	0f b7 c0	movzx  eax,ax
   0x00100183 <_Z10ttyPutCharc+267>:	83 ec 0c	sub    esp,0xc
   0x00100186 <_Z10ttyPutCharc+270>:	50	push   eax
   0x00100187 <_Z10ttyPutCharc+271>:	e8 e5 01 00 00	call   0x100371 <_Z12ttySetCursort>
   0x0010018c <_Z10ttyPutCharc+276>:	83 c4 10	add    esp,0x10
Continuing.

Program received signal SIGINT, Interrupt.
pause () at arch/x86/boot.S:40
40	        jmp pause
=> 0x0010004a <pause+1>:	eb fd	jmp    0x100049 <pause>
Detaching from pid process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x100060: file kernel/kernel.cpp, line 13.
Breakpoint 2 at 0x100065: file kernel/kernel.cpp, line 14.
Breakpoint 3 at 0x100075: file kernel/kernel.cpp, line 15.
Breakpoint 4 at 0x100089: file kernel/kernel.cpp, line 16.
Continuing.

Breakpoint 1, kernelMain_ (memoryMax=0x7ffdffff) at kernel/kernel.cpp:13
13	    ttyClear();
=> 0x00100060 <kernelMain_(void*)+6>:	e8 f6 04 00 00	call   0x10055b <_Z8ttyClearv>
Continuing.

Breakpoint 2, kernelMain_ (memoryMax=0x7ffdffff) at kernel/kernel.cpp:14
14	    ttyPutStr((char *) "Hello, HixleonOS!\nLine Test1\nLine Test2\n");
=> 0x00100065 <kernelMain_(void*)+11>:	83 ec 0c	sub    esp,0xc
   0x00100068 <kernelMain_(void*)+14>:	68 00 60 10 00	push   0x106000
   0x0010006d <kernelMain_(void*)+19>:	e8 03 04 00 00	call   0x100475 <_Z9ttyPutStrPc>
   0x00100072 <kernelMain_(void*)+24>:	83 c4 10	add    esp,0x10
ttyPutStr (str=0x106000 "Hello, HixleonOS!\nLine Test1\nLine Test2\n") at kernel/tty/tty.cpp:86
86	    while (str[0] != '\0') {
=> 0x0010047b <_Z9ttyPutStrPc+6>:	eb 19	jmp    0x100496 <_Z9ttyPutStrPc+33>
87	        ttyPutChar(str[0]);
=> 0x0010047d <_Z9ttyPutStrPc+8>:	8b 45 08	mov    eax,DWORD PTR [ebp+0x8]
   0x00100480 <_Z9ttyPutStrPc+11>:	0f b6 00	movzx  eax,BYTE PTR [eax]
ttyPutChar (ch=72 'H') at kernel/tty/tty.cpp:64
64	    if (ch == '\n') {
=> 0x00100371 <_Z10ttyPutCharc+12>:	80 7d e4 0a	cmp    BYTE PTR [ebp-0x1c],0xa
   0x00100375 <_Z10ttyPutCharc+16>:	75 46	jne    0x1003bd <_Z10ttyPutCharc+88>
68	    } else if (ch == '\r') {
=> 0x001003bd <_Z10ttyPutCharc+88>:	80 7d e4 0d	cmp    BYTE PTR [ebp-0x1c],0xd
   0x001003c1 <_Z10ttyPutCharc+92>:	75 36	jne    0x1003f9 <_Z10ttyPutCharc+148>
72	        ttyBase[2 * ttyOffset] = ch;
=> 0x001003f9 <_Z10ttyPutCharc+148>:	a1 00 50 10 00	mov    eax,ds:0x105000
73	        ttyOffset++;
=> 0x00100412 <_Z10ttyPutCharc+173>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100419 <_Z10ttyPutCharc+180>:	83 c0 01	add    eax,0x1
   0x0010041c <_Z10ttyPutCharc+183>:	66 a3 be 4f 10 00	mov    ds:0x104fbe,ax
75	    if (ttyOffset >= 1999) {
=> 0x00100422 <_Z10ttyPutCharc+189>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
$1 = 1
80	    ttyGetCursor(x, y);
=> 0x00100444 <_Z10ttyPutCharc+223>:	83 ec 08	sub    esp,0x8
   0x00100447 <_Z10ttyPutCharc+226>:	8d 45 f6	lea    eax,[ebp-0xa]
   0x0010044a <_Z10ttyPutCharc+229>:	50	push   eax
   0x0010044b <_Z10ttyPutCharc+230>:	8d 45 f7	lea    eax,[ebp-0x9]
   0x0010044e <_Z10ttyPutCharc+233>:	50	push   eax
   0x0010044f <_Z10ttyPutCharc+234>:	e8 b8 01 00 00	call   0x10060c <_Z12ttyGetCursorRhS_>
   0x00100454 <_Z10ttyPutCharc+239>:	83 c4 10	add    esp,0x10
ttyGetCursor (x=@0x104f67: 0 '\000', y=@0x104f66: 0 '\000') at kernel/tty/tty.cpp:123
123	    x = ttyOffset % TTY_WIDTH;
=> 0x0010060f <_Z12ttyGetCursorRhS_+3>:	0f b7 0d be 4f 10 00	movzx  ecx,WORD PTR ds:0x104fbe
   0x00100616 <_Z12ttyGetCursorRhS_+10>:	0f b7 c1	movzx  eax,cx
   0x00100619 <_Z12ttyGetCursorRhS_+13>:	69 c0 cd cc 00 00	imul   eax,eax,0xcccd
   0x0010061f <_Z12ttyGetCursorRhS_+19>:	c1 e8 10	shr    eax,0x10
   0x00100622 <_Z12ttyGetCursorRhS_+22>:	89 c2	mov    edx,eax
   0x00100624 <_Z12ttyGetCursorRhS_+24>:	66 c1 ea 06	shr    dx,0x6
   0x00100628 <_Z12ttyGetCursorRhS_+28>:	89 d0	mov    eax,edx
   0x0010062a <_Z12ttyGetCursorRhS_+30>:	c1 e0 02	shl    eax,0x2
   0x0010062d <_Z12ttyGetCursorRhS_+33>:	01 d0	add    eax,edx
   0x0010062f <_Z12ttyGetCursorRhS_+35>:	c1 e0 04	shl    eax,0x4
   0x00100632 <_Z12ttyGetCursorRhS_+38>:	29 c1	sub    ecx,eax
   0x00100634 <_Z12ttyGetCursorRhS_+40>:	89 ca	mov    edx,ecx
$2 = 1
$3 = (unsigned char &) @0x104f67: 0 '\000'
$4 = (unsigned char &) @0x104f66: 0 '\000'
124	    x += 1;
=> 0x0010063b <_Z12ttyGetCursorRhS_+47>:	8b 45 08	mov    eax,DWORD PTR [ebp+0x8]
   0x0010063e <_Z12ttyGetCursorRhS_+50>:	0f b6 00	movzx  eax,BYTE PTR [eax]
125	    y = ttyOffset / TTY_WIDTH;
=> 0x00100649 <_Z12ttyGetCursorRhS_+61>:	0f b7 05 be 4f 10 00	movzx  eax,WORD PTR ds:0x104fbe
   0x00100650 <_Z12ttyGetCursorRhS_+68>:	0f b7 c0	movzx  eax,ax
   0x00100653 <_Z12ttyGetCursorRhS_+71>:	69 c0 cd cc 00 00	imul   eax,eax,0xcccd
   0x00100659 <_Z12ttyGetCursorRhS_+77>:	c1 e8 10	shr    eax,0x10
   0x0010065c <_Z12ttyGetCursorRhS_+80>:	66 c1 e8 06	shr    ax,0x6
126	    y += 1;
=> 0x00100667 <_Z12ttyGetCursorRhS_+91>:	8b 45 0c	mov    eax,DWORD PTR [ebp+0xc]
   0x0010066a <_Z12ttyGetCursorRhS_+94>:	0f b6 00	movzx  eax,BYTE PTR [eax]
127	}
=> 0x00100675 <_Z12ttyGetCursorRhS_+105>:	90	nop
   0x00100676 <_Z12ttyGetCursorRhS_+106>:	5d	pop    ebp
   0x00100677 <_Z12ttyGetCursorRhS_+107>:	c3	ret    
ttyPutChar (ch=72 'H') at kernel/tty/tty.cpp:81
81	    ttySetCursor(x, y);
=> 0x00100457 <_Z10ttyPutCharc+242>:	0f b6 45 f6	movzx  eax,BYTE PTR [ebp-0xa]
   0x0010045b <_Z10ttyPutCharc+246>:	0f b6 d0	movzx  edx,al
   0x0010045e <_Z10ttyPutCharc+249>:	0f b6 45 f7	movzx  eax,BYTE PTR [ebp-0x9]
   0x00100462 <_Z10ttyPutCharc+253>:	0f b6 c0	movzx  eax,al
   0x00100465 <_Z10ttyPutCharc+256>:	83 ec 08	sub    esp,0x8
   0x00100468 <_Z10ttyPutCharc+259>:	52	push   edx
   0x00100469 <_Z10ttyPutCharc+260>:	50	push   eax
   0x0010046a <_Z10ttyPutCharc+261>:	e8 19 03 00 00	call   0x100788 <_Z12ttySetCursorhh>
   0x0010046f <_Z10ttyPutCharc+266>:	83 c4 10	add    esp,0x10
$5 = 2 '\002'
$6 = 1 '\001'
0x0010045b	81	    ttySetCursor(x, y);
   0x00100457 <_Z10ttyPutCharc+242>:	0f b6 45 f6	movzx  eax,BYTE PTR [ebp-0xa]
=> 0x0010045b <_Z10ttyPutCharc+246>:	0f b6 d0	movzx  edx,al
   0x0010045e <_Z10ttyPutCharc+249>:	0f b6 45 f7	movzx  eax,BYTE PTR [ebp-0x9]
   0x00100462 <_Z10ttyPutCharc+253>:	0f b6 c0	movzx  eax,al
   0x00100465 <_Z10ttyPutCharc+256>:	83 ec 08	sub    esp,0x8
   0x00100468 <_Z10ttyPutCharc+259>:	52	push   edx
   0x00100469 <_Z10ttyPutCharc+260>:	50	push   eax
   0x0010046a <_Z10ttyPutCharc+261>:	e8 19 03 00 00	call   0x100788 <_Z12ttySetCursorhh>
   0x0010046f <_Z10ttyPutCharc+266>:	83 c4 10	add    esp,0x10
0x0010045e	81	    ttySetCursor(x, y);
   0x00100457 <_Z10ttyPutCharc+242>:	0f b6 45 f6	movzx  eax,BYTE PTR [ebp-0xa]
   0x0010045b <_Z10ttyPutCharc+246>:	0f b6 d0	movzx  edx,al
=> 0x0010045e <_Z10ttyPutCharc+249>:	0f b6 45 f7	movzx  eax,BYTE PTR [ebp-0x9]
   0x00100462 <_Z10ttyPutCharc+253>:	0f b6 c0	movzx  eax,al
   0x00100465 <_Z10ttyPutCharc+256>:	83 ec 08	sub    esp,0x8
   0x00100468 <_Z10ttyPutCharc+259>:	52	push   edx
   0x00100469 <_Z10ttyPutCharc+260>:	50	push   eax
   0x0010046a <_Z10ttyPutCharc+261>:	e8 19 03 00 00	call   0x100788 <_Z12ttySetCursorhh>
   0x0010046f <_Z10ttyPutCharc+266>:	83 c4 10	add    esp,0x10
0x00100462	81	    ttySetCursor(x, y);
   0x00100457 <_Z10ttyPutCharc+242>:	0f b6 45 f6	movzx  eax,BYTE PTR [ebp-0xa]
   0x0010045b <_Z10ttyPutCharc+246>:	0f b6 d0	movzx  edx,al
   0x0010045e <_Z10ttyPutCharc+249>:	0f b6 45 f7	movzx  eax,BYTE PTR [ebp-0x9]
=> 0x00100462 <_Z10ttyPutCharc+253>:	0f b6 c0	movzx  eax,al
   0x00100465 <_Z10ttyPutCharc+256>:	83 ec 08	sub    esp,0x8
   0x00100468 <_Z10ttyPutCharc+259>:	52	push   edx
   0x00100469 <_Z10ttyPutCharc+260>:	50	push   eax
   0x0010046a <_Z10ttyPutCharc+261>:	e8 19 03 00 00	call   0x100788 <_Z12ttySetCursorhh>
   0x0010046f <_Z10ttyPutCharc+266>:	83 c4 10	add    esp,0x10
0x00100465	81	    ttySetCursor(x, y);
   0x00100457 <_Z10ttyPutCharc+242>:	0f b6 45 f6	movzx  eax,BYTE PTR [ebp-0xa]
   0x0010045b <_Z10ttyPutCharc+246>:	0f b6 d0	movzx  edx,al
   0x0010045e <_Z10ttyPutCharc+249>:	0f b6 45 f7	movzx  eax,BYTE PTR [ebp-0x9]
   0x00100462 <_Z10ttyPutCharc+253>:	0f b6 c0	movzx  eax,al
=> 0x00100465 <_Z10ttyPutCharc+256>:	83 ec 08	sub    esp,0x8
   0x00100468 <_Z10ttyPutCharc+259>:	52	push   edx
   0x00100469 <_Z10ttyPutCharc+260>:	50	push   eax
   0x0010046a <_Z10ttyPutCharc+261>:	e8 19 03 00 00	call   0x100788 <_Z12ttySetCursorhh>
   0x0010046f <_Z10ttyPutCharc+266>:	83 c4 10	add    esp,0x10
0x00100468	81	    ttySetCursor(x, y);
   0x00100457 <_Z10ttyPutCharc+242>:	0f b6 45 f6	movzx  eax,BYTE PTR [ebp-0xa]
   0x0010045b <_Z10ttyPutCharc+246>:	0f b6 d0	movzx  edx,al
   0x0010045e <_Z10ttyPutCharc+249>:	0f b6 45 f7	movzx  eax,BYTE PTR [ebp-0x9]
   0x00100462 <_Z10ttyPutCharc+253>:	0f b6 c0	movzx  eax,al
   0x00100465 <_Z10ttyPutCharc+256>:	83 ec 08	sub    esp,0x8
=> 0x00100468 <_Z10ttyPutCharc+259>:	52	push   edx
   0x00100469 <_Z10ttyPutCharc+260>:	50	push   eax
   0x0010046a <_Z10ttyPutCharc+261>:	e8 19 03 00 00	call   0x100788 <_Z12ttySetCursorhh>
   0x0010046f <_Z10ttyPutCharc+266>:	83 c4 10	add    esp,0x10
0x00100469	81	    ttySetCursor(x, y);
   0x00100457 <_Z10ttyPutCharc+242>:	0f b6 45 f6	movzx  eax,BYTE PTR [ebp-0xa]
   0x0010045b <_Z10ttyPutCharc+246>:	0f b6 d0	movzx  edx,al
   0x0010045e <_Z10ttyPutCharc+249>:	0f b6 45 f7	movzx  eax,BYTE PTR [ebp-0x9]
   0x00100462 <_Z10ttyPutCharc+253>:	0f b6 c0	movzx  eax,al
   0x00100465 <_Z10ttyPutCharc+256>:	83 ec 08	sub    esp,0x8
   0x00100468 <_Z10ttyPutCharc+259>:	52	push   edx
=> 0x00100469 <_Z10ttyPutCharc+260>:	50	push   eax
   0x0010046a <_Z10ttyPutCharc+261>:	e8 19 03 00 00	call   0x100788 <_Z12ttySetCursorhh>
   0x0010046f <_Z10ttyPutCharc+266>:	83 c4 10	add    esp,0x10
0x0010046a	81	    ttySetCursor(x, y);
   0x00100457 <_Z10ttyPutCharc+242>:	0f b6 45 f6	movzx  eax,BYTE PTR [ebp-0xa]
   0x0010045b <_Z10ttyPutCharc+246>:	0f b6 d0	movzx  edx,al
   0x0010045e <_Z10ttyPutCharc+249>:	0f b6 45 f7	movzx  eax,BYTE PTR [ebp-0x9]
   0x00100462 <_Z10ttyPutCharc+253>:	0f b6 c0	movzx  eax,al
   0x00100465 <_Z10ttyPutCharc+256>:	83 ec 08	sub    esp,0x8
   0x00100468 <_Z10ttyPutCharc+259>:	52	push   edx
   0x00100469 <_Z10ttyPutCharc+260>:	50	push   eax
=> 0x0010046a <_Z10ttyPutCharc+261>:	e8 19 03 00 00	call   0x100788 <_Z12ttySetCursorhh>
   0x0010046f <_Z10ttyPutCharc+266>:	83 c4 10	add    esp,0x10
ttySetCursor(unsigned char, unsigned char) () at kernel/tty/ttySetCursor.S:6
6	        pushl %ebp
=> 0x00100788 <_Z12ttySetCursorhh+0>:	55	push   ebp
7	        movl %esp, %ebp
=> 0x00100789 <_Z12ttySetCursorhh+1>:	89 e5	mov    ebp,esp
9	        xorl %eax, %eax
=> 0x0010078b <_Z12ttySetCursorhh+3>:	31 c0	xor    eax,eax
10	        xorl %ecx, %ecx
=> 0x0010078d <_Z12ttySetCursorhh+5>:	31 c9	xor    ecx,ecx
12	        movb 12(%ebp), %al
=> 0x0010078f <_Z12ttySetCursorhh+7>:	8a 45 0c	mov    al,BYTE PTR [ebp+0xc]
13	        subb $1, %al
=> 0x00100792 <_Z12ttySetCursorhh+10>:	2c 01	sub    al,0x1
$7 = 0x1
14	        movb $TTY_WIDTH, %cl
=> 0x00100794 <_Z12ttySetCursorhh+12>:	b1 50	mov    cl,0x50
15	        mulw %cx
=> 0x00100796 <_Z12ttySetCursorhh+14>:	66 f7 e1	mul    cx
17	        movb 8(%ebp), %bl
=> 0x00100799 <_Z12ttySetCursorhh+17>:	8a 5d 08	mov    bl,BYTE PTR [ebp+0x8]
$8 = 0x0
18	        subb $1, %bl
=> 0x0010079c <_Z12ttySetCursorhh+20>:	80 eb 01	sub    bl,0x1
19	        addw %bx, %ax
=> 0x0010079f <_Z12ttySetCursorhh+23>:	66 01 d8	add    ax,bx
$9 = 0x7ffdff01
Detaching from pid process 1
Remote connection closed
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x0000fff0 in ?? ()
Breakpoint 1 at 0x100067: file kernel/kernel.cpp, line 14.
Breakpoint 2 at 0x100077: file kernel/kernel.cpp, line 15.
Continuing.

Breakpoint 1, kernelMain_ (memoryMax=0x7ffdffff) at kernel/kernel.cpp:14
14	    ttyPutStr((char *) "Hello, HixleonOS!\nLine Test1\nLine Test2\n");
=> 0x00100067 <kernelMain_(void*)+11>:	83 ec 0c	sub    esp,0xc
   0x0010006a <kernelMain_(void*)+14>:	68 00 60 10 00	push   0x106000
   0x0010006f <kernelMain_(void*)+19>:	e8 03 04 00 00	call   0x100477 <_Z9ttyPutStrPc>
   0x00100074 <kernelMain_(void*)+24>:	83 c4 10	add    esp,0x10
Continuing.

Breakpoint 2, kernelMain_ (memoryMax=0x7ffdffff) at kernel/kernel.cpp:15
15	    ttyPutStr(VGA_COLOR_GREEN, VGA_COLOR_BLACK, (char *) "Color Test1\n");
=> 0x00100077 <kernelMain_(void*)+27>:	83 ec 04	sub    esp,0x4
   0x0010007a <kernelMain_(void*)+30>:	68 29 60 10 00	push   0x106029
   0x0010007f <kernelMain_(void*)+35>:	6a 00	push   0x0
   0x00100081 <kernelMain_(void*)+37>:	6a 02	push   0x2
   0x00100083 <kernelMain_(void*)+39>:	e8 3a 01 00 00	call   0x1001c2 <_Z9ttyPutStrhhPc>
   0x00100088 <kernelMain_(void*)+44>:	83 c4 10	add    esp,0x10
Continuing.
[Inferior 1 (process 1) exited normally]
